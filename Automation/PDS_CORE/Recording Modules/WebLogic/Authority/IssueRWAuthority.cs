///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_CORE.Recording_Modules.WebLogic.Authority
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The IssueRWAuthority recording.
    /// </summary>
    [TestModule("4cc5e39f-b0f1-466f-929f-38e45bc9b67b", ModuleType.Recording, 1)]
    public partial class IssueRWAuthority : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_CORE.PDS_CORERepository repository.
        /// </summary>
        public static global::PDS_CORE.PDS_CORERepository repo = global::PDS_CORE.PDS_CORERepository.Instance;

        static IssueRWAuthority instance = new IssueRWAuthority();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public IssueRWAuthority()
        {
            factory = "div1";
            user = "sdisp2";
            logicalPosition = "G2UA6181MM4E_JHarrison";
            authorityType = "R/W";
            language = "English";
            clientId = "-1";
            toWorker = "Joe";
            atLocation = "BLUFORD";
            beginStation = "N BLUFORD IL";
            endStation = "BLUFORD IL";
            track = "MAIN";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static IssueRWAuthority Instance
        {
            get { return instance; }
        }

#region Variables

        string _factory;

        /// <summary>
        /// Gets or sets the value of variable factory.
        /// </summary>
        [TestVariable("59af7b1d-b521-476d-a072-4c05491821c7")]
        public string factory
        {
            get { return _factory; }
            set { _factory = value; }
        }

        string _user;

        /// <summary>
        /// Gets or sets the value of variable user.
        /// </summary>
        [TestVariable("51439f25-f5e6-43e5-8ce4-89bbff627ed4")]
        public string user
        {
            get { return _user; }
            set { _user = value; }
        }

        string _logicalPosition;

        /// <summary>
        /// Gets or sets the value of variable logicalPosition.
        /// </summary>
        [TestVariable("92f20a25-0d6b-4e52-94a9-62572596daaa")]
        public string logicalPosition
        {
            get { return _logicalPosition; }
            set { _logicalPosition = value; }
        }

        string _authorityType;

        /// <summary>
        /// Gets or sets the value of variable authorityType.
        /// </summary>
        [TestVariable("0d85cf63-a8ab-4465-90bb-3303230b3395")]
        public string authorityType
        {
            get { return _authorityType; }
            set { _authorityType = value; }
        }

        string _language;

        /// <summary>
        /// Gets or sets the value of variable language.
        /// </summary>
        [TestVariable("33b96cfc-0ac4-4384-85dd-a9248ea353eb")]
        public string language
        {
            get { return _language; }
            set { _language = value; }
        }

        string _clientId;

        /// <summary>
        /// Gets or sets the value of variable clientId.
        /// </summary>
        [TestVariable("78c8a399-273e-4c28-829b-adb0c7d0d96c")]
        public string clientId
        {
            get { return _clientId; }
            set { _clientId = value; }
        }

        string _toWorker;

        /// <summary>
        /// Gets or sets the value of variable toWorker.
        /// </summary>
        [TestVariable("f9bbeca4-ece5-444a-b33e-97199c4671cc")]
        public string toWorker
        {
            get { return _toWorker; }
            set { _toWorker = value; }
        }

        string _atLocation;

        /// <summary>
        /// Gets or sets the value of variable atLocation.
        /// </summary>
        [TestVariable("7a602c96-5654-4158-8c62-9ea2ce7fd9d6")]
        public string atLocation
        {
            get { return _atLocation; }
            set { _atLocation = value; }
        }

        string _beginStation;

        /// <summary>
        /// Gets or sets the value of variable beginStation.
        /// </summary>
        [TestVariable("3958cd90-e738-4c65-b6de-106ce0a7eee2")]
        public string beginStation
        {
            get { return _beginStation; }
            set { _beginStation = value; }
        }

        string _endStation;

        /// <summary>
        /// Gets or sets the value of variable endStation.
        /// </summary>
        [TestVariable("b19b12ea-e330-43c2-8794-74997530db38")]
        public string endStation
        {
            get { return _endStation; }
            set { _endStation = value; }
        }

        string _track;

        /// <summary>
        /// Gets or sets the value of variable track.
        /// </summary>
        [TestVariable("8c8e81cd-e6d7-4e6c-9269-edb66a4345fe")]
        public string track
        {
            get { return _track; }
            set { _track = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Code_Utils.Webservices.HeadlessActions.IssueRWAuthorityCall(factory, language, user, logicalPosition, clientId, authorityType, toWorker, atLocation, beginStation, endStation, track);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 15s.", new RecordItemIndex(1));
            Delay.Duration(15000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
