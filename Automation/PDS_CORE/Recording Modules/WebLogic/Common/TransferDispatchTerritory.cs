///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_CORE.Recording_Modules.WebLogic.Common
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The TransferDispatchTerritory recording.
    /// </summary>
    [TestModule("8d47c30c-768f-44ca-b262-66bae9723195", ModuleType.Recording, 1)]
    public partial class TransferDispatchTerritory : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_CORE.PDS_CORERepository repository.
        /// </summary>
        public static global::PDS_CORE.PDS_CORERepository repo = global::PDS_CORE.PDS_CORERepository.Instance;

        static TransferDispatchTerritory instance = new TransferDispatchTerritory();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public TransferDispatchTerritory()
        {
            factory = "LOGICAL_POSITION_SMI_div1";
            language = "English";
            user = "sdisp1";
            client = "-1";
            arguments = "G5CD8272P5QE";
            logicalPosition = "G5CD8272P5QE";
            territoryNames = "Desk 02: Chicago;Desk 02: Chicago:2;Desk 02: Chicago:3";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static TransferDispatchTerritory Instance
        {
            get { return instance; }
        }

#region Variables

        string _factory;

        /// <summary>
        /// Gets or sets the value of variable factory.
        /// </summary>
        [TestVariable("94c1bdcf-51cb-4ccd-8254-49e39a388483")]
        public string factory
        {
            get { return _factory; }
            set { _factory = value; }
        }

        string _language;

        /// <summary>
        /// Gets or sets the value of variable language.
        /// </summary>
        [TestVariable("fea8df27-fb32-448d-9ba7-0aa8e93dcdbf")]
        public string language
        {
            get { return _language; }
            set { _language = value; }
        }

        string _user;

        /// <summary>
        /// Gets or sets the value of variable user.
        /// </summary>
        [TestVariable("9e720640-f025-45dc-b1a0-01adf2ebbfe9")]
        public string user
        {
            get { return _user; }
            set { _user = value; }
        }

        string _client;

        /// <summary>
        /// Gets or sets the value of variable client.
        /// </summary>
        [TestVariable("c6ff5846-0486-4336-b6c1-a4c201ae7d76")]
        public string client
        {
            get { return _client; }
            set { _client = value; }
        }

        string _arguments;

        /// <summary>
        /// Gets or sets the value of variable arguments.
        /// </summary>
        [TestVariable("958cd3d8-4624-40d3-8093-e75d0374a465")]
        public string arguments
        {
            get { return _arguments; }
            set { _arguments = value; }
        }

        string _logicalPosition;

        /// <summary>
        /// Gets or sets the value of variable logicalPosition.
        /// </summary>
        [TestVariable("c4e5e017-e65b-4df0-8c2b-d60498f128f5")]
        public string logicalPosition
        {
            get { return _logicalPosition; }
            set { _logicalPosition = value; }
        }

        string _territoryNames;

        /// <summary>
        /// Gets or sets the value of variable territoryNames.
        /// </summary>
        [TestVariable("41be3eb9-6c3b-451a-9fda-9e0320fef78b")]
        public string territoryNames
        {
            get { return _territoryNames; }
            set { _territoryNames = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Code_Utils.Webservices.HeadlessActions.GetDispatchTerritoriesCall(factory, language, user, logicalPosition, client, arguments);
            Delay.Milliseconds(0);
            
            Code_Utils.Webservices.HeadlessActions.RefreshTaskListCall("TASK_LIST_SMI_div1", language, user, logicalPosition, client, "REFRESH");
            Delay.Milliseconds(0);
            
            Code_Utils.Webservices.HeadlessActions.LoadSummaryListCall("TRT_TRAIN_SHEET_SMI_div1", "TRT_TRAIN_SHEET", "GET_TRAIN_STATUS_SUMMARY", language, user, logicalPosition, client, territoryNames);
            Delay.Milliseconds(0);
            
            Code_Utils.Webservices.HeadlessActions.RelieveUserOfRecord("LOGICAL_POSITION_SMI_div1", language, user, logicalPosition, client, "RELIEVE_UOR;sdisp1;G5CD8272P5QE");
            Delay.Milliseconds(0);
            
            Code_Utils.Webservices.HeadlessActions.GetLogicalPositionCall("LOGICAL_POSITION_SMI_div1", language, user, logicalPosition, client, "G5CD8272P5QE;3.2.12");
            Delay.Milliseconds(0);
            
            Code_Utils.Webservices.HeadlessActions.GetDispatchTerritoriesCall("LOGICAL_POSITION_SMI_div1", language, user, logicalPosition, client, "G5CD8272P5QE");
            Delay.Milliseconds(0);
            
            Code_Utils.Webservices.HeadlessActions.GetCachedDataCall("LOGICAL_POSITION_SMI_div1", language, user, logicalPosition, client, "");
            Delay.Milliseconds(0);
            
            Code_Utils.Webservices.HeadlessActions.FbaCleanupCall("FBA_MA_SMI_SMI_div1", language, user, logicalPosition, client, "CLEANUP;FBA_MA");
            Delay.Milliseconds(0);
            
            Code_Utils.Webservices.HeadlessActions.GetBulletinConfiguration("BULLETIN_CONFIGURATION_SMI_div1", language, user, logicalPosition, client, "G5CD8272P5QE");
            Delay.Milliseconds(0);
            
            Code_Utils.Webservices.HeadlessActions.GetDispatchTerritoriesCall("LOGICAL_POSITION_SMI_div1", language, user, logicalPosition, client, logicalPosition);
            Delay.Milliseconds(0);
            
            Code_Utils.Webservices.HeadlessActions.LoadSummaryListCall("TRT_TRAIN_SHEET_SMI_div1", "TRT_TRAIN_SHEET", "GET_TRAIN_STATUS_SUMMARY", language, user, logicalPosition, client, "Desk 02: Chicago;Desk 02: Chicago:2;Desk 02: Chicago:3");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
