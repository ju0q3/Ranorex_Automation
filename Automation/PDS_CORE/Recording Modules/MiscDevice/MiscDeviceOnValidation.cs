///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_CORE.Recording_Modules.MiscDevice
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The MiscDeviceOnValidation recording.
    /// </summary>
    [TestModule("32f44e6a-434c-41d0-8627-0cafba6ed728", ModuleType.Recording, 1)]
    public partial class MiscDeviceOnValidation : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_CORE.PDS_CORERepository repository.
        /// </summary>
        public static global::PDS_CORE.PDS_CORERepository repo = global::PDS_CORE.PDS_CORERepository.Instance;

        static MiscDeviceOnValidation instance = new MiscDeviceOnValidation();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public MiscDeviceOnValidation()
        {
            window = "";
            miscDeviceId = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static MiscDeviceOnValidation Instance
        {
            get { return instance; }
        }

#region Variables

        string _miscDeviceId;

        /// <summary>
        /// Gets or sets the value of variable miscDeviceId.
        /// </summary>
        [TestVariable("4128358a-93d8-4771-962a-771a86ccbf8e")]
        public string miscDeviceId
        {
            get { return _miscDeviceId; }
            set { _miscDeviceId = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable window.
        /// </summary>
        [TestVariable("e7071c16-5a5e-49cb-9669-dce81d7013ad")]
        public string window
        {
            get { return repo.window; }
            set { repo.window = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            // Add 3 seconds for ATCS/STE delay
            Report.Log(ReportLevel.Info, "Delay", "Add 3 seconds for ATCS/STE delay\r\nWaiting for 5s.", new RecordItemIndex(0));
            Delay.Duration(5000, false);
            
            Code_Utils.TracklineActions.DeviceStateValidation(window, miscDeviceId, "MD, ION");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
