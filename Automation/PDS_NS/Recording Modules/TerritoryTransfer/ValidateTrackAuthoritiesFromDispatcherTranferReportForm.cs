///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.TerritoryTransfer
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateTrackAuthoritiesFromDispatcherTranferReportForm recording.
    /// </summary>
    [TestModule("005661ab-91b9-41a8-8186-488d7a2c7c74", ModuleType.Recording, 1)]
    public partial class ValidateTrackAuthoritiesFromDispatcherTranferReportForm : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static ValidateTrackAuthoritiesFromDispatcherTranferReportForm instance = new ValidateTrackAuthoritiesFromDispatcherTranferReportForm();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateTrackAuthoritiesFromDispatcherTranferReportForm()
        {
            firstPoint = "";
            secondPoint = "";
            closeForm = "False";
            authoritySeed = "";
            track = "";
            optDivision = "";
            optLogicalPosition = "";
            expectedTask = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateTrackAuthoritiesFromDispatcherTranferReportForm Instance
        {
            get { return instance; }
        }

#region Variables

        string _firstPoint;

        /// <summary>
        /// Gets or sets the value of variable firstPoint.
        /// </summary>
        [TestVariable("44169e2f-4430-494f-84d9-add9f8d101f9")]
        public string firstPoint
        {
            get { return _firstPoint; }
            set { _firstPoint = value; }
        }

        string _secondPoint;

        /// <summary>
        /// Gets or sets the value of variable secondPoint.
        /// </summary>
        [TestVariable("f843a888-5f41-4133-9de0-e59de4d946b7")]
        public string secondPoint
        {
            get { return _secondPoint; }
            set { _secondPoint = value; }
        }

        string _closeForm;

        /// <summary>
        /// Gets or sets the value of variable closeForm.
        /// </summary>
        [TestVariable("4a97b7c4-8c84-4a93-82b4-285a2b975d4f")]
        public string closeForm
        {
            get { return _closeForm; }
            set { _closeForm = value; }
        }

        string _authoritySeed;

        /// <summary>
        /// Gets or sets the value of variable authoritySeed.
        /// </summary>
        [TestVariable("ca2e32ef-294a-4494-8410-b576ced5e278")]
        public string authoritySeed
        {
            get { return _authoritySeed; }
            set { _authoritySeed = value; }
        }

        string _track;

        /// <summary>
        /// Gets or sets the value of variable track.
        /// </summary>
        [TestVariable("15b781c6-8a5f-4dae-91eb-8761d2844924")]
        public string track
        {
            get { return _track; }
            set { _track = value; }
        }

        string _optDivision;

        /// <summary>
        /// Gets or sets the value of variable optDivision.
        /// </summary>
        [TestVariable("a1a0bbdb-3f8f-47bc-b0af-54dc4540f11d")]
        public string optDivision
        {
            get { return _optDivision; }
            set { _optDivision = value; }
        }

        string _optLogicalPosition;

        /// <summary>
        /// Gets or sets the value of variable optLogicalPosition.
        /// </summary>
        [TestVariable("c60a4132-0aa6-499c-8d34-2951742587f7")]
        public string optLogicalPosition
        {
            get { return _optLogicalPosition; }
            set { _optLogicalPosition = value; }
        }

        string _expectedTask;

        /// <summary>
        /// Gets or sets the value of variable expectedTask.
        /// </summary>
        [TestVariable("29ef18ce-d938-425e-b212-4f555d832f03")]
        public string expectedTask
        {
            get { return _expectedTask; }
            set { _expectedTask = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            CodeUtils.NS_TerritoryTransfer_Validations.NS_ValidateTrackAuthoritiesFromDispatcherTranferReportForm(optDivision, optLogicalPosition, authoritySeed, firstPoint, secondPoint, track, ValueConverter.ArgumentFromString<bool>("expectedTask", expectedTask), ValueConverter.ArgumentFromString<bool>("closeForm", closeForm));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
