///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.TerritoryTransfer
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateBulletinsFromDispatcherTranferreportForm recording.
    /// </summary>
    [TestModule("6c395427-c5a8-4a39-bef4-3a45e381b329", ModuleType.Recording, 1)]
    public partial class ValidateBulletinsFromDispatcherTranferreportForm : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static ValidateBulletinsFromDispatcherTranferreportForm instance = new ValidateBulletinsFromDispatcherTranferreportForm();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateBulletinsFromDispatcherTranferreportForm()
        {
            bulletinSeed = "";
            bulletinType = "";
            firstLimit = "";
            secondLimit = "";
            closeForm = "False";
            optDivision = "";
            optLogicalPosition = "";
            expectedTask = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateBulletinsFromDispatcherTranferreportForm Instance
        {
            get { return instance; }
        }

#region Variables

        string _bulletinSeed;

        /// <summary>
        /// Gets or sets the value of variable bulletinSeed.
        /// </summary>
        [TestVariable("0cddc6c9-4d96-4b6c-acf4-b94dc18d5e99")]
        public string bulletinSeed
        {
            get { return _bulletinSeed; }
            set { _bulletinSeed = value; }
        }

        string _bulletinType;

        /// <summary>
        /// Gets or sets the value of variable bulletinType.
        /// </summary>
        [TestVariable("7baa48cd-21fb-4677-8d1c-d567a19b2ce9")]
        public string bulletinType
        {
            get { return _bulletinType; }
            set { _bulletinType = value; }
        }

        string _firstLimit;

        /// <summary>
        /// Gets or sets the value of variable firstLimit.
        /// </summary>
        [TestVariable("7be678b4-ae03-4bbe-bf41-bc4ed40370ee")]
        public string firstLimit
        {
            get { return _firstLimit; }
            set { _firstLimit = value; }
        }

        string _secondLimit;

        /// <summary>
        /// Gets or sets the value of variable secondLimit.
        /// </summary>
        [TestVariable("0800513d-3d62-490d-b287-f078ac6752e7")]
        public string secondLimit
        {
            get { return _secondLimit; }
            set { _secondLimit = value; }
        }

        string _closeForm;

        /// <summary>
        /// Gets or sets the value of variable closeForm.
        /// </summary>
        [TestVariable("376396ed-b6fc-415f-ae42-b57a9f51d571")]
        public string closeForm
        {
            get { return _closeForm; }
            set { _closeForm = value; }
        }

        string _optDivision;

        /// <summary>
        /// Gets or sets the value of variable optDivision.
        /// </summary>
        [TestVariable("e02a823c-7f91-4b00-bdb2-b863cd06b2b0")]
        public string optDivision
        {
            get { return _optDivision; }
            set { _optDivision = value; }
        }

        string _optLogicalPosition;

        /// <summary>
        /// Gets or sets the value of variable optLogicalPosition.
        /// </summary>
        [TestVariable("83ee1faf-342f-4e21-8689-0c8c44197add")]
        public string optLogicalPosition
        {
            get { return _optLogicalPosition; }
            set { _optLogicalPosition = value; }
        }

        string _expectedTask;

        /// <summary>
        /// Gets or sets the value of variable expectedTask.
        /// </summary>
        [TestVariable("ed85cba7-4835-449b-b812-f51430aa0e70")]
        public string expectedTask
        {
            get { return _expectedTask; }
            set { _expectedTask = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            CodeUtils.NS_TerritoryTransfer_Validations.NS_ValidateBulletinsFromDispatcherTranferReportForm(optDivision, optLogicalPosition, bulletinSeed, bulletinType, firstLimit, secondLimit, ValueConverter.ArgumentFromString<bool>("expectedTask", expectedTask), ValueConverter.ArgumentFromString<bool>("closeForm", closeForm));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
