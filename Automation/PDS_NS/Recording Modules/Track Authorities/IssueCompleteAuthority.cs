///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Track_Authorities
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The IssueCompleteAuthority recording.
    /// </summary>
    [TestModule("dbbbd7ce-7615-40b9-a9b1-060c809fce6b", ModuleType.Recording, 1)]
    public partial class IssueCompleteAuthority : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.TrackAuthorities_Repo repository.
        /// </summary>
        public static global::PDS_NS.TrackAuthorities_Repo repo = global::PDS_NS.TrackAuthorities_Repo.Instance;

        static IssueCompleteAuthority instance = new IssueCompleteAuthority();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public IssueCompleteAuthority()
        {
            AuthoritySeed = "";
            CompleteAuthorityIssue = "FALSE";
            autorityPTCVoice = "FALSE";
            IssueAutorityAt = "";
            AutoritycopiedBy = "";
            RelayEmployee = "";
            ExpectedFeedback = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static IssueCompleteAuthority Instance
        {
            get { return instance; }
        }

#region Variables

        string _AuthoritySeed;

        /// <summary>
        /// Gets or sets the value of variable AuthoritySeed.
        /// </summary>
        [TestVariable("d67e87b2-58d8-44d1-9ac1-35303438f457")]
        public string AuthoritySeed
        {
            get { return _AuthoritySeed; }
            set { _AuthoritySeed = value; }
        }

        string _CompleteAuthorityIssue;

        /// <summary>
        /// Gets or sets the value of variable CompleteAuthorityIssue.
        /// </summary>
        [TestVariable("1525dcd2-2464-4780-ac73-b70a457160c5")]
        public string CompleteAuthorityIssue
        {
            get { return _CompleteAuthorityIssue; }
            set { _CompleteAuthorityIssue = value; }
        }

        string _autorityPTCVoice;

        /// <summary>
        /// Gets or sets the value of variable autorityPTCVoice.
        /// </summary>
        [TestVariable("09bc273f-e1f3-486a-b685-3f2438bc3e26")]
        public string autorityPTCVoice
        {
            get { return _autorityPTCVoice; }
            set { _autorityPTCVoice = value; }
        }

        string _IssueAutorityAt;

        /// <summary>
        /// Gets or sets the value of variable IssueAutorityAt.
        /// </summary>
        [TestVariable("94175936-b918-4342-98e4-789ace43bda4")]
        public string IssueAutorityAt
        {
            get { return _IssueAutorityAt; }
            set { _IssueAutorityAt = value; }
        }

        string _AutoritycopiedBy;

        /// <summary>
        /// Gets or sets the value of variable AutoritycopiedBy.
        /// </summary>
        [TestVariable("53aa7155-1164-40b4-854a-0339713c43ce")]
        public string AutoritycopiedBy
        {
            get { return _AutoritycopiedBy; }
            set { _AutoritycopiedBy = value; }
        }

        string _RelayEmployee;

        /// <summary>
        /// Gets or sets the value of variable RelayEmployee.
        /// </summary>
        [TestVariable("abf63f45-6839-4c4a-baa3-d2e062c0a683")]
        public string RelayEmployee
        {
            get { return _RelayEmployee; }
            set { _RelayEmployee = value; }
        }

        string _ExpectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable ExpectedFeedback.
        /// </summary>
        [TestVariable("ba149b9d-922f-4ce6-83b8-88d918e081f0")]
        public string ExpectedFeedback
        {
            get { return _ExpectedFeedback; }
            set { _ExpectedFeedback = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Authorities.NS_IssueAuthorityAfterFormisFilled(AuthoritySeed, ValueConverter.ArgumentFromString<bool>("completeAuthorityIssue", CompleteAuthorityIssue), AutoritycopiedBy, RelayEmployee, IssueAutorityAt, ValueConverter.ArgumentFromString<bool>("issueAuthorityPTCVoice", autorityPTCVoice), ExpectedFeedback);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
