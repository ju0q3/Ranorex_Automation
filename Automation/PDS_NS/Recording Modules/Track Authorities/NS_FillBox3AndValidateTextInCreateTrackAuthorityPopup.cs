///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Track_Authorities
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The NS_FillBox3AndValidateTextInCreateTrackAuthorityPopup recording.
    /// </summary>
    [TestModule("8102f49c-d99e-47fa-af99-468477398705", ModuleType.Recording, 1)]
    public partial class NS_FillBox3AndValidateTextInCreateTrackAuthorityPopup : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static NS_FillBox3AndValidateTextInCreateTrackAuthorityPopup instance = new NS_FillBox3AndValidateTextInCreateTrackAuthorityPopup();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public NS_FillBox3AndValidateTextInCreateTrackAuthorityPopup()
        {
            expNotificationPopupHeader = "";
            expNotificationPopupText = "";
            isPopupExist = "False";
            box3WorkBetweenFrom = "";
            box3FromCP = "False";
            box3To = "";
            box3ToCP = "False";
            box3Track1 = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static NS_FillBox3AndValidateTextInCreateTrackAuthorityPopup Instance
        {
            get { return instance; }
        }

#region Variables

        string _expNotificationPopupHeader;

        /// <summary>
        /// Gets or sets the value of variable expNotificationPopupHeader.
        /// </summary>
        [TestVariable("76708323-51b3-4274-b814-2d31d03613ee")]
        public string expNotificationPopupHeader
        {
            get { return _expNotificationPopupHeader; }
            set { _expNotificationPopupHeader = value; }
        }

        string _expNotificationPopupText;

        /// <summary>
        /// Gets or sets the value of variable expNotificationPopupText.
        /// </summary>
        [TestVariable("283d92a6-707b-414a-a5a6-f83dd1b722e1")]
        public string expNotificationPopupText
        {
            get { return _expNotificationPopupText; }
            set { _expNotificationPopupText = value; }
        }

        string _isPopupExist;

        /// <summary>
        /// Gets or sets the value of variable isPopupExist.
        /// </summary>
        [TestVariable("9674910b-bdc1-4ba8-93e8-fb47f44fb893")]
        public string isPopupExist
        {
            get { return _isPopupExist; }
            set { _isPopupExist = value; }
        }

        string _box3WorkBetweenFrom;

        /// <summary>
        /// Gets or sets the value of variable box3WorkBetweenFrom.
        /// </summary>
        [TestVariable("4f358a76-172b-4cd4-a07e-87c9763d0970")]
        public string box3WorkBetweenFrom
        {
            get { return _box3WorkBetweenFrom; }
            set { _box3WorkBetweenFrom = value; }
        }

        string _box3FromCP;

        /// <summary>
        /// Gets or sets the value of variable box3FromCP.
        /// </summary>
        [TestVariable("68e98cef-6b5e-4c16-a5b4-7f45146fa01a")]
        public string box3FromCP
        {
            get { return _box3FromCP; }
            set { _box3FromCP = value; }
        }

        string _box3To;

        /// <summary>
        /// Gets or sets the value of variable box3To.
        /// </summary>
        [TestVariable("7d596a04-c253-4ed4-aee7-48a8f06544e7")]
        public string box3To
        {
            get { return _box3To; }
            set { _box3To = value; }
        }

        string _box3ToCP;

        /// <summary>
        /// Gets or sets the value of variable box3ToCP.
        /// </summary>
        [TestVariable("e8004644-ea73-4258-8040-f9dffafcfe74")]
        public string box3ToCP
        {
            get { return _box3ToCP; }
            set { _box3ToCP = value; }
        }

        string _box3Track1;

        /// <summary>
        /// Gets or sets the value of variable box3Track1.
        /// </summary>
        [TestVariable("11df32bf-6d7c-453e-b0af-512e475767a4")]
        public string box3Track1
        {
            get { return _box3Track1; }
            set { _box3Track1 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            NS_FillBox3PopupTestingFunction(box3WorkBetweenFrom, ValueConverter.ArgumentFromString<bool>("box3FromCP", box3FromCP), box3To, ValueConverter.ArgumentFromString<bool>("box3ToCP", box3ToCP), box3Track1);
            Delay.Milliseconds(0);
            
            UserCodeCollections.NS_Authorities.ValidateTextInCreateTrackAuthorityPopup(expNotificationPopupHeader, expNotificationPopupText, ValueConverter.ArgumentFromString<bool>("isPopupExist", isPopupExist));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
