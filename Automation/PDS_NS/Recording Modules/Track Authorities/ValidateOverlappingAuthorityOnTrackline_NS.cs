///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Track_Authorities
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateOverlappingAuthorityOnTrackline_NS recording.
    /// </summary>
    [TestModule("ac18421b-46f3-4557-8248-8ef2a57af260", ModuleType.Recording, 1)]
    public partial class ValidateOverlappingAuthorityOnTrackline_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static ValidateOverlappingAuthorityOnTrackline_NS instance = new ValidateOverlappingAuthorityOnTrackline_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateOverlappingAuthorityOnTrackline_NS()
        {
            authoritySeed1 = "";
            authoritySeed2 = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateOverlappingAuthorityOnTrackline_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _authoritySeed1;

        /// <summary>
        /// Gets or sets the value of variable authoritySeed1.
        /// </summary>
        [TestVariable("b93a7675-11de-48ab-8bb4-09635dbfc97b")]
        public string authoritySeed1
        {
            get { return _authoritySeed1; }
            set { _authoritySeed1 = value; }
        }

        string _authoritySeed2;

        /// <summary>
        /// Gets or sets the value of variable authoritySeed2.
        /// </summary>
        [TestVariable("21d575b6-0586-4f4d-ab74-9b483b48cde4")]
        public string authoritySeed2
        {
            get { return _authoritySeed2; }
            set { _authoritySeed2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Authorities.ValidateOverlappingAuthorityOnTrackline(authoritySeed1, authoritySeed2);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
