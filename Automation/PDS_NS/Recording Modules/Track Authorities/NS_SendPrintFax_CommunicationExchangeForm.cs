///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Track_Authorities
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The NS_SendPrintFax_CommunicationExchangeForm recording.
    /// </summary>
    [TestModule("0f184bc6-0405-4f57-b960-0692d724abaf", ModuleType.Recording, 1)]
    public partial class NS_SendPrintFax_CommunicationExchangeForm : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static NS_SendPrintFax_CommunicationExchangeForm instance = new NS_SendPrintFax_CommunicationExchangeForm();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public NS_SendPrintFax_CommunicationExchangeForm()
        {
            authoritySeed = "";
            optionalDivision = "";
            optionalLogicalPosition = "";
            openAuthorityFrom = "";
            optionalPrintType = "";
            optionalName = "";
            optionalNumberOfCopies = "";
            OkButton = "True";
            adhocButton = "False";
            cancelButton = "False";
            optionalAdhocName = "";
            optionalAdhocAddress = "";
            optionalAdhocQuantity = "";
            optionalAdhocType = "";
            adhocOkButton = "False";
            adhocInsertRowButton = "False";
            adhocCancelButton = "False";
            expectedFeedback = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static NS_SendPrintFax_CommunicationExchangeForm Instance
        {
            get { return instance; }
        }

#region Variables

        string _authoritySeed;

        /// <summary>
        /// Gets or sets the value of variable authoritySeed.
        /// </summary>
        [TestVariable("c0fbd2dd-d81d-49d1-aa28-75ab09ac5bd3")]
        public string authoritySeed
        {
            get { return _authoritySeed; }
            set { _authoritySeed = value; }
        }

        string _optionalDivision;

        /// <summary>
        /// Gets or sets the value of variable optionalDivision.
        /// </summary>
        [TestVariable("5c461698-fe47-48c0-919c-86cc4eece413")]
        public string optionalDivision
        {
            get { return _optionalDivision; }
            set { _optionalDivision = value; }
        }

        string _optionalLogicalPosition;

        /// <summary>
        /// Gets or sets the value of variable optionalLogicalPosition.
        /// </summary>
        [TestVariable("4c4a2598-e067-4cdb-a4b0-2e96dfde6579")]
        public string optionalLogicalPosition
        {
            get { return _optionalLogicalPosition; }
            set { _optionalLogicalPosition = value; }
        }

        string _openAuthorityFrom;

        /// <summary>
        /// Gets or sets the value of variable openAuthorityFrom.
        /// </summary>
        [TestVariable("91d82fc7-919f-448b-976b-e95a926c4811")]
        public string openAuthorityFrom
        {
            get { return _openAuthorityFrom; }
            set { _openAuthorityFrom = value; }
        }

        string _optionalPrintType;

        /// <summary>
        /// Gets or sets the value of variable optionalPrintType.
        /// </summary>
        [TestVariable("51e63f8c-8969-4cb1-8854-caaa25a185c0")]
        public string optionalPrintType
        {
            get { return _optionalPrintType; }
            set { _optionalPrintType = value; }
        }

        string _optionalName;

        /// <summary>
        /// Gets or sets the value of variable optionalName.
        /// </summary>
        [TestVariable("92440e4f-e77a-4481-a921-34a2c4a712bf")]
        public string optionalName
        {
            get { return _optionalName; }
            set { _optionalName = value; }
        }

        string _optionalNumberOfCopies;

        /// <summary>
        /// Gets or sets the value of variable optionalNumberOfCopies.
        /// </summary>
        [TestVariable("f7b244c9-baea-46ae-91b3-bed04ead3a70")]
        public string optionalNumberOfCopies
        {
            get { return _optionalNumberOfCopies; }
            set { _optionalNumberOfCopies = value; }
        }

        string _OkButton;

        /// <summary>
        /// Gets or sets the value of variable OkButton.
        /// </summary>
        [TestVariable("aa7e9ce6-9acd-48e9-a1b8-dfa5b121bc27")]
        public string OkButton
        {
            get { return _OkButton; }
            set { _OkButton = value; }
        }

        string _adhocButton;

        /// <summary>
        /// Gets or sets the value of variable adhocButton.
        /// </summary>
        [TestVariable("01002fb6-00e1-471b-9912-1542b4ba4f30")]
        public string adhocButton
        {
            get { return _adhocButton; }
            set { _adhocButton = value; }
        }

        string _cancelButton;

        /// <summary>
        /// Gets or sets the value of variable cancelButton.
        /// </summary>
        [TestVariable("694f621e-4a9f-440e-a0d9-9fcc3c178362")]
        public string cancelButton
        {
            get { return _cancelButton; }
            set { _cancelButton = value; }
        }

        string _optionalAdhocName;

        /// <summary>
        /// Gets or sets the value of variable optionalAdhocName.
        /// </summary>
        [TestVariable("956498a2-3dee-443f-b4e4-a8a7d732043f")]
        public string optionalAdhocName
        {
            get { return _optionalAdhocName; }
            set { _optionalAdhocName = value; }
        }

        string _optionalAdhocAddress;

        /// <summary>
        /// Gets or sets the value of variable optionalAdhocAddress.
        /// </summary>
        [TestVariable("2308dfe4-9c00-46e5-bde2-c62965043a8a")]
        public string optionalAdhocAddress
        {
            get { return _optionalAdhocAddress; }
            set { _optionalAdhocAddress = value; }
        }

        string _optionalAdhocQuantity;

        /// <summary>
        /// Gets or sets the value of variable optionalAdhocQuantity.
        /// </summary>
        [TestVariable("eb3145e8-2537-478a-8654-13c0678b04e6")]
        public string optionalAdhocQuantity
        {
            get { return _optionalAdhocQuantity; }
            set { _optionalAdhocQuantity = value; }
        }

        string _optionalAdhocType;

        /// <summary>
        /// Gets or sets the value of variable optionalAdhocType.
        /// </summary>
        [TestVariable("8c287bf1-20a7-42c0-ac1b-ef89bb92f727")]
        public string optionalAdhocType
        {
            get { return _optionalAdhocType; }
            set { _optionalAdhocType = value; }
        }

        string _adhocOkButton;

        /// <summary>
        /// Gets or sets the value of variable adhocOkButton.
        /// </summary>
        [TestVariable("7971bd29-27b3-432d-a8f3-1cc4c17e34a9")]
        public string adhocOkButton
        {
            get { return _adhocOkButton; }
            set { _adhocOkButton = value; }
        }

        string _adhocInsertRowButton;

        /// <summary>
        /// Gets or sets the value of variable adhocInsertRowButton.
        /// </summary>
        [TestVariable("25cb2081-1569-49ad-a9be-fac6062b8d35")]
        public string adhocInsertRowButton
        {
            get { return _adhocInsertRowButton; }
            set { _adhocInsertRowButton = value; }
        }

        string _adhocCancelButton;

        /// <summary>
        /// Gets or sets the value of variable adhocCancelButton.
        /// </summary>
        [TestVariable("0ca2a196-4e15-4633-8215-3e3294111999")]
        public string adhocCancelButton
        {
            get { return _adhocCancelButton; }
            set { _adhocCancelButton = value; }
        }

        string _expectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedback.
        /// </summary>
        [TestVariable("b38385af-247f-4a93-b9ba-2f4474fa9fdf")]
        public string expectedFeedback
        {
            get { return _expectedFeedback; }
            set { _expectedFeedback = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Authorities.NS_Send_Authority_PrintFax(authoritySeed, optionalDivision, optionalLogicalPosition, openAuthorityFrom, optionalPrintType, optionalName, optionalNumberOfCopies, ValueConverter.ArgumentFromString<bool>("okButton", OkButton), ValueConverter.ArgumentFromString<bool>("adhocButton", adhocButton), ValueConverter.ArgumentFromString<bool>("cancelButton", cancelButton), optionalAdhocName, optionalAdhocAddress, optionalAdhocQuantity, optionalAdhocType, ValueConverter.ArgumentFromString<bool>("adhocOkButton", adhocOkButton), ValueConverter.ArgumentFromString<bool>("adhocInsertRowButton", adhocInsertRowButton), ValueConverter.ArgumentFromString<bool>("adhocCancelButton", adhocCancelButton), expectedFeedback);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
