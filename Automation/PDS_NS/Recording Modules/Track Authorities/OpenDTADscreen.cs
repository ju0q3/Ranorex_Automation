///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Track_Authorities
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The OpenDTADscreen recording.
    /// </summary>
    [TestModule("7b43e516-d5dd-43fd-9155-d21ca07f9e8b", ModuleType.Recording, 1)]
    public partial class OpenDTADscreen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.TrackAuthorities_Repo repository.
        /// </summary>
        public static global::PDS_NS.TrackAuthorities_Repo repo = global::PDS_NS.TrackAuthorities_Repo.Instance;

        static OpenDTADscreen instance = new OpenDTADscreen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public OpenDTADscreen()
        {
            Division = "Georgia";
            TrackAuthorityCollectionTerritory1 = "GA: GSF: Brunswick";
            TrackAuthorityCollectionTerritory2 = "Brosnan South";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static OpenDTADscreen Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable TrackAuthorityCollectionTerritory1.
        /// </summary>
        [TestVariable("be8c87d6-b68b-4fb5-b90b-76a0761dd331")]
        public string TrackAuthorityCollectionTerritory1
        {
            get { return repo.TrackAuthorityCollectionTerritory1; }
            set { repo.TrackAuthorityCollectionTerritory1 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable TrackAuthorityCollectionTerritory2.
        /// </summary>
        [TestVariable("659a0a83-e21d-4bb8-a916-42d1f0968d37")]
        public string TrackAuthorityCollectionTerritory2
        {
            get { return repo.TrackAuthorityCollectionTerritory2; }
            set { repo.TrackAuthorityCollectionTerritory2 = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Division.
        /// </summary>
        [TestVariable("d08b5440-e67f-450a-9a09-f07bb4e9d29a")]
        public string Division
        {
            get { return repo.Division; }
            set { repo.Division = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Detailed_Track_Authority_Selection.Division.DivisionMenu' at Center.", repo.Detailed_Track_Authority_Selection.Division.DivisionMenuInfo, new RecordItemIndex(0));
            repo.Detailed_Track_Authority_Selection.Division.DivisionMenu.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Detailed_Track_Authority_Selection' at Center.", repo.Detailed_Track_Authority_Selection.SelfInfo, new RecordItemIndex(1));
            repo.Detailed_Track_Authority_Selection.Self.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Detailed_Track_Authority_Selection.AvailableList.TrackAuthorityCollectionListItemByTerritories' at Center.", repo.Detailed_Track_Authority_Selection.AvailableList.TrackAuthorityCollectionListItemByTerritoriesInfo, new RecordItemIndex(2));
            repo.Detailed_Track_Authority_Selection.AvailableList.TrackAuthorityCollectionListItemByTerritories.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Detailed_Track_Authority_Selection.AddButton' at Center.", repo.Detailed_Track_Authority_Selection.AddButtonInfo, new RecordItemIndex(3));
            repo.Detailed_Track_Authority_Selection.AddButton.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Detailed_Track_Authority_Selection.OkButton' at Center.", repo.Detailed_Track_Authority_Selection.OkButtonInfo, new RecordItemIndex(4));
            repo.Detailed_Track_Authority_Selection.OkButton.Click();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
