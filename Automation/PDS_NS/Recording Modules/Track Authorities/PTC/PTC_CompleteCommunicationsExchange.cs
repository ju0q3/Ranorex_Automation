///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Track_Authorities.PTC
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The PTC_CompleteCommunicationsExchange recording.
    /// </summary>
    [TestModule("dd32db8c-531c-4b2c-a148-7bea2b5e3fda", ModuleType.Recording, 1)]
    public partial class PTC_CompleteCommunicationsExchange : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.TrackAuthorities_Repo repository.
        /// </summary>
        public static global::PDS_NS.TrackAuthorities_Repo repo = global::PDS_NS.TrackAuthorities_Repo.Instance;

        static PTC_CompleteCommunicationsExchange instance = new PTC_CompleteCommunicationsExchange();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public PTC_CompleteCommunicationsExchange()
        {
            copiedBy = "";
            expect202 = "False";
            ack202 = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static PTC_CompleteCommunicationsExchange Instance
        {
            get { return instance; }
        }

#region Variables

        string _copiedBy;

        /// <summary>
        /// Gets or sets the value of variable copiedBy.
        /// </summary>
        [TestVariable("90571db1-4094-441a-8257-905efb7318dd")]
        public string copiedBy
        {
            get { return _copiedBy; }
            set { _copiedBy = value; }
        }

        string _expect202;

        /// <summary>
        /// Gets or sets the value of variable expect202.
        /// </summary>
        [TestVariable("44e75364-afa9-4975-bef1-9e9ad7ff4d1a")]
        public string expect202
        {
            get { return _expect202; }
            set { _expect202 = value; }
        }

        string _ack202;

        /// <summary>
        /// Gets or sets the value of variable ack202.
        /// </summary>
        [TestVariable("0aa75d11-ca1a-47f0-8864-a284443a1c05")]
        public string ack202
        {
            get { return _ack202; }
            set { _ack202 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Communications_Exchange_Ok_Authority.CopiedByText' at Center.", repo.Communications_Exchange_Ok_Authority.CopiedByTextInfo, new RecordItemIndex(0));
            repo.Communications_Exchange_Ok_Authority.CopiedByText.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '$copiedBy' on item 'Communications_Exchange_Ok_Authority.CopiedByText'.", repo.Communications_Exchange_Ok_Authority.CopiedByTextInfo, new RecordItemIndex(1));
            repo.Communications_Exchange_Ok_Authority.CopiedByText.Element.SetAttributeValue("Text", copiedBy);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'Communications_Exchange_Ok_Authority.CopiedByText'.", repo.Communications_Exchange_Ok_Authority.CopiedByTextInfo, new RecordItemIndex(2));
            Keyboard.PrepareFocus(repo.Communications_Exchange_Ok_Authority.CopiedByText);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            UserCodeCollections.NS_Authorities.NS_Rule202(ValueConverter.ArgumentFromString<bool>("expect202", expect202), ValueConverter.ArgumentFromString<bool>("ack", ack202));
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Communications_Exchange_Ok_Authority.RelayingEmployeeText' at Center.", repo.Communications_Exchange_Ok_Authority.RelayingEmployeeTextInfo, new RecordItemIndex(4));
            repo.Communications_Exchange_Ok_Authority.RelayingEmployeeText.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '$copiedBy' on item 'Communications_Exchange_Ok_Authority.RelayingEmployeeText'.", repo.Communications_Exchange_Ok_Authority.RelayingEmployeeTextInfo, new RecordItemIndex(5));
            repo.Communications_Exchange_Ok_Authority.RelayingEmployeeText.Element.SetAttributeValue("Text", copiedBy);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'Communications_Exchange_Ok_Authority.RelayingEmployeeText'.", repo.Communications_Exchange_Ok_Authority.RelayingEmployeeTextInfo, new RecordItemIndex(6));
            Keyboard.PrepareFocus(repo.Communications_Exchange_Ok_Authority.RelayingEmployeeText);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Communications_Exchange_Ok_Authority.RelayingAtText' at Center.", repo.Communications_Exchange_Ok_Authority.RelayingAtTextInfo, new RecordItemIndex(7));
            repo.Communications_Exchange_Ok_Authority.RelayingAtText.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '$copiedBy' on item 'Communications_Exchange_Ok_Authority.RelayingAtText'.", repo.Communications_Exchange_Ok_Authority.RelayingAtTextInfo, new RecordItemIndex(8));
            repo.Communications_Exchange_Ok_Authority.RelayingAtText.Element.SetAttributeValue("Text", copiedBy);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press with focus on 'Communications_Exchange_Ok_Authority.RelayingAtText'.", repo.Communications_Exchange_Ok_Authority.RelayingAtTextInfo, new RecordItemIndex(9));
            Keyboard.PrepareFocus(repo.Communications_Exchange_Ok_Authority.RelayingAtText);
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            PDS_CORE.Code_Utils.GeneralUtilities.LeftClickAndWaitForWithRetry(repo.Communications_Exchange_Ok_Authority.ContinueButtonInfo, repo.Communications_Exchange_Ok_Authority.VoiceButtonInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
