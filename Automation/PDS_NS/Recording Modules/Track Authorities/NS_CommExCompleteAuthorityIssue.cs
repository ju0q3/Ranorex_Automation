///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Track_Authorities
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The NS_CommExCompleteAuthorityIssue recording.
    /// </summary>
    [TestModule("121dc1d5-30ca-4fd5-8679-e932ff0de9eb", ModuleType.Recording, 1)]
    public partial class NS_CommExCompleteAuthorityIssue : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static NS_CommExCompleteAuthorityIssue instance = new NS_CommExCompleteAuthorityIssue();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public NS_CommExCompleteAuthorityIssue()
        {
            copiedBy = "Automation";
            relayingEmployee = "";
            at = "";
            PTC = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static NS_CommExCompleteAuthorityIssue Instance
        {
            get { return instance; }
        }

#region Variables

        string _copiedBy;

        /// <summary>
        /// Gets or sets the value of variable copiedBy.
        /// </summary>
        [TestVariable("1536400a-eb16-4169-a84c-67610b08624e")]
        public string copiedBy
        {
            get { return _copiedBy; }
            set { _copiedBy = value; }
        }

        string _relayingEmployee;

        /// <summary>
        /// Gets or sets the value of variable relayingEmployee.
        /// </summary>
        [TestVariable("f0a76606-3e99-4d70-8667-b54b4fe40008")]
        public string relayingEmployee
        {
            get { return _relayingEmployee; }
            set { _relayingEmployee = value; }
        }

        string _at;

        /// <summary>
        /// Gets or sets the value of variable at.
        /// </summary>
        [TestVariable("5a51a51c-254f-4543-bdf2-f0e33f02872e")]
        public string at
        {
            get { return _at; }
            set { _at = value; }
        }

        string _PTC;

        /// <summary>
        /// Gets or sets the value of variable PTC.
        /// </summary>
        [TestVariable("ea9ccd25-21f2-4c4e-bd88-5191dffd634b")]
        public string PTC
        {
            get { return _PTC; }
            set { _PTC = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Authorities.CompleteAuthorityIssue(copiedBy, relayingEmployee, at, ValueConverter.ArgumentFromString<bool>("issueAuthorityPTCVoice", PTC));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
