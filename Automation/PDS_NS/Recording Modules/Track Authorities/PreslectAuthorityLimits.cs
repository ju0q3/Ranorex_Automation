///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Track_Authorities
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The PreslectAuthorityLimits recording.
    /// </summary>
    [TestModule("1d0b9a74-034e-4b07-b37c-8177121cc8db", ModuleType.Recording, 1)]
    public partial class PreslectAuthorityLimits : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static PreslectAuthorityLimits instance = new PreslectAuthorityLimits();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public PreslectAuthorityLimits()
        {
            trackLineWindowName = "";
            preselectType = "";
            trainSeed = "";
            useSummaryList = "False";
            authorityType = "";
            atLimitIsMilepost = "False";
            at = "";
            fromLimitIsMilepost = "False";
            from = "";
            fromTrackSection = "";
            toLimitIsMilepost = "False";
            to = "";
            toTrackSection = "";
            limitsAdjoin = "False";
            atTrackSection = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static PreslectAuthorityLimits Instance
        {
            get { return instance; }
        }

#region Variables

        string _trackLineWindowName;

        /// <summary>
        /// Gets or sets the value of variable trackLineWindowName.
        /// </summary>
        [TestVariable("f3fe3dca-4582-4335-8356-eb8af528be66")]
        public string trackLineWindowName
        {
            get { return _trackLineWindowName; }
            set { _trackLineWindowName = value; }
        }

        string _preselectType;

        /// <summary>
        /// Gets or sets the value of variable preselectType.
        /// </summary>
        [TestVariable("3d91c1a2-6507-43ac-b668-28732c59c563")]
        public string preselectType
        {
            get { return _preselectType; }
            set { _preselectType = value; }
        }

        string _trainSeed;

        /// <summary>
        /// Gets or sets the value of variable trainSeed.
        /// </summary>
        [TestVariable("284601c1-e884-4376-8c49-9be9ecf374c1")]
        public string trainSeed
        {
            get { return _trainSeed; }
            set { _trainSeed = value; }
        }

        string _useSummaryList;

        /// <summary>
        /// Gets or sets the value of variable useSummaryList.
        /// </summary>
        [TestVariable("5d20b8cf-073e-4dd3-8f4f-fed5b8cc0395")]
        public string useSummaryList
        {
            get { return _useSummaryList; }
            set { _useSummaryList = value; }
        }

        string _authorityType;

        /// <summary>
        /// Gets or sets the value of variable authorityType.
        /// </summary>
        [TestVariable("389a0c0d-929d-4661-b55a-59e158f9e83e")]
        public string authorityType
        {
            get { return _authorityType; }
            set { _authorityType = value; }
        }

        string _atLimitIsMilepost;

        /// <summary>
        /// Gets or sets the value of variable atLimitIsMilepost.
        /// </summary>
        [TestVariable("e092019b-a926-49b7-9913-1ebcf1c58e1b")]
        public string atLimitIsMilepost
        {
            get { return _atLimitIsMilepost; }
            set { _atLimitIsMilepost = value; }
        }

        string _at;

        /// <summary>
        /// Gets or sets the value of variable at.
        /// </summary>
        [TestVariable("022e2b96-458f-405c-a30e-05ff253f9d0b")]
        public string at
        {
            get { return _at; }
            set { _at = value; }
        }

        string _fromLimitIsMilepost;

        /// <summary>
        /// Gets or sets the value of variable fromLimitIsMilepost.
        /// </summary>
        [TestVariable("dd05759a-01b6-4cbf-b6f0-3b7b89a49778")]
        public string fromLimitIsMilepost
        {
            get { return _fromLimitIsMilepost; }
            set { _fromLimitIsMilepost = value; }
        }

        string _from;

        /// <summary>
        /// Gets or sets the value of variable from.
        /// </summary>
        [TestVariable("ebb5782a-7938-4b67-a7b4-f5a902298bf2")]
        public string from
        {
            get { return _from; }
            set { _from = value; }
        }

        string _fromTrackSection;

        /// <summary>
        /// Gets or sets the value of variable fromTrackSection.
        /// </summary>
        [TestVariable("889eb410-5d22-4574-9dff-1476211e2fc8")]
        public string fromTrackSection
        {
            get { return _fromTrackSection; }
            set { _fromTrackSection = value; }
        }

        string _toLimitIsMilepost;

        /// <summary>
        /// Gets or sets the value of variable toLimitIsMilepost.
        /// </summary>
        [TestVariable("e7baf388-0455-46b8-be1f-b02dd411fd83")]
        public string toLimitIsMilepost
        {
            get { return _toLimitIsMilepost; }
            set { _toLimitIsMilepost = value; }
        }

        string _to;

        /// <summary>
        /// Gets or sets the value of variable to.
        /// </summary>
        [TestVariable("f4743f77-8d95-490f-8fc9-23e92ebc6315")]
        public string to
        {
            get { return _to; }
            set { _to = value; }
        }

        string _toTrackSection;

        /// <summary>
        /// Gets or sets the value of variable toTrackSection.
        /// </summary>
        [TestVariable("923207f9-f1f9-4cf9-86d0-f5bcd4d78ec5")]
        public string toTrackSection
        {
            get { return _toTrackSection; }
            set { _toTrackSection = value; }
        }

        string _limitsAdjoin;

        /// <summary>
        /// Gets or sets the value of variable limitsAdjoin.
        /// </summary>
        [TestVariable("705ef04a-bea4-4de3-b856-45cf047d3ffa")]
        public string limitsAdjoin
        {
            get { return _limitsAdjoin; }
            set { _limitsAdjoin = value; }
        }

        string _atTrackSection;

        /// <summary>
        /// Gets or sets the value of variable atTrackSection.
        /// </summary>
        [TestVariable("fa641d7d-cfa1-47b8-b31b-74e767cc5816")]
        public string atTrackSection
        {
            get { return _atTrackSection; }
            set { _atTrackSection = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Authorities.NS_PreselectAuthorityFunction(trackLineWindowName, preselectType, trainSeed, ValueConverter.ArgumentFromString<bool>("fromSummaryList", useSummaryList), authorityType, ValueConverter.ArgumentFromString<bool>("atIsMilePost", atLimitIsMilepost), at, ValueConverter.ArgumentFromString<bool>("fromIsMilePost", fromLimitIsMilepost), from, fromTrackSection, ValueConverter.ArgumentFromString<bool>("toIsMilePost", toLimitIsMilepost), to, toTrackSection, ValueConverter.ArgumentFromString<bool>("limitsDoNotAdjoin", limitsAdjoin), atTrackSection);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
