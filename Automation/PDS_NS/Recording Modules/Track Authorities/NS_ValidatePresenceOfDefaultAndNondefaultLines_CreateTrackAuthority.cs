///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Track_Authorities
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The NS_ValidatePresenceOfDefaultAndNondefaultLines_CreateTrackAuthority recording.
    /// </summary>
    [TestModule("5435b228-2094-4bc1-a715-80f40448e414", ModuleType.Recording, 1)]
    public partial class NS_ValidatePresenceOfDefaultAndNondefaultLines_CreateTrackAuthority : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.TrackAuthorities_Repo repository.
        /// </summary>
        public static global::PDS_NS.TrackAuthorities_Repo repo = global::PDS_NS.TrackAuthorities_Repo.Instance;

        static NS_ValidatePresenceOfDefaultAndNondefaultLines_CreateTrackAuthority instance = new NS_ValidatePresenceOfDefaultAndNondefaultLines_CreateTrackAuthority();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public NS_ValidatePresenceOfDefaultAndNondefaultLines_CreateTrackAuthority()
        {
            defaultLineLabel = "AuthorityToVoidCheckBox|Proceed1CheckBox|WorkBetweenCheckBox|Proceed2CheckBox|UntilTimeCheckBox";
            isDefaultLineShown = "True";
            non_defaultLineLabel = "OpposingTrainsCheckBox|HoldMainCheckBox|TrainsToFollowCheckBox|ClearMainCheckBox|TrainsSpeedRestrictionCheckBox|StopShortCheckBox|OtherInstructionsCheckBox";
            isNon_defaultLineShown = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static NS_ValidatePresenceOfDefaultAndNondefaultLines_CreateTrackAuthority Instance
        {
            get { return instance; }
        }

#region Variables

        string _defaultLineLabel;

        /// <summary>
        /// Gets or sets the value of variable defaultLineLabel.
        /// </summary>
        [TestVariable("629cdc0a-ce28-4fd7-bcea-cc0a013e69f4")]
        public string defaultLineLabel
        {
            get { return _defaultLineLabel; }
            set { _defaultLineLabel = value; }
        }

        string _isDefaultLineShown;

        /// <summary>
        /// Gets or sets the value of variable isDefaultLineShown.
        /// </summary>
        [TestVariable("f93c7607-8a42-4fb4-9244-c079369e5da2")]
        public string isDefaultLineShown
        {
            get { return _isDefaultLineShown; }
            set { _isDefaultLineShown = value; }
        }

        string _non_defaultLineLabel;

        /// <summary>
        /// Gets or sets the value of variable non_defaultLineLabel.
        /// </summary>
        [TestVariable("b801a291-d393-412d-8480-bf77af5281ac")]
        public string non_defaultLineLabel
        {
            get { return _non_defaultLineLabel; }
            set { _non_defaultLineLabel = value; }
        }

        string _isNon_defaultLineShown;

        /// <summary>
        /// Gets or sets the value of variable isNon_defaultLineShown.
        /// </summary>
        [TestVariable("67cfa47e-2eda-4700-b7f7-b55c412bdc4c")]
        public string isNon_defaultLineShown
        {
            get { return _isNon_defaultLineShown; }
            set { _isNon_defaultLineShown = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Authorities.ValidateCheckboxItemPresent_CreateTrackAuthority(defaultLineLabel, ValueConverter.ArgumentFromString<bool>("visible", isDefaultLineShown));
            Delay.Milliseconds(0);
            
            UserCodeCollections.NS_Authorities.ValidateCheckboxItemPresent_CreateTrackAuthority(non_defaultLineLabel, ValueConverter.ArgumentFromString<bool>("visible", isNon_defaultLineShown));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
