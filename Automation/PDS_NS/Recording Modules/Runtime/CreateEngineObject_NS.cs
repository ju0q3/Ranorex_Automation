///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Runtime
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CreateEngineObject_NS recording.
    /// </summary>
    [TestModule("ec3908d3-5c3c-4c6f-8415-a7f1d40e1878", ModuleType.Recording, 1)]
    public partial class CreateEngineObject_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static CreateEngineObject_NS instance = new CreateEngineObject_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CreateEngineObject_NS()
        {
            trainSeed = "";
            engineSeed = "";
            engineRecord = "";
            assignedDivision = "";
            helperCrewPoolId = "";
            defaultDataApplied = "";
            reportingPassCount = "";
            reportingLocation = "";
            reportingSource = "";
            purpose = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CreateEngineObject_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _trainSeed;

        /// <summary>
        /// Gets or sets the value of variable trainSeed.
        /// </summary>
        [TestVariable("8a47dcb9-adc3-4912-a329-658438bc42ea")]
        public string trainSeed
        {
            get { return _trainSeed; }
            set { _trainSeed = value; }
        }

        string _engineSeed;

        /// <summary>
        /// Gets or sets the value of variable engineSeed.
        /// </summary>
        [TestVariable("f4ebb377-58fe-4d0f-80e0-51bdb72b0bd6")]
        public string engineSeed
        {
            get { return _engineSeed; }
            set { _engineSeed = value; }
        }

        string _engineRecord;

        /// <summary>
        /// Gets or sets the value of variable engineRecord.
        /// </summary>
        [TestVariable("8dfd9ac7-f542-49e6-a028-938b6f55c71e")]
        public string engineRecord
        {
            get { return _engineRecord; }
            set { _engineRecord = value; }
        }

        string _assignedDivision;

        /// <summary>
        /// Gets or sets the value of variable assignedDivision.
        /// </summary>
        [TestVariable("ff2e9996-f4b2-45ae-a30a-bae8bc4d99a7")]
        public string assignedDivision
        {
            get { return _assignedDivision; }
            set { _assignedDivision = value; }
        }

        string _helperCrewPoolId;

        /// <summary>
        /// Gets or sets the value of variable helperCrewPoolId.
        /// </summary>
        [TestVariable("cfa403f0-2120-40df-8244-58c0cfa87e35")]
        public string helperCrewPoolId
        {
            get { return _helperCrewPoolId; }
            set { _helperCrewPoolId = value; }
        }

        string _defaultDataApplied;

        /// <summary>
        /// Gets or sets the value of variable defaultDataApplied.
        /// </summary>
        [TestVariable("852c60b4-ed2d-43ec-b18f-a28661971640")]
        public string defaultDataApplied
        {
            get { return _defaultDataApplied; }
            set { _defaultDataApplied = value; }
        }

        string _reportingPassCount;

        /// <summary>
        /// Gets or sets the value of variable reportingPassCount.
        /// </summary>
        [TestVariable("b8446942-f812-452a-8cc5-b87ae1cb4a27")]
        public string reportingPassCount
        {
            get { return _reportingPassCount; }
            set { _reportingPassCount = value; }
        }

        string _reportingLocation;

        /// <summary>
        /// Gets or sets the value of variable reportingLocation.
        /// </summary>
        [TestVariable("5ac9e649-6289-4865-88fa-6b7abb74ebfa")]
        public string reportingLocation
        {
            get { return _reportingLocation; }
            set { _reportingLocation = value; }
        }

        string _reportingSource;

        /// <summary>
        /// Gets or sets the value of variable reportingSource.
        /// </summary>
        [TestVariable("c08b0c55-435b-4056-bfef-f756d76dc558")]
        public string reportingSource
        {
            get { return _reportingSource; }
            set { _reportingSource = value; }
        }

        string _purpose;

        /// <summary>
        /// Gets or sets the value of variable purpose.
        /// </summary>
        [TestVariable("1518f07f-6498-4dbc-a4ed-cc5fc10ff032")]
        public string purpose
        {
            get { return _purpose; }
            set { _purpose = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            PDS_CORE.Code_Utils.NS_TrainID.CreateEngineConsistRecord(trainSeed, engineSeed, engineRecord, assignedDivision, helperCrewPoolId, defaultDataApplied, reportingPassCount, reportingLocation, reportingSource, purpose);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
