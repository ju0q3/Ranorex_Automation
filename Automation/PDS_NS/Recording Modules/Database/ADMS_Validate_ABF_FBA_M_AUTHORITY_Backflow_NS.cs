///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Database
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ADMS_Validate_ABF_FBA_M_AUTHORITY_Backflow_NS recording.
    /// </summary>
    [TestModule("4db72db4-6e99-45b5-bd63-81cab32dd6eb", ModuleType.Recording, 1)]
    public partial class ADMS_Validate_ABF_FBA_M_AUTHORITY_Backflow_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static ADMS_Validate_ABF_FBA_M_AUTHORITY_Backflow_NS instance = new ADMS_Validate_ABF_FBA_M_AUTHORITY_Backflow_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ADMS_Validate_ABF_FBA_M_AUTHORITY_Backflow_NS()
        {
            authoritySeed = "";
            authorityState = "";
            eventSubType = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ADMS_Validate_ABF_FBA_M_AUTHORITY_Backflow_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _authoritySeed;

        /// <summary>
        /// Gets or sets the value of variable authoritySeed.
        /// </summary>
        [TestVariable("22899f4f-f48b-4475-b0ae-1cb10468c2e8")]
        public string authoritySeed
        {
            get { return _authoritySeed; }
            set { _authoritySeed = value; }
        }

        string _authorityState;

        /// <summary>
        /// Gets or sets the value of variable authorityState.
        /// </summary>
        [TestVariable("491bc913-e578-4863-88d5-4fdea5727c18")]
        public string authorityState
        {
            get { return _authorityState; }
            set { _authorityState = value; }
        }

        string _eventSubType;

        /// <summary>
        /// Gets or sets the value of variable eventSubType.
        /// </summary>
        [TestVariable("164970d7-bb2b-4056-8deb-0e291c52ada5")]
        public string eventSubType
        {
            get { return _eventSubType; }
            set { _eventSubType = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Oracle.NS_OracleValidation.NS_Validate_ABF_FBA_M_AUTHORITY_ADMS(authoritySeed, authorityState, eventSubType);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
