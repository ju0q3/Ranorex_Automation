///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Database
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ADMS_ValidateTrainConsistSummaryBackflow_NS recording.
    /// </summary>
    [TestModule("e61d4087-6332-4ba5-8ea5-07e0cb576688", ModuleType.Recording, 1)]
    public partial class ADMS_ValidateTrainConsistSummaryBackflow_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static ADMS_ValidateTrainConsistSummaryBackflow_NS instance = new ADMS_ValidateTrainConsistSummaryBackflow_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ADMS_ValidateTrainConsistSummaryBackflow_NS()
        {
            trainSeed = "";
            consistSeed = "";
            eventType = "";
            eventSubType = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ADMS_ValidateTrainConsistSummaryBackflow_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _trainSeed;

        /// <summary>
        /// Gets or sets the value of variable trainSeed.
        /// </summary>
        [TestVariable("45776099-47be-4a06-9d7e-e54e5c23dbd0")]
        public string trainSeed
        {
            get { return _trainSeed; }
            set { _trainSeed = value; }
        }

        string _consistSeed;

        /// <summary>
        /// Gets or sets the value of variable consistSeed.
        /// </summary>
        [TestVariable("e302a392-ae58-445e-897f-b34ab0f27a2b")]
        public string consistSeed
        {
            get { return _consistSeed; }
            set { _consistSeed = value; }
        }

        string _eventType;

        /// <summary>
        /// Gets or sets the value of variable eventType.
        /// </summary>
        [TestVariable("d40aded8-a5b8-4378-91d7-0f9a573fa445")]
        public string eventType
        {
            get { return _eventType; }
            set { _eventType = value; }
        }

        string _eventSubType;

        /// <summary>
        /// Gets or sets the value of variable eventSubType.
        /// </summary>
        [TestVariable("5ebb8cdf-6ff2-4395-b58e-ad2fa88f1903")]
        public string eventSubType
        {
            get { return _eventSubType; }
            set { _eventSubType = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Oracle.NS_OracleValidation.NS_ValidateTrainConsistSummary_Backflow(trainSeed, consistSeed, eventType, eventSubType);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
