///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.EMT
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateEMTPopup_Notification_NS recording.
    /// </summary>
    [TestModule("38fd4a9b-72fb-4a53-9727-63e254019391", ModuleType.Recording, 1)]
    public partial class ValidateEMTPopup_Notification_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static ValidateEMTPopup_Notification_NS instance = new ValidateEMTPopup_Notification_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateEMTPopup_Notification_NS()
        {
            clickYes = "False";
            clickNo = "False";
            clickCancel = "False";
            closeCreatePermissionForms = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateEMTPopup_Notification_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _clickYes;

        /// <summary>
        /// Gets or sets the value of variable clickYes.
        /// </summary>
        [TestVariable("07c025ad-434a-44c0-8eac-f7866d3de226")]
        public string clickYes
        {
            get { return _clickYes; }
            set { _clickYes = value; }
        }

        string _clickNo;

        /// <summary>
        /// Gets or sets the value of variable clickNo.
        /// </summary>
        [TestVariable("678932cd-a1f2-4ca3-b2b2-18f4478927a5")]
        public string clickNo
        {
            get { return _clickNo; }
            set { _clickNo = value; }
        }

        string _clickCancel;

        /// <summary>
        /// Gets or sets the value of variable clickCancel.
        /// </summary>
        [TestVariable("5ecb4015-cb79-4cfa-884e-0b37444c7521")]
        public string clickCancel
        {
            get { return _clickCancel; }
            set { _clickCancel = value; }
        }

        string _closeCreatePermissionForms;

        /// <summary>
        /// Gets or sets the value of variable closeCreatePermissionForms.
        /// </summary>
        [TestVariable("4c98843f-bbbf-45f1-87f6-72377b1fd960")]
        public string closeCreatePermissionForms
        {
            get { return _closeCreatePermissionForms; }
            set { _closeCreatePermissionForms = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Trackline_Validations.NS_ValidateNotificationpPopupExist(ValueConverter.ArgumentFromString<bool>("clickYes", clickYes), ValueConverter.ArgumentFromString<bool>("clickNo", clickNo), ValueConverter.ArgumentFromString<bool>("clickCancel", clickCancel), ValueConverter.ArgumentFromString<bool>("closeCreatePermissionForms", closeCreatePermissionForms));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
