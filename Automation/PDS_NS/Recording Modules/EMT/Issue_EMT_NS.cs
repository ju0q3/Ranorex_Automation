///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.EMT
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Issue_EMT_NS recording.
    /// </summary>
    [TestModule("d08ae1a3-891c-4c2a-9f51-22ef9728f8f3", ModuleType.Recording, 1)]
    public partial class Issue_EMT_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static Issue_EMT_NS instance = new Issue_EMT_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Issue_EMT_NS()
        {
            trainSeed = "";
            optEngineId = "";
            milePost = "";
            optTrack = "";
            direction = "";
            trackLineWindowName = "";
            closeForms = "False";
            expectedFeedback = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Issue_EMT_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _trainSeed;

        /// <summary>
        /// Gets or sets the value of variable trainSeed.
        /// </summary>
        [TestVariable("b2716e2f-fd4e-4644-bf51-f2427fdff4a7")]
        public string trainSeed
        {
            get { return _trainSeed; }
            set { _trainSeed = value; }
        }

        string _optEngineId;

        /// <summary>
        /// Gets or sets the value of variable optEngineId.
        /// </summary>
        [TestVariable("298a2761-937e-4734-ac7e-82519b7caa9f")]
        public string optEngineId
        {
            get { return _optEngineId; }
            set { _optEngineId = value; }
        }

        string _milePost;

        /// <summary>
        /// Gets or sets the value of variable milePost.
        /// </summary>
        [TestVariable("e01d4715-fd01-4084-9b45-9dc67fe81664")]
        public string milePost
        {
            get { return _milePost; }
            set { _milePost = value; }
        }

        string _optTrack;

        /// <summary>
        /// Gets or sets the value of variable optTrack.
        /// </summary>
        [TestVariable("262b4d37-986b-4b32-8f98-29b7c8740d2e")]
        public string optTrack
        {
            get { return _optTrack; }
            set { _optTrack = value; }
        }

        string _direction;

        /// <summary>
        /// Gets or sets the value of variable direction.
        /// </summary>
        [TestVariable("127f9e19-3b90-4478-be90-4d4724d7463a")]
        public string direction
        {
            get { return _direction; }
            set { _direction = value; }
        }

        string _trackLineWindowName;

        /// <summary>
        /// Gets or sets the value of variable trackLineWindowName.
        /// </summary>
        [TestVariable("61c3a95f-cc25-4808-b3e9-09b7726fd41e")]
        public string trackLineWindowName
        {
            get { return _trackLineWindowName; }
            set { _trackLineWindowName = value; }
        }

        string _closeForms;

        /// <summary>
        /// Gets or sets the value of variable closeForms.
        /// </summary>
        [TestVariable("fdcba847-5285-42b1-b6a7-9fafe2d4cb1f")]
        public string closeForms
        {
            get { return _closeForms; }
            set { _closeForms = value; }
        }

        string _expectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedback.
        /// </summary>
        [TestVariable("62c4cf8f-ea43-4e90-8406-ec61877e38a5")]
        public string expectedFeedback
        {
            get { return _expectedFeedback; }
            set { _expectedFeedback = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Trackline_Validations.NS_IssuePermissionToEnterMainTrack(trainSeed, optEngineId, milePost, optTrack, direction, trackLineWindowName, ValueConverter.ArgumentFromString<bool>("closeForms", closeForms), expectedFeedback);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
