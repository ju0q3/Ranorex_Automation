///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.EMT
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Validate_EMT_RemoveButton_Status_NS recording.
    /// </summary>
    [TestModule("5593f336-7e55-4a60-8680-4fa08ea4e646", ModuleType.Recording, 1)]
    public partial class Validate_EMT_RemoveButton_Status_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static Validate_EMT_RemoveButton_Status_NS instance = new Validate_EMT_RemoveButton_Status_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Validate_EMT_RemoveButton_Status_NS()
        {
            trainSeed = "";
            trackSectionId = "";
            expectedFeedback = "";
            removeEnabled = "False";
            closeForms = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Validate_EMT_RemoveButton_Status_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _trainSeed;

        /// <summary>
        /// Gets or sets the value of variable trainSeed.
        /// </summary>
        [TestVariable("287a3f3d-71e6-49d7-a659-a6d5df77f6a0")]
        public string trainSeed
        {
            get { return _trainSeed; }
            set { _trainSeed = value; }
        }

        string _trackSectionId;

        /// <summary>
        /// Gets or sets the value of variable trackSectionId.
        /// </summary>
        [TestVariable("7b6987a1-2a41-4814-997d-efe54607e8b5")]
        public string trackSectionId
        {
            get { return _trackSectionId; }
            set { _trackSectionId = value; }
        }

        string _expectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedback.
        /// </summary>
        [TestVariable("dbcf9fc8-0b0b-44b6-ada2-3cbe4c5f1a3d")]
        public string expectedFeedback
        {
            get { return _expectedFeedback; }
            set { _expectedFeedback = value; }
        }

        string _removeEnabled;

        /// <summary>
        /// Gets or sets the value of variable removeEnabled.
        /// </summary>
        [TestVariable("2b5cdc21-e1c2-48fd-8ec9-95988ba01032")]
        public string removeEnabled
        {
            get { return _removeEnabled; }
            set { _removeEnabled = value; }
        }

        string _closeForms;

        /// <summary>
        /// Gets or sets the value of variable closeForms.
        /// </summary>
        [TestVariable("4a5b1788-b6eb-43ec-8577-0d96c3d2f69e")]
        public string closeForms
        {
            get { return _closeForms; }
            set { _closeForms = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Trackline_Validations.NS_EMT_ValidateRemoveButtonStatus(trainSeed, trackSectionId, expectedFeedback, ValueConverter.ArgumentFromString<bool>("removeEnabled", removeEnabled), ValueConverter.ArgumentFromString<bool>("closeForms", closeForms));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
