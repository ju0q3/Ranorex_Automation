///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.SystemConfiguration.Consist_Defaults
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateTrainGroupRowExists_TrainDefaultData_NS recording.
    /// </summary>
    [TestModule("319ad5c2-8fec-42d0-b2c1-3a28d55ffc46", ModuleType.Recording, 1)]
    public partial class ValidateTrainGroupRowExists_TrainDefaultData_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static ValidateTrainGroupRowExists_TrainDefaultData_NS instance = new ValidateTrainGroupRowExists_TrainDefaultData_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateTrainGroupRowExists_TrainDefaultData_NS()
        {
            expTrainGroup = "";
            expDescription = "";
            expAutomaticAssignedWork = "False";
            expRestrictedScheduleCreation = "False";
            expDoNotPlan = "False";
            expPassenger = "False";
            expHelper = "False";
            expDelayThreshold = "";
            expPlanningCategory = "";
            expEarlyThreshold = "";
            expLateThreshold = "";
            expShortCrewLife = "";
            expColor = "";
            expCostCategory = "";
            expMaxDeratedSpeed = "";
            expTimeFactor = "";
            expAccelDecel = "";
            expMaxClearAheadInterval = "";
            expMinClearAheadInterval = "";
            expAutoHelper = "False";
            expEnableManualRouting = "False";
            validateExist = "False";
            closeForm = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateTrainGroupRowExists_TrainDefaultData_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _expTrainGroup;

        /// <summary>
        /// Gets or sets the value of variable expTrainGroup.
        /// </summary>
        [TestVariable("8dee2459-5503-4ff1-8eb4-48a1ba841c9d")]
        public string expTrainGroup
        {
            get { return _expTrainGroup; }
            set { _expTrainGroup = value; }
        }

        string _expDescription;

        /// <summary>
        /// Gets or sets the value of variable expDescription.
        /// </summary>
        [TestVariable("e0f96361-cb79-4eed-935d-4472a4e89639")]
        public string expDescription
        {
            get { return _expDescription; }
            set { _expDescription = value; }
        }

        string _expAutomaticAssignedWork;

        /// <summary>
        /// Gets or sets the value of variable expAutomaticAssignedWork.
        /// </summary>
        [TestVariable("2c1f91a2-4f59-466a-93d9-39260c887d1f")]
        public string expAutomaticAssignedWork
        {
            get { return _expAutomaticAssignedWork; }
            set { _expAutomaticAssignedWork = value; }
        }

        string _expRestrictedScheduleCreation;

        /// <summary>
        /// Gets or sets the value of variable expRestrictedScheduleCreation.
        /// </summary>
        [TestVariable("d6c12b22-75cb-47e7-bc44-98dc8b483b80")]
        public string expRestrictedScheduleCreation
        {
            get { return _expRestrictedScheduleCreation; }
            set { _expRestrictedScheduleCreation = value; }
        }

        string _expDoNotPlan;

        /// <summary>
        /// Gets or sets the value of variable expDoNotPlan.
        /// </summary>
        [TestVariable("50be1064-a19d-49d1-965e-6ffc76be1992")]
        public string expDoNotPlan
        {
            get { return _expDoNotPlan; }
            set { _expDoNotPlan = value; }
        }

        string _expPassenger;

        /// <summary>
        /// Gets or sets the value of variable expPassenger.
        /// </summary>
        [TestVariable("4cf409e0-91eb-43c5-818f-0ec6cb4badb2")]
        public string expPassenger
        {
            get { return _expPassenger; }
            set { _expPassenger = value; }
        }

        string _expHelper;

        /// <summary>
        /// Gets or sets the value of variable expHelper.
        /// </summary>
        [TestVariable("ed1b6d57-3dca-4288-8c8e-52dcb7330f0a")]
        public string expHelper
        {
            get { return _expHelper; }
            set { _expHelper = value; }
        }

        string _expDelayThreshold;

        /// <summary>
        /// Gets or sets the value of variable expDelayThreshold.
        /// </summary>
        [TestVariable("f0cd894b-5205-4ac0-b194-0961b042ffd8")]
        public string expDelayThreshold
        {
            get { return _expDelayThreshold; }
            set { _expDelayThreshold = value; }
        }

        string _expPlanningCategory;

        /// <summary>
        /// Gets or sets the value of variable expPlanningCategory.
        /// </summary>
        [TestVariable("5ae91238-d65d-4188-8b41-dcb527c60544")]
        public string expPlanningCategory
        {
            get { return _expPlanningCategory; }
            set { _expPlanningCategory = value; }
        }

        string _expEarlyThreshold;

        /// <summary>
        /// Gets or sets the value of variable expEarlyThreshold.
        /// </summary>
        [TestVariable("d9bc7552-ad80-40ef-98a7-bf197103e519")]
        public string expEarlyThreshold
        {
            get { return _expEarlyThreshold; }
            set { _expEarlyThreshold = value; }
        }

        string _expLateThreshold;

        /// <summary>
        /// Gets or sets the value of variable expLateThreshold.
        /// </summary>
        [TestVariable("e7c14ac9-5790-492b-b248-44b84d036064")]
        public string expLateThreshold
        {
            get { return _expLateThreshold; }
            set { _expLateThreshold = value; }
        }

        string _expShortCrewLife;

        /// <summary>
        /// Gets or sets the value of variable expShortCrewLife.
        /// </summary>
        [TestVariable("be7b1d4c-704f-4893-97c6-e3db4781e235")]
        public string expShortCrewLife
        {
            get { return _expShortCrewLife; }
            set { _expShortCrewLife = value; }
        }

        string _expColor;

        /// <summary>
        /// Gets or sets the value of variable expColor.
        /// </summary>
        [TestVariable("5646bdd3-40b1-4c40-b04a-16dc7df6ddf5")]
        public string expColor
        {
            get { return _expColor; }
            set { _expColor = value; }
        }

        string _expCostCategory;

        /// <summary>
        /// Gets or sets the value of variable expCostCategory.
        /// </summary>
        [TestVariable("49552e15-3933-4079-88c3-e71d671a3c3a")]
        public string expCostCategory
        {
            get { return _expCostCategory; }
            set { _expCostCategory = value; }
        }

        string _expMaxDeratedSpeed;

        /// <summary>
        /// Gets or sets the value of variable expMaxDeratedSpeed.
        /// </summary>
        [TestVariable("9fbe15ad-038f-4fbc-aec4-7c9a326fb746")]
        public string expMaxDeratedSpeed
        {
            get { return _expMaxDeratedSpeed; }
            set { _expMaxDeratedSpeed = value; }
        }

        string _expTimeFactor;

        /// <summary>
        /// Gets or sets the value of variable expTimeFactor.
        /// </summary>
        [TestVariable("b712854a-f395-439b-8c83-a72bf82544b0")]
        public string expTimeFactor
        {
            get { return _expTimeFactor; }
            set { _expTimeFactor = value; }
        }

        string _expAccelDecel;

        /// <summary>
        /// Gets or sets the value of variable expAccelDecel.
        /// </summary>
        [TestVariable("1a318226-0ef2-4d07-9e67-b6b27054c135")]
        public string expAccelDecel
        {
            get { return _expAccelDecel; }
            set { _expAccelDecel = value; }
        }

        string _expMaxClearAheadInterval;

        /// <summary>
        /// Gets or sets the value of variable expMaxClearAheadInterval.
        /// </summary>
        [TestVariable("40766eb0-3aa2-4441-8f33-83e3125df4fe")]
        public string expMaxClearAheadInterval
        {
            get { return _expMaxClearAheadInterval; }
            set { _expMaxClearAheadInterval = value; }
        }

        string _expMinClearAheadInterval;

        /// <summary>
        /// Gets or sets the value of variable expMinClearAheadInterval.
        /// </summary>
        [TestVariable("218b6ffa-13dd-48de-992a-7a2a97ff86e2")]
        public string expMinClearAheadInterval
        {
            get { return _expMinClearAheadInterval; }
            set { _expMinClearAheadInterval = value; }
        }

        string _expAutoHelper;

        /// <summary>
        /// Gets or sets the value of variable expAutoHelper.
        /// </summary>
        [TestVariable("d499e0c3-531d-4495-8d4a-275d93af845a")]
        public string expAutoHelper
        {
            get { return _expAutoHelper; }
            set { _expAutoHelper = value; }
        }

        string _expEnableManualRouting;

        /// <summary>
        /// Gets or sets the value of variable expEnableManualRouting.
        /// </summary>
        [TestVariable("01937892-2c47-48bb-b7f8-145876cbbedc")]
        public string expEnableManualRouting
        {
            get { return _expEnableManualRouting; }
            set { _expEnableManualRouting = value; }
        }

        string _validateExist;

        /// <summary>
        /// Gets or sets the value of variable validateExist.
        /// </summary>
        [TestVariable("bc0125c1-24d2-47b6-ad81-f21c1ac19ae9")]
        public string validateExist
        {
            get { return _validateExist; }
            set { _validateExist = value; }
        }

        string _closeForm;

        /// <summary>
        /// Gets or sets the value of variable closeForm.
        /// </summary>
        [TestVariable("d87dc569-9a8d-4f84-8822-a8d39352fbae")]
        public string closeForm
        {
            get { return _closeForm; }
            set { _closeForm = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_SystemConfiguration.NS_ValidateTrainGroupRowExists_TrainDefaultData(expTrainGroup, expDescription, ValueConverter.ArgumentFromString<bool>("expAutomaticAssignedWork", expAutomaticAssignedWork), ValueConverter.ArgumentFromString<bool>("expRestrictedScheduleCreation", expRestrictedScheduleCreation), ValueConverter.ArgumentFromString<bool>("expDoNotPlan", expDoNotPlan), ValueConverter.ArgumentFromString<bool>("expPassenger", expPassenger), ValueConverter.ArgumentFromString<bool>("expHelper", expHelper), expDelayThreshold, expPlanningCategory, expEarlyThreshold, expLateThreshold, expShortCrewLife, expColor, expCostCategory, expMaxDeratedSpeed, expTimeFactor, expAccelDecel, expMaxClearAheadInterval, expMinClearAheadInterval, ValueConverter.ArgumentFromString<bool>("expAutoHelper", expAutoHelper), ValueConverter.ArgumentFromString<bool>("expEnableManualRouting", expEnableManualRouting), ValueConverter.ArgumentFromString<bool>("validateExist", validateExist), ValueConverter.ArgumentFromString<bool>("closeForm", closeForm));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
