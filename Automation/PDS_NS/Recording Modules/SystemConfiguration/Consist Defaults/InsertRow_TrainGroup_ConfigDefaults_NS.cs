///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.SystemConfiguration.Consist_Defaults
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The InsertRow_TrainGroup_ConfigDefaults_NS recording.
    /// </summary>
    [TestModule("14f80962-b2e8-429f-ba85-c6a1ca3afada", ModuleType.Recording, 1)]
    public partial class InsertRow_TrainGroup_ConfigDefaults_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static InsertRow_TrainGroup_ConfigDefaults_NS instance = new InsertRow_TrainGroup_ConfigDefaults_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InsertRow_TrainGroup_ConfigDefaults_NS()
        {
            trainGroup = "";
            description = "";
            automaticAssignedWork = "False";
            restrictedScheduleCreation = "False";
            doNotPlan = "False";
            passenger = "False";
            helper = "False";
            delayThreshold = "";
            planningCategory = "";
            earlyThreshold = "";
            lateThreshold = "";
            shortCrewLife = "";
            color = "";
            costCategory = "";
            maxDeratedSpeed = "";
            timeFactor = "";
            accelDecel = "";
            maxClearAheadInterval = "";
            minClearAheadInterval = "";
            autoHelper = "False";
            enableManualRouting = "False";
            expectedFeedback = "";
            reset = "False";
            apply = "False";
            closeForms = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InsertRow_TrainGroup_ConfigDefaults_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _trainGroup;

        /// <summary>
        /// Gets or sets the value of variable trainGroup.
        /// </summary>
        [TestVariable("29e7af55-dc59-4151-984a-871d5b75cf89")]
        public string trainGroup
        {
            get { return _trainGroup; }
            set { _trainGroup = value; }
        }

        string _description;

        /// <summary>
        /// Gets or sets the value of variable description.
        /// </summary>
        [TestVariable("cc9588a9-20c0-4208-9467-55ba9c3aff84")]
        public string description
        {
            get { return _description; }
            set { _description = value; }
        }

        string _automaticAssignedWork;

        /// <summary>
        /// Gets or sets the value of variable automaticAssignedWork.
        /// </summary>
        [TestVariable("bf14021c-22dd-4bbd-991c-00f0330ff596")]
        public string automaticAssignedWork
        {
            get { return _automaticAssignedWork; }
            set { _automaticAssignedWork = value; }
        }

        string _restrictedScheduleCreation;

        /// <summary>
        /// Gets or sets the value of variable restrictedScheduleCreation.
        /// </summary>
        [TestVariable("a17a9776-47ea-4507-b693-3763656f4c5c")]
        public string restrictedScheduleCreation
        {
            get { return _restrictedScheduleCreation; }
            set { _restrictedScheduleCreation = value; }
        }

        string _doNotPlan;

        /// <summary>
        /// Gets or sets the value of variable doNotPlan.
        /// </summary>
        [TestVariable("a4b9793c-a998-46e1-a52a-73ef158d0515")]
        public string doNotPlan
        {
            get { return _doNotPlan; }
            set { _doNotPlan = value; }
        }

        string _passenger;

        /// <summary>
        /// Gets or sets the value of variable passenger.
        /// </summary>
        [TestVariable("d655274e-9141-4ccf-888e-9f4463af4192")]
        public string passenger
        {
            get { return _passenger; }
            set { _passenger = value; }
        }

        string _helper;

        /// <summary>
        /// Gets or sets the value of variable helper.
        /// </summary>
        [TestVariable("0f754860-e254-4f93-a8e9-8aa7a24090dc")]
        public string helper
        {
            get { return _helper; }
            set { _helper = value; }
        }

        string _delayThreshold;

        /// <summary>
        /// Gets or sets the value of variable delayThreshold.
        /// </summary>
        [TestVariable("39057151-bf6b-45d0-af29-1459912ec081")]
        public string delayThreshold
        {
            get { return _delayThreshold; }
            set { _delayThreshold = value; }
        }

        string _planningCategory;

        /// <summary>
        /// Gets or sets the value of variable planningCategory.
        /// </summary>
        [TestVariable("979d3eb5-b84c-4c1e-ace2-e2b3ed8d4ecd")]
        public string planningCategory
        {
            get { return _planningCategory; }
            set { _planningCategory = value; }
        }

        string _earlyThreshold;

        /// <summary>
        /// Gets or sets the value of variable earlyThreshold.
        /// </summary>
        [TestVariable("a63c9018-8a92-4ef7-be44-ec447a044de9")]
        public string earlyThreshold
        {
            get { return _earlyThreshold; }
            set { _earlyThreshold = value; }
        }

        string _lateThreshold;

        /// <summary>
        /// Gets or sets the value of variable lateThreshold.
        /// </summary>
        [TestVariable("4ef8218c-7125-40f3-bbac-d57a8d61e62f")]
        public string lateThreshold
        {
            get { return _lateThreshold; }
            set { _lateThreshold = value; }
        }

        string _shortCrewLife;

        /// <summary>
        /// Gets or sets the value of variable shortCrewLife.
        /// </summary>
        [TestVariable("8563dc03-ab46-4559-95aa-117c4f0bf4b1")]
        public string shortCrewLife
        {
            get { return _shortCrewLife; }
            set { _shortCrewLife = value; }
        }

        string _color;

        /// <summary>
        /// Gets or sets the value of variable color.
        /// </summary>
        [TestVariable("c78bb473-838b-4c83-8c06-81a0349015dc")]
        public string color
        {
            get { return _color; }
            set { _color = value; }
        }

        string _costCategory;

        /// <summary>
        /// Gets or sets the value of variable costCategory.
        /// </summary>
        [TestVariable("63e289b3-583c-4865-b13f-55c07900b6b7")]
        public string costCategory
        {
            get { return _costCategory; }
            set { _costCategory = value; }
        }

        string _maxDeratedSpeed;

        /// <summary>
        /// Gets or sets the value of variable maxDeratedSpeed.
        /// </summary>
        [TestVariable("ba7fd97b-05a3-4d6f-b285-9c063e80428d")]
        public string maxDeratedSpeed
        {
            get { return _maxDeratedSpeed; }
            set { _maxDeratedSpeed = value; }
        }

        string _timeFactor;

        /// <summary>
        /// Gets or sets the value of variable timeFactor.
        /// </summary>
        [TestVariable("3bfe8e1a-ef2f-440d-905c-e6fb0b011168")]
        public string timeFactor
        {
            get { return _timeFactor; }
            set { _timeFactor = value; }
        }

        string _accelDecel;

        /// <summary>
        /// Gets or sets the value of variable accelDecel.
        /// </summary>
        [TestVariable("3e2a5439-9a10-475f-8fbf-bf30a1febb62")]
        public string accelDecel
        {
            get { return _accelDecel; }
            set { _accelDecel = value; }
        }

        string _maxClearAheadInterval;

        /// <summary>
        /// Gets or sets the value of variable maxClearAheadInterval.
        /// </summary>
        [TestVariable("60f0b164-2f61-440c-a550-087d4ad68e45")]
        public string maxClearAheadInterval
        {
            get { return _maxClearAheadInterval; }
            set { _maxClearAheadInterval = value; }
        }

        string _minClearAheadInterval;

        /// <summary>
        /// Gets or sets the value of variable minClearAheadInterval.
        /// </summary>
        [TestVariable("ef7a370e-efca-4f94-9bda-d9bfa31a1839")]
        public string minClearAheadInterval
        {
            get { return _minClearAheadInterval; }
            set { _minClearAheadInterval = value; }
        }

        string _autoHelper;

        /// <summary>
        /// Gets or sets the value of variable autoHelper.
        /// </summary>
        [TestVariable("3cd29878-bfbd-47a3-bedc-11705d9300b1")]
        public string autoHelper
        {
            get { return _autoHelper; }
            set { _autoHelper = value; }
        }

        string _enableManualRouting;

        /// <summary>
        /// Gets or sets the value of variable enableManualRouting.
        /// </summary>
        [TestVariable("4d380159-f8b5-40e6-a10b-e48109f7e7a3")]
        public string enableManualRouting
        {
            get { return _enableManualRouting; }
            set { _enableManualRouting = value; }
        }

        string _expectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedback.
        /// </summary>
        [TestVariable("bc078f1e-692f-4df5-8ee9-96d758a220fa")]
        public string expectedFeedback
        {
            get { return _expectedFeedback; }
            set { _expectedFeedback = value; }
        }

        string _reset;

        /// <summary>
        /// Gets or sets the value of variable reset.
        /// </summary>
        [TestVariable("5e972b30-0dbf-4e7a-8a51-4035500aba78")]
        public string reset
        {
            get { return _reset; }
            set { _reset = value; }
        }

        string _apply;

        /// <summary>
        /// Gets or sets the value of variable apply.
        /// </summary>
        [TestVariable("007ebda3-9de6-457e-86c2-7a421dca3fd3")]
        public string apply
        {
            get { return _apply; }
            set { _apply = value; }
        }

        string _closeForms;

        /// <summary>
        /// Gets or sets the value of variable closeForms.
        /// </summary>
        [TestVariable("8d19cc98-6d66-4aa8-ba2a-ed9842898f77")]
        public string closeForms
        {
            get { return _closeForms; }
            set { _closeForms = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_SystemConfiguration.NS_InsertRow_TrainGroup_ConfigDefaults(trainGroup, description, ValueConverter.ArgumentFromString<bool>("automaticAssignedWork", automaticAssignedWork), ValueConverter.ArgumentFromString<bool>("restrictedScheduleCreation", restrictedScheduleCreation), ValueConverter.ArgumentFromString<bool>("doNotPlan", doNotPlan), ValueConverter.ArgumentFromString<bool>("passenger", passenger), ValueConverter.ArgumentFromString<bool>("helper", helper), delayThreshold, planningCategory, earlyThreshold, lateThreshold, shortCrewLife, color, costCategory, maxDeratedSpeed, timeFactor, accelDecel, maxClearAheadInterval, minClearAheadInterval, ValueConverter.ArgumentFromString<bool>("autoHelper", autoHelper), ValueConverter.ArgumentFromString<bool>("enableManualRouting", enableManualRouting), expectedFeedback, ValueConverter.ArgumentFromString<bool>("reset", reset), ValueConverter.ArgumentFromString<bool>("apply", apply), ValueConverter.ArgumentFromString<bool>("closeForms", closeForms));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
