///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.SystemConfiguration.Consist_Defaults
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ModifyRow_TrainGroup_ConfigDefaults_NS recording.
    /// </summary>
    [TestModule("5ee9cf13-1d80-4803-85c1-f95ee5203381", ModuleType.Recording, 1)]
    public partial class ModifyRow_TrainGroup_ConfigDefaults_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static ModifyRow_TrainGroup_ConfigDefaults_NS instance = new ModifyRow_TrainGroup_ConfigDefaults_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ModifyRow_TrainGroup_ConfigDefaults_NS()
        {
            trainGroup = "";
            description = "";
            automaticAssignedWork = "False";
            restrictedScheduleCreation = "True";
            doNotPlan = "False";
            passenger = "False";
            helper = "False";
            delayThreshold = "";
            planningCategory = "";
            earlyThreshold = "";
            lateThreshold = "";
            shortCrewLife = "";
            color = "";
            costCategory = "";
            maxDeratedSpeed = "";
            timeFactor = "";
            accelDecel = "";
            maxClearAheadInterval = "";
            minClearAheadInterval = "";
            autoHelper = "False";
            enableManualRouting = "False";
            expectedFeedback = "";
            reset = "False";
            apply = "True";
            closeForms = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ModifyRow_TrainGroup_ConfigDefaults_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _trainGroup;

        /// <summary>
        /// Gets or sets the value of variable trainGroup.
        /// </summary>
        [TestVariable("4864afed-9d77-4a7c-b167-90dc47bea9df")]
        public string trainGroup
        {
            get { return _trainGroup; }
            set { _trainGroup = value; }
        }

        string _description;

        /// <summary>
        /// Gets or sets the value of variable description.
        /// </summary>
        [TestVariable("32b29c40-1c65-4388-a9dd-e80785565014")]
        public string description
        {
            get { return _description; }
            set { _description = value; }
        }

        string _automaticAssignedWork;

        /// <summary>
        /// Gets or sets the value of variable automaticAssignedWork.
        /// </summary>
        [TestVariable("c6fcafc3-0473-4e42-b9bf-9862ccd89d7c")]
        public string automaticAssignedWork
        {
            get { return _automaticAssignedWork; }
            set { _automaticAssignedWork = value; }
        }

        string _restrictedScheduleCreation;

        /// <summary>
        /// Gets or sets the value of variable restrictedScheduleCreation.
        /// </summary>
        [TestVariable("f2b91b84-c48b-43e8-ba3d-425d7e6bfa9e")]
        public string restrictedScheduleCreation
        {
            get { return _restrictedScheduleCreation; }
            set { _restrictedScheduleCreation = value; }
        }

        string _doNotPlan;

        /// <summary>
        /// Gets or sets the value of variable doNotPlan.
        /// </summary>
        [TestVariable("27da8e33-0e7a-434c-99b9-80f8ee845557")]
        public string doNotPlan
        {
            get { return _doNotPlan; }
            set { _doNotPlan = value; }
        }

        string _passenger;

        /// <summary>
        /// Gets or sets the value of variable passenger.
        /// </summary>
        [TestVariable("1872a96f-bfea-430a-a531-44ce5c0f73c4")]
        public string passenger
        {
            get { return _passenger; }
            set { _passenger = value; }
        }

        string _helper;

        /// <summary>
        /// Gets or sets the value of variable helper.
        /// </summary>
        [TestVariable("24870728-144d-47c4-b682-ca9a7fbfeff7")]
        public string helper
        {
            get { return _helper; }
            set { _helper = value; }
        }

        string _delayThreshold;

        /// <summary>
        /// Gets or sets the value of variable delayThreshold.
        /// </summary>
        [TestVariable("8114b61d-4556-45b2-a8a8-c1ebbb4a72c1")]
        public string delayThreshold
        {
            get { return _delayThreshold; }
            set { _delayThreshold = value; }
        }

        string _planningCategory;

        /// <summary>
        /// Gets or sets the value of variable planningCategory.
        /// </summary>
        [TestVariable("36e29759-fe15-48a2-9885-c9ac37fff130")]
        public string planningCategory
        {
            get { return _planningCategory; }
            set { _planningCategory = value; }
        }

        string _earlyThreshold;

        /// <summary>
        /// Gets or sets the value of variable earlyThreshold.
        /// </summary>
        [TestVariable("f4e86c8c-605b-4901-9698-69b69d1a99b6")]
        public string earlyThreshold
        {
            get { return _earlyThreshold; }
            set { _earlyThreshold = value; }
        }

        string _lateThreshold;

        /// <summary>
        /// Gets or sets the value of variable lateThreshold.
        /// </summary>
        [TestVariable("15d63026-8933-4081-8c59-5d72ec09f803")]
        public string lateThreshold
        {
            get { return _lateThreshold; }
            set { _lateThreshold = value; }
        }

        string _shortCrewLife;

        /// <summary>
        /// Gets or sets the value of variable shortCrewLife.
        /// </summary>
        [TestVariable("4ac8046b-d795-4735-a539-3d8bfdf5f08b")]
        public string shortCrewLife
        {
            get { return _shortCrewLife; }
            set { _shortCrewLife = value; }
        }

        string _color;

        /// <summary>
        /// Gets or sets the value of variable color.
        /// </summary>
        [TestVariable("76a15fba-eaab-40fb-b9d2-648097042abd")]
        public string color
        {
            get { return _color; }
            set { _color = value; }
        }

        string _costCategory;

        /// <summary>
        /// Gets or sets the value of variable costCategory.
        /// </summary>
        [TestVariable("a628b45f-6ab2-455c-9c91-8a08af6c9f2c")]
        public string costCategory
        {
            get { return _costCategory; }
            set { _costCategory = value; }
        }

        string _maxDeratedSpeed;

        /// <summary>
        /// Gets or sets the value of variable maxDeratedSpeed.
        /// </summary>
        [TestVariable("f02fc9d1-9265-40e7-95eb-fd234ee27751")]
        public string maxDeratedSpeed
        {
            get { return _maxDeratedSpeed; }
            set { _maxDeratedSpeed = value; }
        }

        string _timeFactor;

        /// <summary>
        /// Gets or sets the value of variable timeFactor.
        /// </summary>
        [TestVariable("3c43b62a-0a99-48f7-b269-9f8e601c8fec")]
        public string timeFactor
        {
            get { return _timeFactor; }
            set { _timeFactor = value; }
        }

        string _accelDecel;

        /// <summary>
        /// Gets or sets the value of variable accelDecel.
        /// </summary>
        [TestVariable("cdf868c7-81ee-45b8-a5a1-787487bbaae6")]
        public string accelDecel
        {
            get { return _accelDecel; }
            set { _accelDecel = value; }
        }

        string _maxClearAheadInterval;

        /// <summary>
        /// Gets or sets the value of variable maxClearAheadInterval.
        /// </summary>
        [TestVariable("ce3d90ac-f95b-4b8e-9c70-f00e09ae23b7")]
        public string maxClearAheadInterval
        {
            get { return _maxClearAheadInterval; }
            set { _maxClearAheadInterval = value; }
        }

        string _minClearAheadInterval;

        /// <summary>
        /// Gets or sets the value of variable minClearAheadInterval.
        /// </summary>
        [TestVariable("a1be1736-892e-4620-803d-6a1078539ee5")]
        public string minClearAheadInterval
        {
            get { return _minClearAheadInterval; }
            set { _minClearAheadInterval = value; }
        }

        string _autoHelper;

        /// <summary>
        /// Gets or sets the value of variable autoHelper.
        /// </summary>
        [TestVariable("6f916fc2-5372-40d9-9cee-de278b0a4832")]
        public string autoHelper
        {
            get { return _autoHelper; }
            set { _autoHelper = value; }
        }

        string _enableManualRouting;

        /// <summary>
        /// Gets or sets the value of variable enableManualRouting.
        /// </summary>
        [TestVariable("c4e3f48e-a6f1-4c43-8e6a-cfa820a72f8b")]
        public string enableManualRouting
        {
            get { return _enableManualRouting; }
            set { _enableManualRouting = value; }
        }

        string _expectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedback.
        /// </summary>
        [TestVariable("79d556b8-9c05-4ba9-97fa-ebebb2be8e94")]
        public string expectedFeedback
        {
            get { return _expectedFeedback; }
            set { _expectedFeedback = value; }
        }

        string _reset;

        /// <summary>
        /// Gets or sets the value of variable reset.
        /// </summary>
        [TestVariable("d27e956e-3364-4977-9dbb-e49533fb0586")]
        public string reset
        {
            get { return _reset; }
            set { _reset = value; }
        }

        string _apply;

        /// <summary>
        /// Gets or sets the value of variable apply.
        /// </summary>
        [TestVariable("e532280d-ac6a-4fa4-aa4c-8e583a85aa15")]
        public string apply
        {
            get { return _apply; }
            set { _apply = value; }
        }

        string _closeForms;

        /// <summary>
        /// Gets or sets the value of variable closeForms.
        /// </summary>
        [TestVariable("e679012d-73c5-48d6-850d-c90110d16d4c")]
        public string closeForms
        {
            get { return _closeForms; }
            set { _closeForms = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_SystemConfiguration.NS_ModifyRow_TrainGroup_ConfigDefaults(trainGroup, description, ValueConverter.ArgumentFromString<bool>("automaticAssignedWork", automaticAssignedWork), ValueConverter.ArgumentFromString<bool>("restrictedScheduleCreation", restrictedScheduleCreation), ValueConverter.ArgumentFromString<bool>("doNotPlan", doNotPlan), ValueConverter.ArgumentFromString<bool>("passenger", passenger), ValueConverter.ArgumentFromString<bool>("helper", helper), delayThreshold, planningCategory, earlyThreshold, lateThreshold, shortCrewLife, color, costCategory, maxDeratedSpeed, timeFactor, accelDecel, maxClearAheadInterval, minClearAheadInterval, ValueConverter.ArgumentFromString<bool>("autoHelper", autoHelper), ValueConverter.ArgumentFromString<bool>("enableManualRouting", enableManualRouting), expectedFeedback, ValueConverter.ArgumentFromString<bool>("reset", reset), ValueConverter.ArgumentFromString<bool>("apply", apply), ValueConverter.ArgumentFromString<bool>("closeForms", closeForms));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
