///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.SystemConfiguration
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The InsertRow_TrainClearanceRouteConfiguration recording.
    /// </summary>
    [TestModule("6a2ce362-ed4d-4af0-8e2a-fe6ff0948aaa", ModuleType.Recording, 1)]
    public partial class InsertRow_TrainClearanceRouteConfiguration : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static InsertRow_TrainClearanceRouteConfiguration instance = new InsertRow_TrainClearanceRouteConfiguration();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InsertRow_TrainClearanceRouteConfiguration()
        {
            crewLineSegment = "";
            trainGroup = "";
            originateOpsta = "";
            terminateOpsta = "";
            limit1Opsta = "";
            limit2Opsta = "";
            expectedFeedback = "";
            reset = "";
            apply = "";
            closeForms = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InsertRow_TrainClearanceRouteConfiguration Instance
        {
            get { return instance; }
        }

#region Variables

        string _crewLineSegment;

        /// <summary>
        /// Gets or sets the value of variable crewLineSegment.
        /// </summary>
        [TestVariable("d8a4e3c0-c21c-4d8a-a71b-7b80a6f53333")]
        public string crewLineSegment
        {
            get { return _crewLineSegment; }
            set { _crewLineSegment = value; }
        }

        string _trainGroup;

        /// <summary>
        /// Gets or sets the value of variable trainGroup.
        /// </summary>
        [TestVariable("3d80badb-6c71-489a-b254-c79cf4fc289c")]
        public string trainGroup
        {
            get { return _trainGroup; }
            set { _trainGroup = value; }
        }

        string _originateOpsta;

        /// <summary>
        /// Gets or sets the value of variable originateOpsta.
        /// </summary>
        [TestVariable("a5d98c76-4a50-4fac-8eec-b069414ed6e3")]
        public string originateOpsta
        {
            get { return _originateOpsta; }
            set { _originateOpsta = value; }
        }

        string _terminateOpsta;

        /// <summary>
        /// Gets or sets the value of variable terminateOpsta.
        /// </summary>
        [TestVariable("0d76d71c-123a-49b7-b0a7-af3b42c9369a")]
        public string terminateOpsta
        {
            get { return _terminateOpsta; }
            set { _terminateOpsta = value; }
        }

        string _limit1Opsta;

        /// <summary>
        /// Gets or sets the value of variable limit1Opsta.
        /// </summary>
        [TestVariable("dcc39db5-3bb0-4759-beaa-9a90b979a5b3")]
        public string limit1Opsta
        {
            get { return _limit1Opsta; }
            set { _limit1Opsta = value; }
        }

        string _limit2Opsta;

        /// <summary>
        /// Gets or sets the value of variable limit2Opsta.
        /// </summary>
        [TestVariable("b01c637c-c100-4b4c-929c-925d1875bb85")]
        public string limit2Opsta
        {
            get { return _limit2Opsta; }
            set { _limit2Opsta = value; }
        }

        string _expectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedback.
        /// </summary>
        [TestVariable("608d452e-99e2-4a36-9470-a79ddd648022")]
        public string expectedFeedback
        {
            get { return _expectedFeedback; }
            set { _expectedFeedback = value; }
        }

        string _reset;

        /// <summary>
        /// Gets or sets the value of variable reset.
        /// </summary>
        [TestVariable("5126faa8-bb83-4058-8b37-66b7304a1c93")]
        public string reset
        {
            get { return _reset; }
            set { _reset = value; }
        }

        string _apply;

        /// <summary>
        /// Gets or sets the value of variable apply.
        /// </summary>
        [TestVariable("1df4617e-c626-40ac-ba67-d6e7fac89fef")]
        public string apply
        {
            get { return _apply; }
            set { _apply = value; }
        }

        string _closeForms;

        /// <summary>
        /// Gets or sets the value of variable closeForms.
        /// </summary>
        [TestVariable("80637fd2-709e-4fce-8c38-46fdbc6257ea")]
        public string closeForms
        {
            get { return _closeForms; }
            set { _closeForms = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_SystemConfiguration.NS_InsertRow_TrainClearanceRouteConfiguration(crewLineSegment, trainGroup, originateOpsta, terminateOpsta, limit1Opsta, limit2Opsta, expectedFeedback, ValueConverter.ArgumentFromString<bool>("reset", reset), ValueConverter.ArgumentFromString<bool>("apply", apply), ValueConverter.ArgumentFromString<bool>("closeForms", closeForms));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
