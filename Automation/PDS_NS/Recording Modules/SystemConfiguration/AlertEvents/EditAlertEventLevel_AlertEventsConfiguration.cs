///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.SystemConfiguration.AlertEvents
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EditAlertEventLevel_AlertEventsConfiguration recording.
    /// </summary>
    [TestModule("1f711b23-85dd-4592-83c1-93c47b6a8140", ModuleType.Recording, 1)]
    public partial class EditAlertEventLevel_AlertEventsConfiguration : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static EditAlertEventLevel_AlertEventsConfiguration instance = new EditAlertEventLevel_AlertEventsConfiguration();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EditAlertEventLevel_AlertEventsConfiguration()
        {
            alertLevel = "";
            displayPopup = "False";
            ackReq = "False";
            displayDuration = "";
            audible = "False";
            escalate = "False";
            closeForms = "False";
            color = "";
            escalateDelay = "";
            audibleDuration = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EditAlertEventLevel_AlertEventsConfiguration Instance
        {
            get { return instance; }
        }

#region Variables

        string _alertLevel;

        /// <summary>
        /// Gets or sets the value of variable alertLevel.
        /// </summary>
        [TestVariable("b14a037a-8592-4768-b9ca-ab106743a3cd")]
        public string alertLevel
        {
            get { return _alertLevel; }
            set { _alertLevel = value; }
        }

        string _displayPopup;

        /// <summary>
        /// Gets or sets the value of variable displayPopup.
        /// </summary>
        [TestVariable("9a5cdf59-c70e-4348-b586-b10571c70fd5")]
        public string displayPopup
        {
            get { return _displayPopup; }
            set { _displayPopup = value; }
        }

        string _ackReq;

        /// <summary>
        /// Gets or sets the value of variable ackReq.
        /// </summary>
        [TestVariable("793ea37b-ae31-4daf-a8a5-9fba626a16c6")]
        public string ackReq
        {
            get { return _ackReq; }
            set { _ackReq = value; }
        }

        string _displayDuration;

        /// <summary>
        /// Gets or sets the value of variable displayDuration.
        /// </summary>
        [TestVariable("844058af-9c34-4c0a-be26-633f7f3308ad")]
        public string displayDuration
        {
            get { return _displayDuration; }
            set { _displayDuration = value; }
        }

        string _audible;

        /// <summary>
        /// Gets or sets the value of variable audible.
        /// </summary>
        [TestVariable("445f7748-162a-4ada-9864-0340fbe91a25")]
        public string audible
        {
            get { return _audible; }
            set { _audible = value; }
        }

        string _escalate;

        /// <summary>
        /// Gets or sets the value of variable escalate.
        /// </summary>
        [TestVariable("7eca3f77-9e8d-4130-9fe0-575fe4c301c0")]
        public string escalate
        {
            get { return _escalate; }
            set { _escalate = value; }
        }

        string _closeForms;

        /// <summary>
        /// Gets or sets the value of variable closeForms.
        /// </summary>
        [TestVariable("b1458c56-b36d-4569-9d7f-f06db275a181")]
        public string closeForms
        {
            get { return _closeForms; }
            set { _closeForms = value; }
        }

        string _color;

        /// <summary>
        /// Gets or sets the value of variable color.
        /// </summary>
        [TestVariable("a1894487-1c2a-45e7-9cd6-03135e1ac272")]
        public string color
        {
            get { return _color; }
            set { _color = value; }
        }

        string _escalateDelay;

        /// <summary>
        /// Gets or sets the value of variable escalateDelay.
        /// </summary>
        [TestVariable("926a206f-e57a-48d9-8c56-0047c681c34f")]
        public string escalateDelay
        {
            get { return _escalateDelay; }
            set { _escalateDelay = value; }
        }

        string _audibleDuration;

        /// <summary>
        /// Gets or sets the value of variable audibleDuration.
        /// </summary>
        [TestVariable("21eed8c2-3137-4864-8a6e-4d4a5e7bae7b")]
        public string audibleDuration
        {
            get { return _audibleDuration; }
            set { _audibleDuration = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_SystemConfiguration.NS_EditAlertEventLevel_AlertEventConfiguration(alertLevel, ValueConverter.ArgumentFromString<bool>("displayPopup", displayPopup), color, ValueConverter.ArgumentFromString<bool>("ackReq", ackReq), displayDuration, ValueConverter.ArgumentFromString<bool>("audible", audible), audibleDuration, ValueConverter.ArgumentFromString<bool>("escalate", escalate), escalateDelay, ValueConverter.ArgumentFromString<bool>("closeForms", closeForms));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
