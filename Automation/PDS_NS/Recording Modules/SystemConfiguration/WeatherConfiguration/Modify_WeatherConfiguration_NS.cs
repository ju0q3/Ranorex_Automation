///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.SystemConfiguration.WeatherConfiguration
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Modify_WeatherConfiguration_NS recording.
    /// </summary>
    [TestModule("99bd3258-db7d-482e-b678-f2973da30eed", ModuleType.Recording, 1)]
    public partial class Modify_WeatherConfiguration_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static Modify_WeatherConfiguration_NS instance = new Modify_WeatherConfiguration_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Modify_WeatherConfiguration_NS()
        {
            division = "Georgia";
            stationName = "ABT GA";
            weatherReporting = "True";
            reset = "False";
            clickApply = "True";
            closeForms = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Modify_WeatherConfiguration_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _division;

        /// <summary>
        /// Gets or sets the value of variable division.
        /// </summary>
        [TestVariable("bd316db0-ceb0-4891-82d9-1b2d26514d5a")]
        public string division
        {
            get { return _division; }
            set { _division = value; }
        }

        string _stationName;

        /// <summary>
        /// Gets or sets the value of variable stationName.
        /// </summary>
        [TestVariable("ca9330f8-1275-4fed-b86e-aea1d44ae465")]
        public string stationName
        {
            get { return _stationName; }
            set { _stationName = value; }
        }

        string _weatherReporting;

        /// <summary>
        /// Gets or sets the value of variable weatherReporting.
        /// </summary>
        [TestVariable("9ed65124-e630-41a7-a05e-5daf6be30e43")]
        public string weatherReporting
        {
            get { return _weatherReporting; }
            set { _weatherReporting = value; }
        }

        string _reset;

        /// <summary>
        /// Gets or sets the value of variable reset.
        /// </summary>
        [TestVariable("3f629012-b151-4385-8ee0-6bc25f5cef53")]
        public string reset
        {
            get { return _reset; }
            set { _reset = value; }
        }

        string _clickApply;

        /// <summary>
        /// Gets or sets the value of variable clickApply.
        /// </summary>
        [TestVariable("45803b35-2d9c-4d4a-ab5b-ac9ce6a573f6")]
        public string clickApply
        {
            get { return _clickApply; }
            set { _clickApply = value; }
        }

        string _closeForms;

        /// <summary>
        /// Gets or sets the value of variable closeForms.
        /// </summary>
        [TestVariable("1dbace88-0229-413e-9f6e-a5a096b5c754")]
        public string closeForms
        {
            get { return _closeForms; }
            set { _closeForms = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_SystemConfiguration.NS_ModifyWeatherConfiguration(division, stationName, ValueConverter.ArgumentFromString<bool>("weatherReporting", weatherReporting), ValueConverter.ArgumentFromString<bool>("reset", reset), ValueConverter.ArgumentFromString<bool>("clickApply", clickApply), ValueConverter.ArgumentFromString<bool>("closeForms", closeForms));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
