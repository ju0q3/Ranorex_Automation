///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.SystemConfiguration
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SetSystemTrackingParameters recording.
    /// </summary>
    [TestModule("ab717d1b-5389-4ccb-a97b-c5d1c2cea655", ModuleType.Recording, 1)]
    public partial class SetSystemTrackingParameters : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static SetSystemTrackingParameters instance = new SetSystemTrackingParameters();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SetSystemTrackingParameters()
        {
            timerOccupancy = "000:05";
            timerUnoccupancy = "000:01";
            departureListVisibility = "";
            departureEligibilityLimit = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SetSystemTrackingParameters Instance
        {
            get { return instance; }
        }

#region Variables

        string _timerOccupancy;

        /// <summary>
        /// Gets or sets the value of variable timerOccupancy.
        /// </summary>
        [TestVariable("54102cbf-ffea-47ad-9b9c-29715c5b2936")]
        public string timerOccupancy
        {
            get { return _timerOccupancy; }
            set { _timerOccupancy = value; }
        }

        string _timerUnoccupancy;

        /// <summary>
        /// Gets or sets the value of variable timerUnoccupancy.
        /// </summary>
        [TestVariable("cfff5642-f4ec-4bad-84e4-2a11288658a3")]
        public string timerUnoccupancy
        {
            get { return _timerUnoccupancy; }
            set { _timerUnoccupancy = value; }
        }

        string _departureListVisibility;

        /// <summary>
        /// Gets or sets the value of variable departureListVisibility.
        /// </summary>
        [TestVariable("5e48d90d-b667-4019-b3f1-b4911233a51c")]
        public string departureListVisibility
        {
            get { return _departureListVisibility; }
            set { _departureListVisibility = value; }
        }

        string _departureEligibilityLimit;

        /// <summary>
        /// Gets or sets the value of variable departureEligibilityLimit.
        /// </summary>
        [TestVariable("6780e734-e586-471e-9dee-97cade64d079")]
        public string departureEligibilityLimit
        {
            get { return _departureEligibilityLimit; }
            set { _departureEligibilityLimit = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_SystemConfiguration.NS_SetTrackingParameters(timerOccupancy, timerUnoccupancy, departureListVisibility, departureEligibilityLimit);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
