///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.SystemConfiguration.StationPairList
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The InsertRow_StationPair recording.
    /// </summary>
    [TestModule("148384a2-6207-4eea-99f2-538ce95206ae", ModuleType.Recording, 1)]
    public partial class InsertRow_StationPair : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static InsertRow_StationPair instance = new InsertRow_StationPair();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InsertRow_StationPair()
        {
            cutoverOpsta = "";
            linkedOpsta = "";
            reset = "False";
            closeForm = "False";
            apply = "True";
            expectedFeedback = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InsertRow_StationPair Instance
        {
            get { return instance; }
        }

#region Variables

        string _cutoverOpsta;

        /// <summary>
        /// Gets or sets the value of variable cutoverOpsta.
        /// </summary>
        [TestVariable("3e62dd66-a29e-48db-8f30-f7663397fa18")]
        public string cutoverOpsta
        {
            get { return _cutoverOpsta; }
            set { _cutoverOpsta = value; }
        }

        string _linkedOpsta;

        /// <summary>
        /// Gets or sets the value of variable linkedOpsta.
        /// </summary>
        [TestVariable("3417c2bb-7075-46a7-8a73-421965cdade3")]
        public string linkedOpsta
        {
            get { return _linkedOpsta; }
            set { _linkedOpsta = value; }
        }

        string _reset;

        /// <summary>
        /// Gets or sets the value of variable reset.
        /// </summary>
        [TestVariable("1b4949e2-9238-4a01-a89c-cf9e600772cb")]
        public string reset
        {
            get { return _reset; }
            set { _reset = value; }
        }

        string _closeForm;

        /// <summary>
        /// Gets or sets the value of variable closeForm.
        /// </summary>
        [TestVariable("f73a4c5a-1ea3-4417-b445-dc18ef4ecbbb")]
        public string closeForm
        {
            get { return _closeForm; }
            set { _closeForm = value; }
        }

        string _apply;

        /// <summary>
        /// Gets or sets the value of variable apply.
        /// </summary>
        [TestVariable("9360ff4c-2590-43eb-a077-c89dfd00e31b")]
        public string apply
        {
            get { return _apply; }
            set { _apply = value; }
        }

        string _expectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedback.
        /// </summary>
        [TestVariable("91d50aee-703c-4b57-abb7-99f1bcbfd437")]
        public string expectedFeedback
        {
            get { return _expectedFeedback; }
            set { _expectedFeedback = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_SystemConfiguration.NS_InsertRow_StationPair(cutoverOpsta, linkedOpsta, ValueConverter.ArgumentFromString<bool>("reset", reset), ValueConverter.ArgumentFromString<bool>("apply", apply), expectedFeedback, ValueConverter.ArgumentFromString<bool>("closeForm", closeForm));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
