///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.SystemConfiguration.BulletinItems
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateButtonState_BulletinItemsForm recording.
    /// </summary>
    [TestModule("eed21b4e-bf5a-4b25-bf62-3d82d3eacaad", ModuleType.Recording, 1)]
    public partial class ValidateButtonState_BulletinItemsForm : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static ValidateButtonState_BulletinItemsForm instance = new ValidateButtonState_BulletinItemsForm();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateButtonState_BulletinItemsForm()
        {
            okButton = "False";
            applyButton = "False";
            cancelButton = "False";
            resetButton = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateButtonState_BulletinItemsForm Instance
        {
            get { return instance; }
        }

#region Variables

        string _okButton;

        /// <summary>
        /// Gets or sets the value of variable okButton.
        /// </summary>
        [TestVariable("927296df-c71c-49b7-b6f3-11d22cdd7ab1")]
        public string okButton
        {
            get { return _okButton; }
            set { _okButton = value; }
        }

        string _applyButton;

        /// <summary>
        /// Gets or sets the value of variable applyButton.
        /// </summary>
        [TestVariable("b9d579fd-f8c4-458d-803f-0d7cfe613c55")]
        public string applyButton
        {
            get { return _applyButton; }
            set { _applyButton = value; }
        }

        string _cancelButton;

        /// <summary>
        /// Gets or sets the value of variable cancelButton.
        /// </summary>
        [TestVariable("44619b18-1ef8-45bf-8c12-33152fc6fd7b")]
        public string cancelButton
        {
            get { return _cancelButton; }
            set { _cancelButton = value; }
        }

        string _resetButton;

        /// <summary>
        /// Gets or sets the value of variable resetButton.
        /// </summary>
        [TestVariable("54687fce-4a46-4ab9-867d-bca8e99803f8")]
        public string resetButton
        {
            get { return _resetButton; }
            set { _resetButton = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_SystemConfiguration.NS_ValidateBulletinTypeFormButtonsState_BulletinItems(ValueConverter.ArgumentFromString<bool>("okButton", okButton), ValueConverter.ArgumentFromString<bool>("applyButton", applyButton), ValueConverter.ArgumentFromString<bool>("cancelButton", cancelButton), ValueConverter.ArgumentFromString<bool>("resetButton", resetButton));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
