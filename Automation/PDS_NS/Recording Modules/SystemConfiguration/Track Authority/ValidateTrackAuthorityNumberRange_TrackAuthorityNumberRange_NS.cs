///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.SystemConfiguration.Track_Authority
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateTrackAuthorityNumberRange_TrackAuthorityNumberRange_NS recording.
    /// </summary>
    [TestModule("36e1feb4-1e52-4890-b9ff-bea6ff6f7549", ModuleType.Recording, 1)]
    public partial class ValidateTrackAuthorityNumberRange_TrackAuthorityNumberRange_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static ValidateTrackAuthorityNumberRange_TrackAuthorityNumberRange_NS instance = new ValidateTrackAuthorityNumberRange_TrackAuthorityNumberRange_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateTrackAuthorityNumberRange_TrackAuthorityNumberRange_NS()
        {
            expMinimum = "";
            expMaximum = "";
            expValidateExist = "False";
            closeForms = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateTrackAuthorityNumberRange_TrackAuthorityNumberRange_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _expMinimum;

        /// <summary>
        /// Gets or sets the value of variable expMinimum.
        /// </summary>
        [TestVariable("19a23f8d-6ae3-48f7-83de-d8571655b9a9")]
        public string expMinimum
        {
            get { return _expMinimum; }
            set { _expMinimum = value; }
        }

        string _expMaximum;

        /// <summary>
        /// Gets or sets the value of variable expMaximum.
        /// </summary>
        [TestVariable("e11c29a5-46ed-49dd-8126-8cc9b3a432b2")]
        public string expMaximum
        {
            get { return _expMaximum; }
            set { _expMaximum = value; }
        }

        string _expValidateExist;

        /// <summary>
        /// Gets or sets the value of variable expValidateExist.
        /// </summary>
        [TestVariable("5ef2517b-994d-4c32-84c9-994ad3627a4e")]
        public string expValidateExist
        {
            get { return _expValidateExist; }
            set { _expValidateExist = value; }
        }

        string _closeForms;

        /// <summary>
        /// Gets or sets the value of variable closeForms.
        /// </summary>
        [TestVariable("51bcaef6-b456-4fd2-9557-b60bbc17bef7")]
        public string closeForms
        {
            get { return _closeForms; }
            set { _closeForms = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_SystemConfiguration.NS_ValidateTrackAuthorityNumberRange_TrackAuthorityNumberRange(expMinimum, expMaximum, ValueConverter.ArgumentFromString<bool>("expValidateExist", expValidateExist), ValueConverter.ArgumentFromString<bool>("closeForms", closeForms));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
