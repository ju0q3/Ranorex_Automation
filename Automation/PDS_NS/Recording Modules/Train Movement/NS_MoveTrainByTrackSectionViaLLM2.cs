///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Train_Movement
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The NS_MoveTrainByTrackSectionViaLLM2 recording.
    /// </summary>
    [TestModule("784aefb6-996e-4881-9c0c-ff111c8d7ef8", ModuleType.Recording, 1)]
    public partial class NS_MoveTrainByTrackSectionViaLLM2 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static NS_MoveTrainByTrackSectionViaLLM2 instance = new NS_MoveTrainByTrackSectionViaLLM2();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public NS_MoveTrainByTrackSectionViaLLM2()
        {
            trainSeed = "";
            engineSeed = "";
            trackSections = "";
            division = "";
            speed = "";
            timeBetweenMovementsSeconds = "";
            optionalInBackground = "False";
            hostname = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static NS_MoveTrainByTrackSectionViaLLM2 Instance
        {
            get { return instance; }
        }

#region Variables

        string _trainSeed;

        /// <summary>
        /// Gets or sets the value of variable trainSeed.
        /// </summary>
        [TestVariable("a7c612b0-e281-4544-9043-fe9ee0b5670a")]
        public string trainSeed
        {
            get { return _trainSeed; }
            set { _trainSeed = value; }
        }

        string _engineSeed;

        /// <summary>
        /// Gets or sets the value of variable engineSeed.
        /// </summary>
        [TestVariable("a19c2004-83dd-49cb-afa0-48a1284318b5")]
        public string engineSeed
        {
            get { return _engineSeed; }
            set { _engineSeed = value; }
        }

        string _trackSections;

        /// <summary>
        /// Gets or sets the value of variable trackSections.
        /// </summary>
        [TestVariable("1578177a-080e-49ef-b965-6e3c7f66838c")]
        public string trackSections
        {
            get { return _trackSections; }
            set { _trackSections = value; }
        }

        string _division;

        /// <summary>
        /// Gets or sets the value of variable division.
        /// </summary>
        [TestVariable("6af68a59-d7d8-468b-9162-98c6218703b8")]
        public string division
        {
            get { return _division; }
            set { _division = value; }
        }

        string _speed;

        /// <summary>
        /// Gets or sets the value of variable speed.
        /// </summary>
        [TestVariable("0b8ee39d-ab46-4b82-988f-6d8f2ddaf2d3")]
        public string speed
        {
            get { return _speed; }
            set { _speed = value; }
        }

        string _timeBetweenMovementsSeconds;

        /// <summary>
        /// Gets or sets the value of variable timeBetweenMovementsSeconds.
        /// </summary>
        [TestVariable("379426a0-43e8-4add-9ecf-79a6205dc179")]
        public string timeBetweenMovementsSeconds
        {
            get { return _timeBetweenMovementsSeconds; }
            set { _timeBetweenMovementsSeconds = value; }
        }

        string _optionalInBackground;

        /// <summary>
        /// Gets or sets the value of variable optionalInBackground.
        /// </summary>
        [TestVariable("39c02533-d9e6-4ef1-b4fa-01b2e0a7a0a7")]
        public string optionalInBackground
        {
            get { return _optionalInBackground; }
            set { _optionalInBackground = value; }
        }

        string _hostname;

        /// <summary>
        /// Gets or sets the value of variable hostname.
        /// </summary>
        [TestVariable("4aecf33e-e6cb-4b28-a0cc-443e60e2e5f4")]
        public string hostname
        {
            get { return _hostname; }
            set { _hostname = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Trackline.NS_MoveTrainViaLLM2byTrackSectionsFunction(trainSeed, engineSeed, trackSections, division, speed, timeBetweenMovementsSeconds, ValueConverter.ArgumentFromString<bool>("optionalInBackground", optionalInBackground), hostname);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
