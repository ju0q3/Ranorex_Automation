///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.RUM.RUM_Message_Validation
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateDR_PTUR_Message_ByContent recording.
    /// </summary>
    [TestModule("30dc53d3-786d-4849-a24c-3f0a4f78712a", ModuleType.Recording, 1)]
    public partial class ValidateDR_PTUR_Message_ByContent : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static ValidateDR_PTUR_Message_ByContent instance = new ValidateDR_PTUR_Message_ByContent();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateDR_PTUR_Message_ByContent()
        {
            optMessageVersion = "optDistrict";
            optDistrict = "";
            optDivisionName = "";
            optFromStation = "";
            optToStation = "";
            timeInSeconds = "5";
            retry = "False";
            employeeName = "";
            track = "";
            utilizationCount = "0";
            entryType = "optDistrict";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateDR_PTUR_Message_ByContent Instance
        {
            get { return instance; }
        }

#region Variables

        string _optMessageVersion;

        /// <summary>
        /// Gets or sets the value of variable optMessageVersion.
        /// </summary>
        [TestVariable("3833a955-d916-4990-9b19-46b8befe6d8d")]
        public string optMessageVersion
        {
            get { return _optMessageVersion; }
            set { _optMessageVersion = value; }
        }

        string _optDistrict;

        /// <summary>
        /// Gets or sets the value of variable optDistrict.
        /// </summary>
        [TestVariable("f27bf44e-0138-43a4-854a-3d990283e55d")]
        public string optDistrict
        {
            get { return _optDistrict; }
            set { _optDistrict = value; }
        }

        string _optDivisionName;

        /// <summary>
        /// Gets or sets the value of variable optDivisionName.
        /// </summary>
        [TestVariable("e330ebba-7a4d-40d0-b07d-9a9ab8b8f7d3")]
        public string optDivisionName
        {
            get { return _optDivisionName; }
            set { _optDivisionName = value; }
        }

        string _optFromStation;

        /// <summary>
        /// Gets or sets the value of variable optFromStation.
        /// </summary>
        [TestVariable("447d6409-2378-4ebd-b747-a5a1dcd2eae7")]
        public string optFromStation
        {
            get { return _optFromStation; }
            set { _optFromStation = value; }
        }

        string _optToStation;

        /// <summary>
        /// Gets or sets the value of variable optToStation.
        /// </summary>
        [TestVariable("fd02b29b-1633-4402-ab30-40920919d3b3")]
        public string optToStation
        {
            get { return _optToStation; }
            set { _optToStation = value; }
        }

        string _timeInSeconds;

        /// <summary>
        /// Gets or sets the value of variable timeInSeconds.
        /// </summary>
        [TestVariable("e5bc54db-77ae-4642-afb5-8feb474ceafc")]
        public string timeInSeconds
        {
            get { return _timeInSeconds; }
            set { _timeInSeconds = value; }
        }

        string _retry;

        /// <summary>
        /// Gets or sets the value of variable retry.
        /// </summary>
        [TestVariable("cd60080a-663f-432d-911f-e907c5ebafc0")]
        public string retry
        {
            get { return _retry; }
            set { _retry = value; }
        }

        string _employeeName;

        /// <summary>
        /// Gets or sets the value of variable employeeName.
        /// </summary>
        [TestVariable("bb78ddf5-ed98-4add-beb1-f2bdd31304c9")]
        public string employeeName
        {
            get { return _employeeName; }
            set { _employeeName = value; }
        }

        string _track;

        /// <summary>
        /// Gets or sets the value of variable track.
        /// </summary>
        [TestVariable("913d8128-8649-44eb-bc40-aaaec9f7292b")]
        public string track
        {
            get { return _track; }
            set { _track = value; }
        }

        string _utilizationCount;

        /// <summary>
        /// Gets or sets the value of variable utilizationCount.
        /// </summary>
        [TestVariable("d58177ce-6e51-4f94-89c3-f75baea98395")]
        public string utilizationCount
        {
            get { return _utilizationCount; }
            set { _utilizationCount = value; }
        }

        string _entryType;

        /// <summary>
        /// Gets or sets the value of variable entryType.
        /// </summary>
        [TestVariable("9a9ece31-4c9f-4627-866c-11a8510da524")]
        public string entryType
        {
            get { return _entryType; }
            set { _entryType = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_RUM_Message_Validations.ValidateDR_PTUR_ByContent(optDistrict, optDivisionName, employeeName, optFromStation, optToStation, track, utilizationCount, entryType, optMessageVersion, ValueConverter.ArgumentFromString<int>("timeInSeconds", timeInSeconds), ValueConverter.ArgumentFromString<bool>("retry", retry));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
