///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Tags
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The TrackLineTag recording.
    /// </summary>
    [TestModule("609113d3-7d0e-436f-b74c-16d2cdaa2ee0", ModuleType.Recording, 1)]
    public partial class TrackLineTag : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static TrackLineTag instance = new TrackLineTag();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public TrackLineTag()
        {
            tagType = "ReminderBlock";
            tagName = "app ju";
            comments = "Test";
            untilTimeDifference = "69";
            trackSectionId = "54876";
            planThrough = "False";
            expectedFeedback = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static TrackLineTag Instance
        {
            get { return instance; }
        }

#region Variables

        string _tagType;

        /// <summary>
        /// Gets or sets the value of variable tagType.
        /// </summary>
        [TestVariable("a5996b95-c6bb-4285-acc9-620238985e05")]
        public string tagType
        {
            get { return _tagType; }
            set { _tagType = value; }
        }

        string _tagName;

        /// <summary>
        /// Gets or sets the value of variable tagName.
        /// </summary>
        [TestVariable("2074360c-105f-4422-870e-869a13142669")]
        public string tagName
        {
            get { return _tagName; }
            set { _tagName = value; }
        }

        string _comments;

        /// <summary>
        /// Gets or sets the value of variable comments.
        /// </summary>
        [TestVariable("d5e9ccaa-8820-4ae5-be94-46633e0d721f")]
        public string comments
        {
            get { return _comments; }
            set { _comments = value; }
        }

        string _untilTimeDifference;

        /// <summary>
        /// Gets or sets the value of variable untilTimeDifference.
        /// </summary>
        [TestVariable("900aa92a-8dc5-45bc-8b2f-5814bbf672a6")]
        public string untilTimeDifference
        {
            get { return _untilTimeDifference; }
            set { _untilTimeDifference = value; }
        }

        string _trackSectionId;

        /// <summary>
        /// Gets or sets the value of variable trackSectionId.
        /// </summary>
        [TestVariable("33dc4106-ed05-4fbf-a085-c9c42f12c4db")]
        public string trackSectionId
        {
            get { return _trackSectionId; }
            set { _trackSectionId = value; }
        }

        string _planThrough;

        /// <summary>
        /// Gets or sets the value of variable planThrough.
        /// </summary>
        [TestVariable("781f523b-a7fa-4f4e-9a67-3b73b03ba05f")]
        public string planThrough
        {
            get { return _planThrough; }
            set { _planThrough = value; }
        }

        string _expectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedback.
        /// </summary>
        [TestVariable("e8ff40c4-e1d4-4450-8caf-b6d7de538899")]
        public string expectedFeedback
        {
            get { return _expectedFeedback; }
            set { _expectedFeedback = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Tags.NS_PlaceTrackLineTags(tagType, tagName, comments, untilTimeDifference, trackSectionId, ValueConverter.ArgumentFromString<bool>("planThrough", planThrough), expectedFeedback);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
