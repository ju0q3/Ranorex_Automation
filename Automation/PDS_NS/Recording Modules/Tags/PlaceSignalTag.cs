///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Tags
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The PlaceSignalTag recording.
    /// </summary>
    [TestModule("a2d10352-54f2-465a-87b0-7924cb5d95a2", ModuleType.Recording, 1)]
    public partial class PlaceSignalTag : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static PlaceSignalTag instance = new PlaceSignalTag();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public PlaceSignalTag()
        {
            signalId = "";
            tagName = "";
            tagComment = "";
            removalDateTime = "";
            planThrough = "False";
            expectedFeedback = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static PlaceSignalTag Instance
        {
            get { return instance; }
        }

#region Variables

        string _signalId;

        /// <summary>
        /// Gets or sets the value of variable signalId.
        /// </summary>
        [TestVariable("3b3f90e7-2e04-4eb8-8110-5559bfd5b0b9")]
        public string signalId
        {
            get { return _signalId; }
            set { _signalId = value; }
        }

        string _tagName;

        /// <summary>
        /// Gets or sets the value of variable tagName.
        /// </summary>
        [TestVariable("530b3eae-0b56-43c2-925b-83eb50595c61")]
        public string tagName
        {
            get { return _tagName; }
            set { _tagName = value; }
        }

        string _tagComment;

        /// <summary>
        /// Gets or sets the value of variable tagComment.
        /// </summary>
        [TestVariable("24773ece-f4d1-4d20-808b-4c88d0d144f1")]
        public string tagComment
        {
            get { return _tagComment; }
            set { _tagComment = value; }
        }

        string _removalDateTime;

        /// <summary>
        /// Gets or sets the value of variable removalDateTime.
        /// </summary>
        [TestVariable("7706f02d-a4c8-4f94-a413-16b9de73b548")]
        public string removalDateTime
        {
            get { return _removalDateTime; }
            set { _removalDateTime = value; }
        }

        string _planThrough;

        /// <summary>
        /// Gets or sets the value of variable planThrough.
        /// </summary>
        [TestVariable("a1031bb9-5f48-4eaa-814d-dd06ea5ba246")]
        public string planThrough
        {
            get { return _planThrough; }
            set { _planThrough = value; }
        }

        string _expectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedback.
        /// </summary>
        [TestVariable("8e22ea1f-c634-4404-8a7c-a4fc727ddc8c")]
        public string expectedFeedback
        {
            get { return _expectedFeedback; }
            set { _expectedFeedback = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Tags.NS_PlaceSignalTag(signalId, tagName, tagComment, removalDateTime, ValueConverter.ArgumentFromString<bool>("planThrough", planThrough), expectedFeedback);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
