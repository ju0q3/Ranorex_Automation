///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Tags
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The PlaceSwitchTag_NS recording.
    /// </summary>
    [TestModule("189934e3-56b2-422b-a5b4-0bdaf659a8c7", ModuleType.Recording, 1)]
    public partial class PlaceSwitchTag_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static PlaceSwitchTag_NS instance = new PlaceSwitchTag_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public PlaceSwitchTag_NS()
        {
            tagType = "";
            tagName = "";
            comments = "";
            untilTimeDifference = "";
            switchId = "";
            planThrough = "True";
            expectedFeedback = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static PlaceSwitchTag_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _tagType;

        /// <summary>
        /// Gets or sets the value of variable tagType.
        /// </summary>
        [TestVariable("7cbad06e-99c1-4ed0-b2e3-ccea95c7670a")]
        public string tagType
        {
            get { return _tagType; }
            set { _tagType = value; }
        }

        string _tagName;

        /// <summary>
        /// Gets or sets the value of variable tagName.
        /// </summary>
        [TestVariable("baffe48d-48d6-4e72-bece-2ba919ded4db")]
        public string tagName
        {
            get { return _tagName; }
            set { _tagName = value; }
        }

        string _comments;

        /// <summary>
        /// Gets or sets the value of variable comments.
        /// </summary>
        [TestVariable("1a8a9af3-2fa6-4377-af6d-e53a8b2d10c3")]
        public string comments
        {
            get { return _comments; }
            set { _comments = value; }
        }

        string _untilTimeDifference;

        /// <summary>
        /// Gets or sets the value of variable untilTimeDifference.
        /// </summary>
        [TestVariable("1790a7fc-33d3-4d56-bff4-fb18a9776337")]
        public string untilTimeDifference
        {
            get { return _untilTimeDifference; }
            set { _untilTimeDifference = value; }
        }

        string _switchId;

        /// <summary>
        /// Gets or sets the value of variable switchId.
        /// </summary>
        [TestVariable("7352bdf5-9b0a-4978-b27e-04d1afec42d9")]
        public string switchId
        {
            get { return _switchId; }
            set { _switchId = value; }
        }

        string _planThrough;

        /// <summary>
        /// Gets or sets the value of variable planThrough.
        /// </summary>
        [TestVariable("9fa87ad0-5098-4407-b743-542c1e79bc07")]
        public string planThrough
        {
            get { return _planThrough; }
            set { _planThrough = value; }
        }

        string _expectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedback.
        /// </summary>
        [TestVariable("3928229d-7bb6-4734-a706-9d26f9b5d1bb")]
        public string expectedFeedback
        {
            get { return _expectedFeedback; }
            set { _expectedFeedback = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Tags.NS_PlaceSwitchTags(tagType, tagName, comments, untilTimeDifference, switchId, ValueConverter.ArgumentFromString<bool>("planThrough", planThrough), expectedFeedback);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
