///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Trackline
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The validateSignal_MenuOptions_Enabled_or_Disabled recording.
    /// </summary>
    [TestModule("386f2170-bf7e-4262-8efa-133c691158dd", ModuleType.Recording, 1)]
    public partial class validateSignal_MenuOptions_Enabled_or_Disabled : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static validateSignal_MenuOptions_Enabled_or_Disabled instance = new validateSignal_MenuOptions_Enabled_or_Disabled();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public validateSignal_MenuOptions_Enabled_or_Disabled()
        {
            signalId = "";
            isClearEnabled = "";
            isRREnabled = "";
            isSwitchingClearEnabled = "";
            isFleetingEnabled = "";
            isCancelFleetingEnabled = "";
            isStopEnabled = "";
            isPermissionToPassStopEnabled = "";
            isPlaceTagEnabled = "";
            isDBPropertyEnabled = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static validateSignal_MenuOptions_Enabled_or_Disabled Instance
        {
            get { return instance; }
        }

#region Variables

        string _signalId;

        /// <summary>
        /// Gets or sets the value of variable signalId.
        /// </summary>
        [TestVariable("d02cffa1-5d0b-4f30-b540-076a736103b9")]
        public string signalId
        {
            get { return _signalId; }
            set { _signalId = value; }
        }

        string _isClearEnabled;

        /// <summary>
        /// Gets or sets the value of variable isClearEnabled.
        /// </summary>
        [TestVariable("78d27579-e204-45f4-a3c1-8403f009208b")]
        public string isClearEnabled
        {
            get { return _isClearEnabled; }
            set { _isClearEnabled = value; }
        }

        string _isRREnabled;

        /// <summary>
        /// Gets or sets the value of variable isRREnabled.
        /// </summary>
        [TestVariable("5a2eb567-2ecc-4757-8244-acf8ed411a5e")]
        public string isRREnabled
        {
            get { return _isRREnabled; }
            set { _isRREnabled = value; }
        }

        string _isSwitchingClearEnabled;

        /// <summary>
        /// Gets or sets the value of variable isSwitchingClearEnabled.
        /// </summary>
        [TestVariable("2321a4ed-225f-4da6-ba54-80d7fbe14dc2")]
        public string isSwitchingClearEnabled
        {
            get { return _isSwitchingClearEnabled; }
            set { _isSwitchingClearEnabled = value; }
        }

        string _isFleetingEnabled;

        /// <summary>
        /// Gets or sets the value of variable isFleetingEnabled.
        /// </summary>
        [TestVariable("99ba92a6-2e52-4f85-985f-2bc72d89473c")]
        public string isFleetingEnabled
        {
            get { return _isFleetingEnabled; }
            set { _isFleetingEnabled = value; }
        }

        string _isCancelFleetingEnabled;

        /// <summary>
        /// Gets or sets the value of variable isCancelFleetingEnabled.
        /// </summary>
        [TestVariable("56df4e3a-8e16-46b5-ad74-9c20bc6379f0")]
        public string isCancelFleetingEnabled
        {
            get { return _isCancelFleetingEnabled; }
            set { _isCancelFleetingEnabled = value; }
        }

        string _isStopEnabled;

        /// <summary>
        /// Gets or sets the value of variable isStopEnabled.
        /// </summary>
        [TestVariable("8bb7c1e2-50ad-4b22-b929-02e6dc8c9160")]
        public string isStopEnabled
        {
            get { return _isStopEnabled; }
            set { _isStopEnabled = value; }
        }

        string _isPermissionToPassStopEnabled;

        /// <summary>
        /// Gets or sets the value of variable isPermissionToPassStopEnabled.
        /// </summary>
        [TestVariable("f9b6eea7-8443-4db5-98b6-a2ddd2195c75")]
        public string isPermissionToPassStopEnabled
        {
            get { return _isPermissionToPassStopEnabled; }
            set { _isPermissionToPassStopEnabled = value; }
        }

        string _isPlaceTagEnabled;

        /// <summary>
        /// Gets or sets the value of variable isPlaceTagEnabled.
        /// </summary>
        [TestVariable("4090d37a-10e5-4a92-a9d8-5448b1e8748a")]
        public string isPlaceTagEnabled
        {
            get { return _isPlaceTagEnabled; }
            set { _isPlaceTagEnabled = value; }
        }

        string _isDBPropertyEnabled;

        /// <summary>
        /// Gets or sets the value of variable isDBPropertyEnabled.
        /// </summary>
        [TestVariable("c70a36c3-49ac-4997-88fc-70e7757aa91e")]
        public string isDBPropertyEnabled
        {
            get { return _isDBPropertyEnabled; }
            set { _isDBPropertyEnabled = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Trackline_Validations.NS_validateSignal_MenuOptions_Enabled_OR_Disabled(signalId, isClearEnabled, isRREnabled, isSwitchingClearEnabled, isFleetingEnabled, isCancelFleetingEnabled, isStopEnabled, isPermissionToPassStopEnabled, isPlaceTagEnabled, isDBPropertyEnabled);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
