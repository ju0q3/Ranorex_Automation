///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.TracklineValidations
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The LeftOrRightClickStackedRouteForTraceRoute_ControlPoint_NS recording.
    /// </summary>
    [TestModule("abf91058-bb03-48f9-b1bd-7b7323a8caa4", ModuleType.Recording, 1)]
    public partial class LeftOrRightClickStackedRouteForTraceRoute_ControlPoint_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.Trackline_Repo repository.
        /// </summary>
        public static global::PDS_NS.Trackline_Repo repo = global::PDS_NS.Trackline_Repo.Instance;

        static LeftOrRightClickStackedRouteForTraceRoute_ControlPoint_NS instance = new LeftOrRightClickStackedRouteForTraceRoute_ControlPoint_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public LeftOrRightClickStackedRouteForTraceRoute_ControlPoint_NS()
        {
            deviceName = "";
            leftOrRightClick = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static LeftOrRightClickStackedRouteForTraceRoute_ControlPoint_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _deviceName;

        /// <summary>
        /// Gets or sets the value of variable deviceName.
        /// </summary>
        [TestVariable("8c54adb7-f7a7-4058-a648-ffc93216552a")]
        public string deviceName
        {
            get { return _deviceName; }
            set { _deviceName = value; }
        }

        string _leftOrRightClick;

        /// <summary>
        /// Gets or sets the value of variable leftOrRightClick.
        /// </summary>
        [TestVariable("835f6f7b-d4c3-4c85-b44c-a72c58874811")]
        public string leftOrRightClick
        {
            get { return _leftOrRightClick; }
            set { _leftOrRightClick = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Trackline_Validations.NS_LeftOrRightClickStackedRouteForTraceRoute_ControlPoint(deviceName, leftOrRightClick);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
