///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.TracklineValidations
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The NS_ChangeSwitchDirection_ValidateFeedback recording.
    /// </summary>
    [TestModule("4a6f6a6e-5c55-4786-8ab0-208895d941f3", ModuleType.Recording, 1)]
    public partial class NS_ChangeSwitchDirection_ValidateFeedback : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static NS_ChangeSwitchDirection_ValidateFeedback instance = new NS_ChangeSwitchDirection_ValidateFeedback();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public NS_ChangeSwitchDirection_ValidateFeedback()
        {
            switchDirection = "";
            switchId = "";
            transmit = "False";
            expectedFeedback = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static NS_ChangeSwitchDirection_ValidateFeedback Instance
        {
            get { return instance; }
        }

#region Variables

        string _switchDirection;

        /// <summary>
        /// Gets or sets the value of variable switchDirection.
        /// </summary>
        [TestVariable("64db1780-6fd9-48b7-adb1-617efd2a35fe")]
        public string switchDirection
        {
            get { return _switchDirection; }
            set { _switchDirection = value; }
        }

        string _switchId;

        /// <summary>
        /// Gets or sets the value of variable switchId.
        /// </summary>
        [TestVariable("58acaf21-c997-45b0-a521-a2ffa9602447")]
        public string switchId
        {
            get { return _switchId; }
            set { _switchId = value; }
        }

        string _transmit;

        /// <summary>
        /// Gets or sets the value of variable transmit.
        /// </summary>
        [TestVariable("175f2138-9faa-445d-b15e-e381390f5c14")]
        public string transmit
        {
            get { return _transmit; }
            set { _transmit = value; }
        }

        string _expectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedback.
        /// </summary>
        [TestVariable("541ab66f-7921-431c-89b6-e4d8d30325e9")]
        public string expectedFeedback
        {
            get { return _expectedFeedback; }
            set { _expectedFeedback = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Trackline_Validations.ChangeSwitchDirection_ValidateFeedback(switchDirection, switchId, ValueConverter.ArgumentFromString<bool>("transmit", transmit), expectedFeedback);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
