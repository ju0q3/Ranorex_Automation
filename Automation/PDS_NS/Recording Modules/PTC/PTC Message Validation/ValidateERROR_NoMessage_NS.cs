///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.PTC.PTC_Message_Validation
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateERROR_NoMessage_NS recording.
    /// </summary>
    [TestModule("ab6573eb-8b23-4239-9382-e630b1c1a89f", ModuleType.Recording, 1)]
    public partial class ValidateERROR_NoMessage_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static ValidateERROR_NoMessage_NS instance = new ValidateERROR_NoMessage_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateERROR_NoMessage_NS()
        {
            errorText = "";
            reason = "";
            timeInSeconds = "0";
            retry = "True";
            validateDoesExist = "True";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateERROR_NoMessage_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _errorText;

        /// <summary>
        /// Gets or sets the value of variable errorText.
        /// </summary>
        [TestVariable("24be8bfe-7f0e-4c7d-b99a-31442602693a")]
        public string errorText
        {
            get { return _errorText; }
            set { _errorText = value; }
        }

        string _reason;

        /// <summary>
        /// Gets or sets the value of variable reason.
        /// </summary>
        [TestVariable("be1ad99a-984e-4d73-aa9e-7190129b2c20")]
        public string reason
        {
            get { return _reason; }
            set { _reason = value; }
        }

        string _timeInSeconds;

        /// <summary>
        /// Gets or sets the value of variable timeInSeconds.
        /// </summary>
        [TestVariable("ac5f9e96-068d-456c-a841-69bc8ed90ed7")]
        public string timeInSeconds
        {
            get { return _timeInSeconds; }
            set { _timeInSeconds = value; }
        }

        string _retry;

        /// <summary>
        /// Gets or sets the value of variable retry.
        /// </summary>
        [TestVariable("3d4c0798-0801-4379-ae8e-992f36104915")]
        public string retry
        {
            get { return _retry; }
            set { _retry = value; }
        }

        string _validateDoesExist;

        /// <summary>
        /// Gets or sets the value of variable validateDoesExist.
        /// </summary>
        [TestVariable("d761b180-e738-4173-856b-609606ee72cf")]
        public string validateDoesExist
        {
            get { return _validateDoesExist; }
            set { _validateDoesExist = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            STE.Code_Utils.ReceivePTCFileCollection_NS.validateErrorMessage_NoMessageField(errorText, reason, ValueConverter.ArgumentFromString<int>("timeInSeconds", timeInSeconds), ValueConverter.ArgumentFromString<bool>("retry", retry), ValueConverter.ArgumentFromString<bool>("validateDoesExist", validateDoesExist));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
