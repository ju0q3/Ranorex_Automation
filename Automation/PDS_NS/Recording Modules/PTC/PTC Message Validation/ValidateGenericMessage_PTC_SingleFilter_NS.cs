///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.PTC.PTC_Message_Validation
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateGenericMessage_PTC_SingleFilter_NS recording.
    /// </summary>
    [TestModule("a4708e02-e01d-4082-bcb3-56fd1f046ade", ModuleType.Recording, 1)]
    public partial class ValidateGenericMessage_PTC_SingleFilter_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static ValidateGenericMessage_PTC_SingleFilter_NS instance = new ValidateGenericMessage_PTC_SingleFilter_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateGenericMessage_PTC_SingleFilter_NS()
        {
            ptcMessageType = "";
            ptcMessageVersion = "7";
            xmlElement = "";
            xmlValue = "";
            xmlElementExists = "True";
            timeInSeconds = "5";
            retry = "True";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateGenericMessage_PTC_SingleFilter_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _ptcMessageType;

        /// <summary>
        /// Gets or sets the value of variable ptcMessageType.
        /// </summary>
        [TestVariable("38690003-42e7-49b0-91c2-c80ff32578d8")]
        public string ptcMessageType
        {
            get { return _ptcMessageType; }
            set { _ptcMessageType = value; }
        }

        string _ptcMessageVersion;

        /// <summary>
        /// Gets or sets the value of variable ptcMessageVersion.
        /// </summary>
        [TestVariable("53a4062d-cba6-41f7-b774-ba87c0ea6261")]
        public string ptcMessageVersion
        {
            get { return _ptcMessageVersion; }
            set { _ptcMessageVersion = value; }
        }

        string _xmlElement;

        /// <summary>
        /// Gets or sets the value of variable xmlElement.
        /// </summary>
        [TestVariable("0feb278c-b8a5-4025-bd69-c825af895bdb")]
        public string xmlElement
        {
            get { return _xmlElement; }
            set { _xmlElement = value; }
        }

        string _xmlValue;

        /// <summary>
        /// Gets or sets the value of variable xmlValue.
        /// </summary>
        [TestVariable("0530aaa0-a1c1-403e-827e-4a6120a07f1d")]
        public string xmlValue
        {
            get { return _xmlValue; }
            set { _xmlValue = value; }
        }

        string _xmlElementExists;

        /// <summary>
        /// Gets or sets the value of variable xmlElementExists.
        /// </summary>
        [TestVariable("e8130a21-6550-4527-818c-c77930c415b5")]
        public string xmlElementExists
        {
            get { return _xmlElementExists; }
            set { _xmlElementExists = value; }
        }

        string _timeInSeconds;

        /// <summary>
        /// Gets or sets the value of variable timeInSeconds.
        /// </summary>
        [TestVariable("aa1700f5-d2d5-4ebd-9b72-963d4b921270")]
        public string timeInSeconds
        {
            get { return _timeInSeconds; }
            set { _timeInSeconds = value; }
        }

        string _retry;

        /// <summary>
        /// Gets or sets the value of variable retry.
        /// </summary>
        [TestVariable("2c2d875c-cef3-4e81-965f-bd483cd5512b")]
        public string retry
        {
            get { return _retry; }
            set { _retry = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_PTC_Message_Validations.ValidateGenericMessage_PTC_SingleFilter(ptcMessageType, ValueConverter.ArgumentFromString<int>("messageVersion", ptcMessageVersion), xmlElement, xmlValue, ValueConverter.ArgumentFromString<bool>("xmlElementExists", xmlElementExists), ValueConverter.ArgumentFromString<int>("timeInSeconds", timeInSeconds), ValueConverter.ArgumentFromString<bool>("retry", retry));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
