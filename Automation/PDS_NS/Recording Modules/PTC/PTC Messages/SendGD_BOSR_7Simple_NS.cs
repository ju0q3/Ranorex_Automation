///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.PTC.PTC_Messages
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SendGD_BOSR_7Simple_NS recording.
    /// </summary>
    [TestModule("4f94d4b2-46a8-458e-afd8-98d7568090a7", ModuleType.Recording, 1)]
    public partial class SendGD_BOSR_7Simple_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static SendGD_BOSR_7Simple_NS instance = new SendGD_BOSR_7Simple_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SendGD_BOSR_7Simple_NS()
        {
            operatingMode = "";
            operatingCondition = "";
            districtName = "";
            districtScac = "";
            hostname = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SendGD_BOSR_7Simple_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _operatingMode;

        /// <summary>
        /// Gets or sets the value of variable operatingMode.
        /// </summary>
        [TestVariable("07d70260-9aab-4c5b-8147-33219dbb8275")]
        public string operatingMode
        {
            get { return _operatingMode; }
            set { _operatingMode = value; }
        }

        string _operatingCondition;

        /// <summary>
        /// Gets or sets the value of variable operatingCondition.
        /// </summary>
        [TestVariable("2370f541-b65a-4430-8f72-8911f0ff57f6")]
        public string operatingCondition
        {
            get { return _operatingCondition; }
            set { _operatingCondition = value; }
        }

        string _districtName;

        /// <summary>
        /// Gets or sets the value of variable districtName.
        /// </summary>
        [TestVariable("b2b2fb0d-79f4-4768-ba73-4048b82cfc97")]
        public string districtName
        {
            get { return _districtName; }
            set { _districtName = value; }
        }

        string _districtScac;

        /// <summary>
        /// Gets or sets the value of variable districtScac.
        /// </summary>
        [TestVariable("8b9a95a8-4dd9-43be-9e44-ddbc7e08e1ba")]
        public string districtScac
        {
            get { return _districtScac; }
            set { _districtScac = value; }
        }

        string _hostname;

        /// <summary>
        /// Gets or sets the value of variable hostname.
        /// </summary>
        [TestVariable("3e1caade-fa33-436f-9cf0-162a7ad64005")]
        public string hostname
        {
            get { return _hostname; }
            set { _hostname = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_PTC_Messages.SendGD_BOSR_7Simple(operatingMode, operatingCondition, districtName, districtScac, hostname);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
