///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.AboutPDS
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidatePDSLabel recording.
    /// </summary>
    [TestModule("a43234fe-1e24-4a29-aca1-56bb5b419aba", ModuleType.Recording, 1)]
    public partial class ValidatePDSLabel : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.MainMenu_Repo repository.
        /// </summary>
        public static global::PDS_NS.MainMenu_Repo repo = global::PDS_NS.MainMenu_Repo.Instance;

        static ValidatePDSLabel instance = new ValidatePDSLabel();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidatePDSLabel()
        {
            serverVersion = "";
            clientVersion = "";
            validateLabelInfo = "False";
            copyRight = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidatePDSLabel Instance
        {
            get { return instance; }
        }

#region Variables

        string _serverVersion;

        /// <summary>
        /// Gets or sets the value of variable serverVersion.
        /// </summary>
        [TestVariable("d7673e9a-ff6e-4464-9f1d-a7d72e2be185")]
        public string serverVersion
        {
            get { return _serverVersion; }
            set { _serverVersion = value; }
        }

        string _clientVersion;

        /// <summary>
        /// Gets or sets the value of variable clientVersion.
        /// </summary>
        [TestVariable("9926efcf-ad9c-448f-b895-452737e0f1ba")]
        public string clientVersion
        {
            get { return _clientVersion; }
            set { _clientVersion = value; }
        }

        string _validateLabelInfo;

        /// <summary>
        /// Gets or sets the value of variable validateLabelInfo.
        /// </summary>
        [TestVariable("39ae4671-4486-4291-bed9-54f9184fe226")]
        public string validateLabelInfo
        {
            get { return _validateLabelInfo; }
            set { _validateLabelInfo = value; }
        }

        string _copyRight;

        /// <summary>
        /// Gets or sets the value of variable copyRight.
        /// </summary>
        [TestVariable("48b3456c-fb89-4ffd-866c-3c66ce7f4aab")]
        public string copyRight
        {
            get { return _copyRight; }
            set { _copyRight = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            validatePDSLabelInfo(serverVersion, clientVersion, copyRight, ValueConverter.ArgumentFromString<bool>("validateLabelInfo", validateLabelInfo));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
