///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Trainsheet_Validations
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateEngineRecord_NS recording.
    /// </summary>
    [TestModule("2532fa3b-f112-4347-8ba4-8865f57eec9e", ModuleType.Recording, 1)]
    public partial class ValidateEngineRecord_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static ValidateEngineRecord_NS instance = new ValidateEngineRecord_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateEngineRecord_NS()
        {
            trainSeed = "";
            closeTrainsheet = "False";
            validateDoesExist = "True";
            engineSeed = "";
            position = "";
            engineLock = "";
            engine = "";
            engineId = "";
            engineGroup = "";
            model = "";
            compensatedHP = "";
            originLocation = "";
            originPassCount = "";
            destinationLocation = "";
            destinationPassCount = "";
            trainControl = "";
            dpu = "";
            notes = "";
            consist = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateEngineRecord_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _trainSeed;

        /// <summary>
        /// Gets or sets the value of variable trainSeed.
        /// </summary>
        [TestVariable("b27b7357-56c8-44e9-ba9a-85d8aad29fe0")]
        public string trainSeed
        {
            get { return _trainSeed; }
            set { _trainSeed = value; }
        }

        string _closeTrainsheet;

        /// <summary>
        /// Gets or sets the value of variable closeTrainsheet.
        /// </summary>
        [TestVariable("ada12b02-579f-4db4-a2cf-502f5b7b56d8")]
        public string closeTrainsheet
        {
            get { return _closeTrainsheet; }
            set { _closeTrainsheet = value; }
        }

        string _validateDoesExist;

        /// <summary>
        /// Gets or sets the value of variable validateDoesExist.
        /// </summary>
        [TestVariable("313ee8c3-65a0-4ff2-b96d-7f473a81d14e")]
        public string validateDoesExist
        {
            get { return _validateDoesExist; }
            set { _validateDoesExist = value; }
        }

        string _engineSeed;

        /// <summary>
        /// Gets or sets the value of variable engineSeed.
        /// </summary>
        [TestVariable("05d00ad6-03f9-4f5a-85af-6c111fe63647")]
        public string engineSeed
        {
            get { return _engineSeed; }
            set { _engineSeed = value; }
        }

        string _position;

        /// <summary>
        /// Gets or sets the value of variable position.
        /// </summary>
        [TestVariable("a91db4a3-71bf-4d06-af22-f9da8fe82e70")]
        public string position
        {
            get { return _position; }
            set { _position = value; }
        }

        string _engineLock;

        /// <summary>
        /// Gets or sets the value of variable engineLock.
        /// </summary>
        [TestVariable("c27255dd-7e70-4099-bb67-9a5bec7dc00b")]
        public string engineLock
        {
            get { return _engineLock; }
            set { _engineLock = value; }
        }

        string _engine;

        /// <summary>
        /// Gets or sets the value of variable engine.
        /// </summary>
        [TestVariable("44925695-b2ca-4ed0-8c06-54681560c464")]
        public string engine
        {
            get { return _engine; }
            set { _engine = value; }
        }

        string _engineId;

        /// <summary>
        /// Gets or sets the value of variable engineId.
        /// </summary>
        [TestVariable("0fad98c0-5acb-4f21-84dd-9dbd28d7fb14")]
        public string engineId
        {
            get { return _engineId; }
            set { _engineId = value; }
        }

        string _engineGroup;

        /// <summary>
        /// Gets or sets the value of variable engineGroup.
        /// </summary>
        [TestVariable("259558ef-d068-467b-b3fb-c2d71e11b6f9")]
        public string engineGroup
        {
            get { return _engineGroup; }
            set { _engineGroup = value; }
        }

        string _model;

        /// <summary>
        /// Gets or sets the value of variable model.
        /// </summary>
        [TestVariable("51d51f7d-cb22-4602-bf60-d49f0971c12e")]
        public string model
        {
            get { return _model; }
            set { _model = value; }
        }

        string _compensatedHP;

        /// <summary>
        /// Gets or sets the value of variable compensatedHP.
        /// </summary>
        [TestVariable("8374e1fb-9d60-4e50-a77d-b4dc91ae5a86")]
        public string compensatedHP
        {
            get { return _compensatedHP; }
            set { _compensatedHP = value; }
        }

        string _originLocation;

        /// <summary>
        /// Gets or sets the value of variable originLocation.
        /// </summary>
        [TestVariable("03b1289b-d0bc-410a-b4a7-5b37565354d1")]
        public string originLocation
        {
            get { return _originLocation; }
            set { _originLocation = value; }
        }

        string _originPassCount;

        /// <summary>
        /// Gets or sets the value of variable originPassCount.
        /// </summary>
        [TestVariable("8178164c-c9f3-48aa-a24f-c7902108cf84")]
        public string originPassCount
        {
            get { return _originPassCount; }
            set { _originPassCount = value; }
        }

        string _destinationLocation;

        /// <summary>
        /// Gets or sets the value of variable destinationLocation.
        /// </summary>
        [TestVariable("a4481a10-d0d3-40ba-8599-557b727b5e8c")]
        public string destinationLocation
        {
            get { return _destinationLocation; }
            set { _destinationLocation = value; }
        }

        string _destinationPassCount;

        /// <summary>
        /// Gets or sets the value of variable destinationPassCount.
        /// </summary>
        [TestVariable("3e56449c-3a04-4d2d-b59a-afe8c023928c")]
        public string destinationPassCount
        {
            get { return _destinationPassCount; }
            set { _destinationPassCount = value; }
        }

        string _trainControl;

        /// <summary>
        /// Gets or sets the value of variable trainControl.
        /// </summary>
        [TestVariable("7da5ffcb-cdd1-4a8e-b341-ff702fb2483a")]
        public string trainControl
        {
            get { return _trainControl; }
            set { _trainControl = value; }
        }

        string _dpu;

        /// <summary>
        /// Gets or sets the value of variable dpu.
        /// </summary>
        [TestVariable("4a5857a0-a8ac-4f50-92c6-86bab9bc837c")]
        public string dpu
        {
            get { return _dpu; }
            set { _dpu = value; }
        }

        string _notes;

        /// <summary>
        /// Gets or sets the value of variable notes.
        /// </summary>
        [TestVariable("369d5dab-d13e-49fe-9811-2ec0eeaa72a4")]
        public string notes
        {
            get { return _notes; }
            set { _notes = value; }
        }

        string _consist;

        /// <summary>
        /// Gets or sets the value of variable consist.
        /// </summary>
        [TestVariable("b7a40e1b-3403-46cc-9481-acc43ba8b81f")]
        public string consist
        {
            get { return _consist; }
            set { _consist = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Trainsheet.NS_ValidateEngineRecord_TrainSheet(trainSeed, engineSeed, position, engineLock, consist, engine, engineId, engineGroup, model, compensatedHP, originLocation, originPassCount, destinationLocation, destinationPassCount, trainControl, dpu, notes, ValueConverter.ArgumentFromString<bool>("closeTrainsheet", closeTrainsheet), ValueConverter.ArgumentFromString<bool>("validateDoesExist", validateDoesExist));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
