///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Trainsheet_Validations
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateFeedbackAndEditDelayDurationInvalidTimings recording.
    /// </summary>
    [TestModule("c3ee5677-0518-4312-a832-699327267399", ModuleType.Recording, 1)]
    public partial class ValidateFeedbackAndEditDelayDurationInvalidTimings : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static ValidateFeedbackAndEditDelayDurationInvalidTimings instance = new ValidateFeedbackAndEditDelayDurationInvalidTimings();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateFeedbackAndEditDelayDurationInvalidTimings()
        {
            trainSeed = "";
            filterFromLocation = "";
            filterCode = "";
            filterState = "";
            updateDuration = "";
            expectedFeedback = "";
            filterSource = "";
            filterduration = "";
            filterToLocation = "";
            closeForms = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateFeedbackAndEditDelayDurationInvalidTimings Instance
        {
            get { return instance; }
        }

#region Variables

        string _trainSeed;

        /// <summary>
        /// Gets or sets the value of variable trainSeed.
        /// </summary>
        [TestVariable("5a0564f1-0849-48b8-af1b-2aa133b855cf")]
        public string trainSeed
        {
            get { return _trainSeed; }
            set { _trainSeed = value; }
        }

        string _filterFromLocation;

        /// <summary>
        /// Gets or sets the value of variable filterFromLocation.
        /// </summary>
        [TestVariable("e90210a2-84df-42d5-9aec-efaae26060c4")]
        public string filterFromLocation
        {
            get { return _filterFromLocation; }
            set { _filterFromLocation = value; }
        }

        string _filterCode;

        /// <summary>
        /// Gets or sets the value of variable filterCode.
        /// </summary>
        [TestVariable("498e3ad2-b607-484d-89e4-fa445c7b8b45")]
        public string filterCode
        {
            get { return _filterCode; }
            set { _filterCode = value; }
        }

        string _filterState;

        /// <summary>
        /// Gets or sets the value of variable filterState.
        /// </summary>
        [TestVariable("72a40b18-833a-4aa4-b0d7-0c994e26ff2a")]
        public string filterState
        {
            get { return _filterState; }
            set { _filterState = value; }
        }

        string _updateDuration;

        /// <summary>
        /// Gets or sets the value of variable updateDuration.
        /// </summary>
        [TestVariable("6a8c8902-f6b9-4a5f-a5e9-5cf564fc8eb2")]
        public string updateDuration
        {
            get { return _updateDuration; }
            set { _updateDuration = value; }
        }

        string _expectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedback.
        /// </summary>
        [TestVariable("1cd4f99e-1f15-4dc8-b6c1-e027faae5f8b")]
        public string expectedFeedback
        {
            get { return _expectedFeedback; }
            set { _expectedFeedback = value; }
        }

        string _filterSource;

        /// <summary>
        /// Gets or sets the value of variable filterSource.
        /// </summary>
        [TestVariable("67b0f335-b2f7-40a7-932b-1787dce92e54")]
        public string filterSource
        {
            get { return _filterSource; }
            set { _filterSource = value; }
        }

        string _filterduration;

        /// <summary>
        /// Gets or sets the value of variable filterduration.
        /// </summary>
        [TestVariable("d0de2891-047c-40a5-8d66-b180e21be71d")]
        public string filterduration
        {
            get { return _filterduration; }
            set { _filterduration = value; }
        }

        string _filterToLocation;

        /// <summary>
        /// Gets or sets the value of variable filterToLocation.
        /// </summary>
        [TestVariable("d6c83a63-61de-44f3-8ffb-400630ccb608")]
        public string filterToLocation
        {
            get { return _filterToLocation; }
            set { _filterToLocation = value; }
        }

        string _closeForms;

        /// <summary>
        /// Gets or sets the value of variable closeForms.
        /// </summary>
        [TestVariable("c656879a-b1cd-46e8-9fb1-e281bef4b4bd")]
        public string closeForms
        {
            get { return _closeForms; }
            set { _closeForms = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Trainsheet.NS_ValidateFeedbackAndEditDelayDurationInvalidTimings(trainSeed, filterFromLocation, filterCode, filterState, updateDuration, expectedFeedback, filterSource, filterduration, filterToLocation, ValueConverter.ArgumentFromString<bool>("closeForms", closeForms));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
