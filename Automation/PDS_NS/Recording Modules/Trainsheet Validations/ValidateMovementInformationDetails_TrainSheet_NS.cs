///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Trainsheet_Validations
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateMovementInformationDetails_TrainSheet_NS recording.
    /// </summary>
    [TestModule("ee883a0c-f887-41d5-bfe7-68a635e5248e", ModuleType.Recording, 1)]
    public partial class ValidateMovementInformationDetails_TrainSheet_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static ValidateMovementInformationDetails_TrainSheet_NS instance = new ValidateMovementInformationDetails_TrainSheet_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateMovementInformationDetails_TrainSheet_NS()
        {
            trainSeed = "";
            opsta = "";
            optionalStation = "";
            optionalMp = "";
            reportType = "";
            optionalReportTime = "";
            optionalDirection = "";
            optionalDistance = "";
            optionalSpeed = "";
            optionalSource = "";
            optionalPsuedoTrain = "";
            validateMovementRecordExists = "True";
            closeForms = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateMovementInformationDetails_TrainSheet_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _trainSeed;

        /// <summary>
        /// Gets or sets the value of variable trainSeed.
        /// </summary>
        [TestVariable("fc6f039c-64b6-4ac8-9a6e-5c8c59a4bf23")]
        public string trainSeed
        {
            get { return _trainSeed; }
            set { _trainSeed = value; }
        }

        string _opsta;

        /// <summary>
        /// Gets or sets the value of variable opsta.
        /// </summary>
        [TestVariable("5990309a-37f7-4de8-b5c6-76e85f3091db")]
        public string opsta
        {
            get { return _opsta; }
            set { _opsta = value; }
        }

        string _optionalStation;

        /// <summary>
        /// Gets or sets the value of variable optionalStation.
        /// </summary>
        [TestVariable("700020a2-5787-4bea-921c-7d583557f3d3")]
        public string optionalStation
        {
            get { return _optionalStation; }
            set { _optionalStation = value; }
        }

        string _optionalMp;

        /// <summary>
        /// Gets or sets the value of variable optionalMp.
        /// </summary>
        [TestVariable("235fd823-620b-4305-a2a9-a97d36fa34de")]
        public string optionalMp
        {
            get { return _optionalMp; }
            set { _optionalMp = value; }
        }

        string _reportType;

        /// <summary>
        /// Gets or sets the value of variable reportType.
        /// </summary>
        [TestVariable("1eb35bca-ccab-4357-a1e8-0cda16ef0926")]
        public string reportType
        {
            get { return _reportType; }
            set { _reportType = value; }
        }

        string _optionalReportTime;

        /// <summary>
        /// Gets or sets the value of variable optionalReportTime.
        /// </summary>
        [TestVariable("575ba98f-d833-420e-90df-08d8ea2322f0")]
        public string optionalReportTime
        {
            get { return _optionalReportTime; }
            set { _optionalReportTime = value; }
        }

        string _optionalDirection;

        /// <summary>
        /// Gets or sets the value of variable optionalDirection.
        /// </summary>
        [TestVariable("c0f1658b-09d2-4bda-93e0-9089f0614612")]
        public string optionalDirection
        {
            get { return _optionalDirection; }
            set { _optionalDirection = value; }
        }

        string _optionalDistance;

        /// <summary>
        /// Gets or sets the value of variable optionalDistance.
        /// </summary>
        [TestVariable("a5eb21ee-806c-47bc-874f-7b6893d922b5")]
        public string optionalDistance
        {
            get { return _optionalDistance; }
            set { _optionalDistance = value; }
        }

        string _optionalSpeed;

        /// <summary>
        /// Gets or sets the value of variable optionalSpeed.
        /// </summary>
        [TestVariable("dffa41d1-a7bc-43f7-bc83-bdcfbecb076b")]
        public string optionalSpeed
        {
            get { return _optionalSpeed; }
            set { _optionalSpeed = value; }
        }

        string _optionalSource;

        /// <summary>
        /// Gets or sets the value of variable optionalSource.
        /// </summary>
        [TestVariable("e50a093e-cee2-445d-9c0b-b57f5ea3bbb3")]
        public string optionalSource
        {
            get { return _optionalSource; }
            set { _optionalSource = value; }
        }

        string _optionalPsuedoTrain;

        /// <summary>
        /// Gets or sets the value of variable optionalPsuedoTrain.
        /// </summary>
        [TestVariable("8ad5b66d-633d-416a-bed3-a2fcaf662d41")]
        public string optionalPsuedoTrain
        {
            get { return _optionalPsuedoTrain; }
            set { _optionalPsuedoTrain = value; }
        }

        string _validateMovementRecordExists;

        /// <summary>
        /// Gets or sets the value of variable validateMovementRecordExists.
        /// </summary>
        [TestVariable("19ea5005-aa28-448d-93e3-a3a15c2d2b1a")]
        public string validateMovementRecordExists
        {
            get { return _validateMovementRecordExists; }
            set { _validateMovementRecordExists = value; }
        }

        string _closeForms;

        /// <summary>
        /// Gets or sets the value of variable closeForms.
        /// </summary>
        [TestVariable("4b20908e-1c3a-4605-b367-b83972656018")]
        public string closeForms
        {
            get { return _closeForms; }
            set { _closeForms = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Trainsheet.ValidateMovementInfoRecords_TrainSheet(trainSeed, opsta, optionalStation, optionalMp, reportType, optionalReportTime, optionalDirection, optionalDistance, optionalSpeed, optionalSource, optionalPsuedoTrain, ValueConverter.ArgumentFromString<bool>("validateMovementRecordExists", validateMovementRecordExists), ValueConverter.ArgumentFromString<bool>("closeForms", closeForms));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
