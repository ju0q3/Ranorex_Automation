///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.MIS.MIS_Message_Validation
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateExternalAlertEventMessage_MIS_NS recording.
    /// </summary>
    [TestModule("9ff36a35-059d-4f42-93ae-90d1cc8d21ee", ModuleType.Recording, 1)]
    public partial class ValidateExternalAlertEventMessage_MIS_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static ValidateExternalAlertEventMessage_MIS_NS instance = new ValidateExternalAlertEventMessage_MIS_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateExternalAlertEventMessage_MIS_NS()
        {
            alertEventKey = "";
            alertEventType = "";
            deviceType = "";
            deviceId = "";
            milepost = "";
            division = "";
            messageText = "";
            timeInSeconds = "0";
            retry = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateExternalAlertEventMessage_MIS_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _alertEventKey;

        /// <summary>
        /// Gets or sets the value of variable alertEventKey.
        /// </summary>
        [TestVariable("51de6764-cc11-4b53-8975-668aa84bc724")]
        public string alertEventKey
        {
            get { return _alertEventKey; }
            set { _alertEventKey = value; }
        }

        string _alertEventType;

        /// <summary>
        /// Gets or sets the value of variable alertEventType.
        /// </summary>
        [TestVariable("a0367fff-fc64-4d0f-aa27-3cf41c1ed58b")]
        public string alertEventType
        {
            get { return _alertEventType; }
            set { _alertEventType = value; }
        }

        string _deviceType;

        /// <summary>
        /// Gets or sets the value of variable deviceType.
        /// </summary>
        [TestVariable("d87a2ab8-25e4-4d6a-90da-a1537775d84c")]
        public string deviceType
        {
            get { return _deviceType; }
            set { _deviceType = value; }
        }

        string _deviceId;

        /// <summary>
        /// Gets or sets the value of variable deviceId.
        /// </summary>
        [TestVariable("afbcc6ee-b051-435a-be17-916c6102bc5e")]
        public string deviceId
        {
            get { return _deviceId; }
            set { _deviceId = value; }
        }

        string _milepost;

        /// <summary>
        /// Gets or sets the value of variable milepost.
        /// </summary>
        [TestVariable("71be5873-2ad3-4635-876f-74f8a3ef966f")]
        public string milepost
        {
            get { return _milepost; }
            set { _milepost = value; }
        }

        string _division;

        /// <summary>
        /// Gets or sets the value of variable division.
        /// </summary>
        [TestVariable("9419bf12-3556-4212-b322-c9dfaa28da7b")]
        public string division
        {
            get { return _division; }
            set { _division = value; }
        }

        string _messageText;

        /// <summary>
        /// Gets or sets the value of variable messageText.
        /// </summary>
        [TestVariable("e948c2fc-ece4-4948-b927-556d342c007e")]
        public string messageText
        {
            get { return _messageText; }
            set { _messageText = value; }
        }

        string _timeInSeconds;

        /// <summary>
        /// Gets or sets the value of variable timeInSeconds.
        /// </summary>
        [TestVariable("207f5a65-fd14-45d2-acce-3f9562a8fddd")]
        public string timeInSeconds
        {
            get { return _timeInSeconds; }
            set { _timeInSeconds = value; }
        }

        string _retry;

        /// <summary>
        /// Gets or sets the value of variable retry.
        /// </summary>
        [TestVariable("7b6ab1ce-41a8-4f76-86a9-b8023788e452")]
        public string retry
        {
            get { return _retry; }
            set { _retry = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_MIS_Messages.ValidateExternalAlertEventMessage(alertEventKey, alertEventType, deviceType, deviceId, milepost, division, messageText, ValueConverter.ArgumentFromString<int>("timeInSeconds", timeInSeconds), ValueConverter.ArgumentFromString<bool>("retry", retry));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
