///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.MIS.MIS_Message_Validation
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateEngineConsistMessage_ByContent_Simple_NS recording.
    /// </summary>
    [TestModule("cb44abb3-5091-45c4-8b68-f7913cb0f6a8", ModuleType.Recording, 1)]
    public partial class ValidateEngineConsistMessage_ByContent_Simple_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static ValidateEngineConsistMessage_ByContent_Simple_NS instance = new ValidateEngineConsistMessage_ByContent_Simple_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateEngineConsistMessage_ByContent_Simple_NS()
        {
            trainSeed = "";
            engineSeed = "";
            reportingLocation = "";
            reportingSource = "";
            otherFilters = "";
            validateDoesExist = "True";
            timeInSeconds = "5";
            retry = "True";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateEngineConsistMessage_ByContent_Simple_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _trainSeed;

        /// <summary>
        /// Gets or sets the value of variable trainSeed.
        /// </summary>
        [TestVariable("6e318827-e59e-477e-815e-07ad523f237b")]
        public string trainSeed
        {
            get { return _trainSeed; }
            set { _trainSeed = value; }
        }

        string _engineSeed;

        /// <summary>
        /// Gets or sets the value of variable engineSeed.
        /// </summary>
        [TestVariable("3fce3f20-b2ac-4458-a7f3-94324a48f9e0")]
        public string engineSeed
        {
            get { return _engineSeed; }
            set { _engineSeed = value; }
        }

        string _reportingLocation;

        /// <summary>
        /// Gets or sets the value of variable reportingLocation.
        /// </summary>
        [TestVariable("1b9f1b3c-3ae7-4a6b-93f9-7446a03f05f4")]
        public string reportingLocation
        {
            get { return _reportingLocation; }
            set { _reportingLocation = value; }
        }

        string _reportingSource;

        /// <summary>
        /// Gets or sets the value of variable reportingSource.
        /// </summary>
        [TestVariable("0f85075d-5b13-4aac-8503-0708e968f885")]
        public string reportingSource
        {
            get { return _reportingSource; }
            set { _reportingSource = value; }
        }

        string _otherFilters;

        /// <summary>
        /// Gets or sets the value of variable otherFilters.
        /// </summary>
        [TestVariable("b4e0d1e0-36d0-4ae7-b124-a8ff8c370d34")]
        public string otherFilters
        {
            get { return _otherFilters; }
            set { _otherFilters = value; }
        }

        string _validateDoesExist;

        /// <summary>
        /// Gets or sets the value of variable validateDoesExist.
        /// </summary>
        [TestVariable("d4f19ff2-f853-4d51-8bea-bd93fa3be672")]
        public string validateDoesExist
        {
            get { return _validateDoesExist; }
            set { _validateDoesExist = value; }
        }

        string _timeInSeconds;

        /// <summary>
        /// Gets or sets the value of variable timeInSeconds.
        /// </summary>
        [TestVariable("830ddca6-f7b2-4f21-989e-c84621d47c19")]
        public string timeInSeconds
        {
            get { return _timeInSeconds; }
            set { _timeInSeconds = value; }
        }

        string _retry;

        /// <summary>
        /// Gets or sets the value of variable retry.
        /// </summary>
        [TestVariable("3821c80e-133e-4430-892c-44498eda8106")]
        public string retry
        {
            get { return _retry; }
            set { _retry = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_MIS_Messages.NS_ValidateEngineConsistMessage_ByContent_Simple(trainSeed, engineSeed, reportingLocation, reportingSource, otherFilters, ValueConverter.ArgumentFromString<bool>("validateDoesExist", validateDoesExist), ValueConverter.ArgumentFromString<int>("timeInSeconds", timeInSeconds), ValueConverter.ArgumentFromString<bool>("retry", retry));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
