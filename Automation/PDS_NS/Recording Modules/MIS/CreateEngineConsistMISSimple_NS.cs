///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.MIS
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CreateEngineConsistMISSimple_NS recording.
    /// </summary>
    [TestModule("3a67ad30-1ba4-4879-9b60-9f81b042a3b9", ModuleType.Recording, 1)]
    public partial class CreateEngineConsistMISSimple_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static CreateEngineConsistMISSimple_NS instance = new CreateEngineConsistMISSimple_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CreateEngineConsistMISSimple_NS()
        {
            trainSeed = "";
            assignedDivision = "";
            helperCrewPoolID = "";
            reportingSource = "";
            reportingLocation = "";
            defaultDataApplied = "";
            purpose = "";
            engines = "";
            reportingPasscount = "";
            engineSeed = "";
            hostname = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CreateEngineConsistMISSimple_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _trainSeed;

        /// <summary>
        /// Gets or sets the value of variable trainSeed.
        /// </summary>
        [TestVariable("31f37a0d-f615-4eb5-a88e-8f58179e483e")]
        public string trainSeed
        {
            get { return _trainSeed; }
            set { _trainSeed = value; }
        }

        string _assignedDivision;

        /// <summary>
        /// Gets or sets the value of variable assignedDivision.
        /// </summary>
        [TestVariable("e25c53df-feac-47ee-8471-b1009d08dc96")]
        public string assignedDivision
        {
            get { return _assignedDivision; }
            set { _assignedDivision = value; }
        }

        string _helperCrewPoolID;

        /// <summary>
        /// Gets or sets the value of variable helperCrewPoolID.
        /// </summary>
        [TestVariable("428e13e4-0dc3-4874-b961-4649cb84b5bf")]
        public string helperCrewPoolID
        {
            get { return _helperCrewPoolID; }
            set { _helperCrewPoolID = value; }
        }

        string _reportingSource;

        /// <summary>
        /// Gets or sets the value of variable reportingSource.
        /// </summary>
        [TestVariable("3ea6d8d6-4c6d-4991-a479-43a7869fff55")]
        public string reportingSource
        {
            get { return _reportingSource; }
            set { _reportingSource = value; }
        }

        string _reportingLocation;

        /// <summary>
        /// Gets or sets the value of variable reportingLocation.
        /// </summary>
        [TestVariable("5bf246f7-81b1-42e3-b5db-9b0a86217ccb")]
        public string reportingLocation
        {
            get { return _reportingLocation; }
            set { _reportingLocation = value; }
        }

        string _defaultDataApplied;

        /// <summary>
        /// Gets or sets the value of variable defaultDataApplied.
        /// </summary>
        [TestVariable("5f7aba35-0791-41b7-b11e-b6945edecbe3")]
        public string defaultDataApplied
        {
            get { return _defaultDataApplied; }
            set { _defaultDataApplied = value; }
        }

        string _purpose;

        /// <summary>
        /// Gets or sets the value of variable purpose.
        /// </summary>
        [TestVariable("1082d0f0-07ab-41d8-b6c2-ada07ffab05f")]
        public string purpose
        {
            get { return _purpose; }
            set { _purpose = value; }
        }

        string _engines;

        /// <summary>
        /// Gets or sets the value of variable engines.
        /// </summary>
        [TestVariable("96169d12-f23f-4d78-81fc-6f38375dadad")]
        public string engines
        {
            get { return _engines; }
            set { _engines = value; }
        }

        string _reportingPasscount;

        /// <summary>
        /// Gets or sets the value of variable reportingPasscount.
        /// </summary>
        [TestVariable("b7a8d9d0-cc74-4071-8a77-bce23f7a7428")]
        public string reportingPasscount
        {
            get { return _reportingPasscount; }
            set { _reportingPasscount = value; }
        }

        string _engineSeed;

        /// <summary>
        /// Gets or sets the value of variable engineSeed.
        /// </summary>
        [TestVariable("012167be-bf41-411c-aab4-d15f6ce45124")]
        public string engineSeed
        {
            get { return _engineSeed; }
            set { _engineSeed = value; }
        }

        string _hostname;

        /// <summary>
        /// Gets or sets the value of variable hostname.
        /// </summary>
        [TestVariable("3f9b8c59-b876-464a-befe-7d522c8c50e8")]
        public string hostname
        {
            get { return _hostname; }
            set { _hostname = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_MIS_Messages.NS_SendEngineConsist_48Simple(trainSeed, engineSeed, assignedDivision, helperCrewPoolID, reportingSource, reportingLocation, reportingPasscount, defaultDataApplied, purpose, engines, hostname);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
