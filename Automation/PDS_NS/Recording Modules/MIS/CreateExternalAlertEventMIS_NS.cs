///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.MIS
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CreateExternalAlertEventMIS_NS recording.
    /// </summary>
    [TestModule("df9f7c7a-0e45-4e7d-8ad4-34158e1e765a", ModuleType.Recording, 1)]
    public partial class CreateExternalAlertEventMIS_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static CreateExternalAlertEventMIS_NS instance = new CreateExternalAlertEventMIS_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CreateExternalAlertEventMIS_NS()
        {
            alertEventKey = "";
            alertEventType = "";
            deviceType = "";
            deviceId = "";
            milepost = "";
            division = "";
            direction = "";
            startTime = "";
            startTimeZone = "";
            messageText = "";
            startdate = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CreateExternalAlertEventMIS_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _alertEventKey;

        /// <summary>
        /// Gets or sets the value of variable alertEventKey.
        /// </summary>
        [TestVariable("acbf92f7-a567-478f-b66c-e6f40a699de5")]
        public string alertEventKey
        {
            get { return _alertEventKey; }
            set { _alertEventKey = value; }
        }

        string _alertEventType;

        /// <summary>
        /// Gets or sets the value of variable alertEventType.
        /// </summary>
        [TestVariable("985534cc-076b-488e-b872-402e5fe5a434")]
        public string alertEventType
        {
            get { return _alertEventType; }
            set { _alertEventType = value; }
        }

        string _deviceType;

        /// <summary>
        /// Gets or sets the value of variable deviceType.
        /// </summary>
        [TestVariable("6f1af4e3-913d-4f27-a529-4184a1e3af0f")]
        public string deviceType
        {
            get { return _deviceType; }
            set { _deviceType = value; }
        }

        string _deviceId;

        /// <summary>
        /// Gets or sets the value of variable deviceId.
        /// </summary>
        [TestVariable("164d7722-c7fe-4e7d-a899-8fbdcc3ca67d")]
        public string deviceId
        {
            get { return _deviceId; }
            set { _deviceId = value; }
        }

        string _milepost;

        /// <summary>
        /// Gets or sets the value of variable milepost.
        /// </summary>
        [TestVariable("09da6c8c-b211-41b7-8f9e-ccb177c21c45")]
        public string milepost
        {
            get { return _milepost; }
            set { _milepost = value; }
        }

        string _division;

        /// <summary>
        /// Gets or sets the value of variable division.
        /// </summary>
        [TestVariable("e7fb9b54-3d6e-4fe2-b5aa-ebbdccd85bda")]
        public string division
        {
            get { return _division; }
            set { _division = value; }
        }

        string _direction;

        /// <summary>
        /// Gets or sets the value of variable direction.
        /// </summary>
        [TestVariable("0b4fd013-e4d0-4b8f-a3bd-9d866cb40608")]
        public string direction
        {
            get { return _direction; }
            set { _direction = value; }
        }

        string _startTime;

        /// <summary>
        /// Gets or sets the value of variable startTime.
        /// </summary>
        [TestVariable("b536e75f-df23-4343-ba65-af2d5ca0e238")]
        public string startTime
        {
            get { return _startTime; }
            set { _startTime = value; }
        }

        string _startTimeZone;

        /// <summary>
        /// Gets or sets the value of variable startTimeZone.
        /// </summary>
        [TestVariable("ec16a2a6-83b3-4794-bd3c-a2fad0d38488")]
        public string startTimeZone
        {
            get { return _startTimeZone; }
            set { _startTimeZone = value; }
        }

        string _messageText;

        /// <summary>
        /// Gets or sets the value of variable messageText.
        /// </summary>
        [TestVariable("7fff0c86-aeef-4804-b165-12db7f1a06ec")]
        public string messageText
        {
            get { return _messageText; }
            set { _messageText = value; }
        }

        string _startdate;

        /// <summary>
        /// Gets or sets the value of variable startdate.
        /// </summary>
        [TestVariable("d2f2d240-0c6e-4236-8f2c-08c4e15afd2b")]
        public string startdate
        {
            get { return _startdate; }
            set { _startdate = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            STE.Code_Utils.SendMISFileCollection_NS.NS_CreateExternalAlertEvent(alertEventKey, alertEventType, deviceType, deviceId, milepost, division, direction, startTime, startdate, startTimeZone, messageText);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
