///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.MIS
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CreateYardUpdateMessageMIS_NS recording.
    /// </summary>
    [TestModule("226e405c-1043-4551-8b20-e0cdef856a33", ModuleType.Recording, 1)]
    public partial class CreateYardUpdateMessageMIS_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static CreateYardUpdateMessageMIS_NS instance = new CreateYardUpdateMessageMIS_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CreateYardUpdateMessageMIS_NS()
        {
            location = "";
            trainSeed = "";
            inboundOutbound = "";
            assignedTrack = "";
            milepost = "";
            district = "";
            outboundTargetTimeOffset = "";
            outboundTargetTimeZone = "";
            reasonText = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CreateYardUpdateMessageMIS_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _location;

        /// <summary>
        /// Gets or sets the value of variable location.
        /// </summary>
        [TestVariable("ce922ec4-ecb6-4ac0-a95d-278e9434cac7")]
        public string location
        {
            get { return _location; }
            set { _location = value; }
        }

        string _trainSeed;

        /// <summary>
        /// Gets or sets the value of variable trainSeed.
        /// </summary>
        [TestVariable("8517d17c-1c2a-43bc-9f14-694bd3112eb3")]
        public string trainSeed
        {
            get { return _trainSeed; }
            set { _trainSeed = value; }
        }

        string _inboundOutbound;

        /// <summary>
        /// Gets or sets the value of variable inboundOutbound.
        /// </summary>
        [TestVariable("f895c64a-6c32-4388-8d73-451b3258fec3")]
        public string inboundOutbound
        {
            get { return _inboundOutbound; }
            set { _inboundOutbound = value; }
        }

        string _assignedTrack;

        /// <summary>
        /// Gets or sets the value of variable assignedTrack.
        /// </summary>
        [TestVariable("8181c5c3-d4e4-494d-8290-ceef3eb348e6")]
        public string assignedTrack
        {
            get { return _assignedTrack; }
            set { _assignedTrack = value; }
        }

        string _milepost;

        /// <summary>
        /// Gets or sets the value of variable milepost.
        /// </summary>
        [TestVariable("d84534a3-371c-4743-a978-05090f270123")]
        public string milepost
        {
            get { return _milepost; }
            set { _milepost = value; }
        }

        string _district;

        /// <summary>
        /// Gets or sets the value of variable district.
        /// </summary>
        [TestVariable("d4cebf5c-d99c-487d-92d2-2ffcaa0ee7e5")]
        public string district
        {
            get { return _district; }
            set { _district = value; }
        }

        string _outboundTargetTimeOffset;

        /// <summary>
        /// Gets or sets the value of variable outboundTargetTimeOffset.
        /// </summary>
        [TestVariable("37e6c59b-2f4d-433b-9818-31682b35adea")]
        public string outboundTargetTimeOffset
        {
            get { return _outboundTargetTimeOffset; }
            set { _outboundTargetTimeOffset = value; }
        }

        string _outboundTargetTimeZone;

        /// <summary>
        /// Gets or sets the value of variable outboundTargetTimeZone.
        /// </summary>
        [TestVariable("ac914146-3c39-42c6-bd77-eb0481419ec0")]
        public string outboundTargetTimeZone
        {
            get { return _outboundTargetTimeZone; }
            set { _outboundTargetTimeZone = value; }
        }

        string _reasonText;

        /// <summary>
        /// Gets or sets the value of variable reasonText.
        /// </summary>
        [TestVariable("4fdfabd1-fa0a-45c0-9406-fe6fb62d9051")]
        public string reasonText
        {
            get { return _reasonText; }
            set { _reasonText = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            STE.Code_Utils.SendMISFileCollection_NS.NS_UpdateYardMessage(location, trainSeed, inboundOutbound, assignedTrack, milepost, district, outboundTargetTimeOffset, outboundTargetTimeZone, reasonText);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
