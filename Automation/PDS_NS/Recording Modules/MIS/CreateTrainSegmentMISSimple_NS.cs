///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.MIS
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CreateTrainSegmentMISSimple_NS recording.
    /// </summary>
    [TestModule("e61d4048-8fcb-48e4-a558-383acf7a1c6d", ModuleType.Recording, 1)]
    public partial class CreateTrainSegmentMISSimple_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static CreateTrainSegmentMISSimple_NS instance = new CreateTrainSegmentMISSimple_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CreateTrainSegmentMISSimple_NS()
        {
            trainSeed = "";
            trainOrigin = "";
            timeZone = "";
            timeType = "";
            trainDestination = "";
            effectiveLocation = "";
            effectivePassCount = "";
            dateOffsetDays = "";
            timeOffsetMinutes = "";
            hostname = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CreateTrainSegmentMISSimple_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _trainSeed;

        /// <summary>
        /// Gets or sets the value of variable trainSeed.
        /// </summary>
        [TestVariable("04bed630-615c-4b54-a19d-f1c07a2b924e")]
        public string trainSeed
        {
            get { return _trainSeed; }
            set { _trainSeed = value; }
        }

        string _trainOrigin;

        /// <summary>
        /// Gets or sets the value of variable trainOrigin.
        /// </summary>
        [TestVariable("9a37356e-de4e-49c5-b00e-c5814fa98e73")]
        public string trainOrigin
        {
            get { return _trainOrigin; }
            set { _trainOrigin = value; }
        }

        string _timeZone;

        /// <summary>
        /// Gets or sets the value of variable timeZone.
        /// </summary>
        [TestVariable("81dc695c-8868-4767-af94-cf1b2a06baab")]
        public string timeZone
        {
            get { return _timeZone; }
            set { _timeZone = value; }
        }

        string _timeType;

        /// <summary>
        /// Gets or sets the value of variable timeType.
        /// </summary>
        [TestVariable("ef089dc1-f5f2-46ce-8ebb-97a663706a95")]
        public string timeType
        {
            get { return _timeType; }
            set { _timeType = value; }
        }

        string _trainDestination;

        /// <summary>
        /// Gets or sets the value of variable trainDestination.
        /// </summary>
        [TestVariable("41b9043f-b23d-47da-86b9-03cffbdc492b")]
        public string trainDestination
        {
            get { return _trainDestination; }
            set { _trainDestination = value; }
        }

        string _effectiveLocation;

        /// <summary>
        /// Gets or sets the value of variable effectiveLocation.
        /// </summary>
        [TestVariable("da280ee3-ae07-4d34-9aa3-a65fe16ed323")]
        public string effectiveLocation
        {
            get { return _effectiveLocation; }
            set { _effectiveLocation = value; }
        }

        string _effectivePassCount;

        /// <summary>
        /// Gets or sets the value of variable effectivePassCount.
        /// </summary>
        [TestVariable("78b93e45-86e0-40bf-b2b5-a8b62b8153d3")]
        public string effectivePassCount
        {
            get { return _effectivePassCount; }
            set { _effectivePassCount = value; }
        }

        string _dateOffsetDays;

        /// <summary>
        /// Gets or sets the value of variable dateOffsetDays.
        /// </summary>
        [TestVariable("a9bac2ec-ab82-4e10-b79b-48968e4e661a")]
        public string dateOffsetDays
        {
            get { return _dateOffsetDays; }
            set { _dateOffsetDays = value; }
        }

        string _timeOffsetMinutes;

        /// <summary>
        /// Gets or sets the value of variable timeOffsetMinutes.
        /// </summary>
        [TestVariable("77451999-c2ed-44cb-ab1e-88582424a57c")]
        public string timeOffsetMinutes
        {
            get { return _timeOffsetMinutes; }
            set { _timeOffsetMinutes = value; }
        }

        string _hostname;

        /// <summary>
        /// Gets or sets the value of variable hostname.
        /// </summary>
        [TestVariable("cec8e1d9-f687-4fe7-8047-0c430a9994b8")]
        public string hostname
        {
            get { return _hostname; }
            set { _hostname = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_MIS_Messages.NS_SendTrainSegment_48Simple(trainSeed, effectiveLocation, effectivePassCount, dateOffsetDays, timeOffsetMinutes, timeZone, timeType, trainOrigin, trainDestination, hostname);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
