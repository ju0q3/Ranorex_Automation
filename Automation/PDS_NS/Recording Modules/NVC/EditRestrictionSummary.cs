///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.NVC
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EditRestrictionSummary recording.
    /// </summary>
    [TestModule("fc751607-3059-4848-9cd3-df0c3cd60cc1", ModuleType.Recording, 1)]
    public partial class EditRestrictionSummary : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static EditRestrictionSummary instance = new EditRestrictionSummary();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EditRestrictionSummary()
        {
            TypeValue = "";
            StartMP = "";
            EndMP = "";
            EditType = "";
            EditStartMP = "";
            ChangeEndMP = "";
            EditTraffic = "";
            Speed = "";
            StartTime = "";
            EndTime = "";
            Reason = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EditRestrictionSummary Instance
        {
            get { return instance; }
        }

#region Variables

        string _TypeValue;

        /// <summary>
        /// Gets or sets the value of variable TypeValue.
        /// </summary>
        [TestVariable("904e1856-ea1c-4ef2-971b-696fb69e3cc1")]
        public string TypeValue
        {
            get { return _TypeValue; }
            set { _TypeValue = value; }
        }

        string _StartMP;

        /// <summary>
        /// Gets or sets the value of variable StartMP.
        /// </summary>
        [TestVariable("a798c070-115e-4ebe-91ea-5fe3577f92e1")]
        public string StartMP
        {
            get { return _StartMP; }
            set { _StartMP = value; }
        }

        string _EndMP;

        /// <summary>
        /// Gets or sets the value of variable EndMP.
        /// </summary>
        [TestVariable("8bd79ae1-338c-4825-8cae-d7a94de75acd")]
        public string EndMP
        {
            get { return _EndMP; }
            set { _EndMP = value; }
        }

        string _EditType;

        /// <summary>
        /// Gets or sets the value of variable EditType.
        /// </summary>
        [TestVariable("54df5fd3-f7ed-405b-829a-6ba2ed60259d")]
        public string EditType
        {
            get { return _EditType; }
            set { _EditType = value; }
        }

        string _EditStartMP;

        /// <summary>
        /// Gets or sets the value of variable EditStartMP.
        /// </summary>
        [TestVariable("bba01a48-3343-44d6-9429-3af30e680ed4")]
        public string EditStartMP
        {
            get { return _EditStartMP; }
            set { _EditStartMP = value; }
        }

        string _ChangeEndMP;

        /// <summary>
        /// Gets or sets the value of variable ChangeEndMP.
        /// </summary>
        [TestVariable("468f1830-7119-4ab4-88b9-24441257e3a3")]
        public string ChangeEndMP
        {
            get { return _ChangeEndMP; }
            set { _ChangeEndMP = value; }
        }

        string _EditTraffic;

        /// <summary>
        /// Gets or sets the value of variable EditTraffic.
        /// </summary>
        [TestVariable("600177ac-bdb8-4516-aefa-590f5307f4f1")]
        public string EditTraffic
        {
            get { return _EditTraffic; }
            set { _EditTraffic = value; }
        }

        string _Speed;

        /// <summary>
        /// Gets or sets the value of variable Speed.
        /// </summary>
        [TestVariable("c154bae6-c939-4c4d-adfb-20a618ab8e7f")]
        public string Speed
        {
            get { return _Speed; }
            set { _Speed = value; }
        }

        string _StartTime;

        /// <summary>
        /// Gets or sets the value of variable StartTime.
        /// </summary>
        [TestVariable("d73361cd-f468-4a66-a7ea-9ffc9704d2cf")]
        public string StartTime
        {
            get { return _StartTime; }
            set { _StartTime = value; }
        }

        string _EndTime;

        /// <summary>
        /// Gets or sets the value of variable EndTime.
        /// </summary>
        [TestVariable("b91c44fb-8f6f-4c09-9cca-dbb6ec0038f0")]
        public string EndTime
        {
            get { return _EndTime; }
            set { _EndTime = value; }
        }

        string _Reason;

        /// <summary>
        /// Gets or sets the value of variable Reason.
        /// </summary>
        [TestVariable("6ae71deb-2086-445b-a246-d81a6d006721")]
        public string Reason
        {
            get { return _Reason; }
            set { _Reason = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_NVC.NS_EditRestriction(TypeValue, StartMP, EndMP, EditType, EditStartMP, ChangeEndMP, EditTraffic, Speed, StartTime, EndTime, Reason);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
