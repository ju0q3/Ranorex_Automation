///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.NVC
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddRestrictionSummary recording.
    /// </summary>
    [TestModule("c7554dbf-80e0-4d8f-9c17-ce9696305da7", ModuleType.Recording, 1)]
    public partial class AddRestrictionSummary : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static AddRestrictionSummary instance = new AddRestrictionSummary();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddRestrictionSummary()
        {
            Type = "";
            StartMP = "";
            EndMP = "";
            Traffic = "";
            Speed = "";
            StartTime = "";
            EndTime = "";
            Reason = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddRestrictionSummary Instance
        {
            get { return instance; }
        }

#region Variables

        string _Type;

        /// <summary>
        /// Gets or sets the value of variable Type.
        /// </summary>
        [TestVariable("15c36d65-3f17-4415-8e7c-7efd624b60d1")]
        public string Type
        {
            get { return _Type; }
            set { _Type = value; }
        }

        string _StartMP;

        /// <summary>
        /// Gets or sets the value of variable StartMP.
        /// </summary>
        [TestVariable("e14573ff-6994-42d9-a72d-42f0b28a4940")]
        public string StartMP
        {
            get { return _StartMP; }
            set { _StartMP = value; }
        }

        string _EndMP;

        /// <summary>
        /// Gets or sets the value of variable EndMP.
        /// </summary>
        [TestVariable("0fce9288-38d2-411c-b511-468a18921c7f")]
        public string EndMP
        {
            get { return _EndMP; }
            set { _EndMP = value; }
        }

        string _Traffic;

        /// <summary>
        /// Gets or sets the value of variable Traffic.
        /// </summary>
        [TestVariable("4c0ace19-78a6-4032-b953-f0aab7f763ff")]
        public string Traffic
        {
            get { return _Traffic; }
            set { _Traffic = value; }
        }

        string _Speed;

        /// <summary>
        /// Gets or sets the value of variable Speed.
        /// </summary>
        [TestVariable("34046677-036e-41aa-9eb9-ae3d93d1c02a")]
        public string Speed
        {
            get { return _Speed; }
            set { _Speed = value; }
        }

        string _StartTime;

        /// <summary>
        /// Gets or sets the value of variable StartTime.
        /// </summary>
        [TestVariable("e1648d51-5805-4e4a-b612-700ef94acb0a")]
        public string StartTime
        {
            get { return _StartTime; }
            set { _StartTime = value; }
        }

        string _EndTime;

        /// <summary>
        /// Gets or sets the value of variable EndTime.
        /// </summary>
        [TestVariable("8070a702-5267-4511-ae13-f6f6cdce7dd9")]
        public string EndTime
        {
            get { return _EndTime; }
            set { _EndTime = value; }
        }

        string _Reason;

        /// <summary>
        /// Gets or sets the value of variable Reason.
        /// </summary>
        [TestVariable("3cf55c36-e6fa-4393-ac3f-47e00bbdadd3")]
        public string Reason
        {
            get { return _Reason; }
            set { _Reason = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_NVC.NS_AddRestriction(Type, StartMP, EndMP, Traffic, Speed, StartTime, EndTime, Reason);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
