///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.NVC
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddNVCRestriction recording.
    /// </summary>
    [TestModule("35830977-32dd-4b3e-b816-ad7ad32c4b5c", ModuleType.Recording, 1)]
    public partial class AddNVCRestriction : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static AddNVCRestriction instance = new AddNVCRestriction();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddNVCRestriction()
        {
            type = "";
            trafficOrientation = "";
            speed = "";
            startMP = "";
            endMP = "";
            startTime = "";
            endTime = "";
            Reason = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddNVCRestriction Instance
        {
            get { return instance; }
        }

#region Variables

        string _type;

        /// <summary>
        /// Gets or sets the value of variable type.
        /// </summary>
        [TestVariable("dc95f18b-5052-4978-a4cd-08cd780bcafd")]
        public string type
        {
            get { return _type; }
            set { _type = value; }
        }

        string _trafficOrientation;

        /// <summary>
        /// Gets or sets the value of variable trafficOrientation.
        /// </summary>
        [TestVariable("74ac52e3-e37c-4d5f-8c6e-af3201dbb3f3")]
        public string trafficOrientation
        {
            get { return _trafficOrientation; }
            set { _trafficOrientation = value; }
        }

        string _speed;

        /// <summary>
        /// Gets or sets the value of variable speed.
        /// </summary>
        [TestVariable("c5305c74-69ae-4411-944f-37b044f03272")]
        public string speed
        {
            get { return _speed; }
            set { _speed = value; }
        }

        string _startMP;

        /// <summary>
        /// Gets or sets the value of variable startMP.
        /// </summary>
        [TestVariable("e65807b0-3b0a-49ff-85c0-f8266b7df2af")]
        public string startMP
        {
            get { return _startMP; }
            set { _startMP = value; }
        }

        string _endMP;

        /// <summary>
        /// Gets or sets the value of variable endMP.
        /// </summary>
        [TestVariable("cfa6c337-7c2a-4ed8-a7f1-81ac7c7d1fd8")]
        public string endMP
        {
            get { return _endMP; }
            set { _endMP = value; }
        }

        string _startTime;

        /// <summary>
        /// Gets or sets the value of variable startTime.
        /// </summary>
        [TestVariable("11039960-4b5c-4f15-b5b4-56ce716aab9e")]
        public string startTime
        {
            get { return _startTime; }
            set { _startTime = value; }
        }

        string _endTime;

        /// <summary>
        /// Gets or sets the value of variable endTime.
        /// </summary>
        [TestVariable("6bad8a5b-7a25-427a-9f9b-01a52fc07291")]
        public string endTime
        {
            get { return _endTime; }
            set { _endTime = value; }
        }

        string _Reason;

        /// <summary>
        /// Gets or sets the value of variable Reason.
        /// </summary>
        [TestVariable("7c71a044-1ed7-4064-b9d8-138a56dd2fb5")]
        public string Reason
        {
            get { return _Reason; }
            set { _Reason = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_NVC.AddPTR(type, startMP, endMP, trafficOrientation, speed, startTime, endTime, Reason);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
