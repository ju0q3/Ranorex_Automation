///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Miscellaneous
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The NS_CreateEngineConsistRecord recording.
    /// </summary>
    [TestModule("37de2966-3dab-4f61-9700-e0dca50eee0c", ModuleType.Recording, 1)]
    public partial class NS_CreateEngineConsistRecord : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static NS_CreateEngineConsistRecord instance = new NS_CreateEngineConsistRecord();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public NS_CreateEngineConsistRecord()
        {
            trainSeed = "";
            engineSeed = "";
            engineConsistRecord = "";
            assignedDivision = "";
            helperCrewPoolId = "";
            DefaultDataApplied = "";
            reportingPassCount = "";
            reportingLocation = "";
            reportingSource = "";
            messagePurpose = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static NS_CreateEngineConsistRecord Instance
        {
            get { return instance; }
        }

#region Variables

        string _trainSeed;

        /// <summary>
        /// Gets or sets the value of variable trainSeed.
        /// </summary>
        [TestVariable("6f73aec7-4bb0-4676-953c-f45159a6816a")]
        public string trainSeed
        {
            get { return _trainSeed; }
            set { _trainSeed = value; }
        }

        string _engineSeed;

        /// <summary>
        /// Gets or sets the value of variable engineSeed.
        /// </summary>
        [TestVariable("24c4c87a-e942-45b2-97ad-356e79225a31")]
        public string engineSeed
        {
            get { return _engineSeed; }
            set { _engineSeed = value; }
        }

        string _engineConsistRecord;

        /// <summary>
        /// Gets or sets the value of variable engineConsistRecord.
        /// </summary>
        [TestVariable("86645907-2d0f-4012-8e1f-2e8264576557")]
        public string engineConsistRecord
        {
            get { return _engineConsistRecord; }
            set { _engineConsistRecord = value; }
        }

        string _assignedDivision;

        /// <summary>
        /// Gets or sets the value of variable assignedDivision.
        /// </summary>
        [TestVariable("5dc718ae-5f92-4c83-af8d-3a2e0a0a5e93")]
        public string assignedDivision
        {
            get { return _assignedDivision; }
            set { _assignedDivision = value; }
        }

        string _helperCrewPoolId;

        /// <summary>
        /// Gets or sets the value of variable helperCrewPoolId.
        /// </summary>
        [TestVariable("ed8034e1-af71-4245-b64a-c359f5f6c1a1")]
        public string helperCrewPoolId
        {
            get { return _helperCrewPoolId; }
            set { _helperCrewPoolId = value; }
        }

        string _DefaultDataApplied;

        /// <summary>
        /// Gets or sets the value of variable DefaultDataApplied.
        /// </summary>
        [TestVariable("b206e72b-6751-44ad-8fbf-2bf99e42ca8f")]
        public string DefaultDataApplied
        {
            get { return _DefaultDataApplied; }
            set { _DefaultDataApplied = value; }
        }

        string _reportingPassCount;

        /// <summary>
        /// Gets or sets the value of variable reportingPassCount.
        /// </summary>
        [TestVariable("e0a601a1-7261-444c-acee-5fbbefeaa5eb")]
        public string reportingPassCount
        {
            get { return _reportingPassCount; }
            set { _reportingPassCount = value; }
        }

        string _reportingLocation;

        /// <summary>
        /// Gets or sets the value of variable reportingLocation.
        /// </summary>
        [TestVariable("52ce45f8-8da6-45ee-ac99-7d175d193472")]
        public string reportingLocation
        {
            get { return _reportingLocation; }
            set { _reportingLocation = value; }
        }

        string _reportingSource;

        /// <summary>
        /// Gets or sets the value of variable reportingSource.
        /// </summary>
        [TestVariable("0ab15550-6ca9-4e84-868d-da7e6509b04f")]
        public string reportingSource
        {
            get { return _reportingSource; }
            set { _reportingSource = value; }
        }

        string _messagePurpose;

        /// <summary>
        /// Gets or sets the value of variable messagePurpose.
        /// </summary>
        [TestVariable("1c0613ea-0c32-48ca-878d-c74ffb9747f9")]
        public string messagePurpose
        {
            get { return _messagePurpose; }
            set { _messagePurpose = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            PDS_CORE.Code_Utils.NS_TrainID.CreateEngineConsistRecord(trainSeed, engineSeed, engineConsistRecord, assignedDivision, helperCrewPoolId, DefaultDataApplied, reportingPassCount, reportingLocation, reportingSource, messagePurpose);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
