///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Miscellaneous
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The UpdateTripPlanDetails_PendingActivitySummary recording.
    /// </summary>
    [TestModule("48c9d1c6-69aa-4118-9487-1b7d1338b873", ModuleType.Recording, 1)]
    public partial class UpdateTripPlanDetails_PendingActivitySummary : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static UpdateTripPlanDetails_PendingActivitySummary instance = new UpdateTripPlanDetails_PendingActivitySummary();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public UpdateTripPlanDetails_PendingActivitySummary()
        {
            trainSeed = "";
            activityType = "";
            opsta = "";
            dwell = "";
            reason = "";
            location = "";
            expectedFeedback = "";
            validateExist = "True";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static UpdateTripPlanDetails_PendingActivitySummary Instance
        {
            get { return instance; }
        }

#region Variables

        string _trainSeed;

        /// <summary>
        /// Gets or sets the value of variable trainSeed.
        /// </summary>
        [TestVariable("3c71a54d-4f98-4806-82b9-1ee721bfc1f3")]
        public string trainSeed
        {
            get { return _trainSeed; }
            set { _trainSeed = value; }
        }

        string _activityType;

        /// <summary>
        /// Gets or sets the value of variable activityType.
        /// </summary>
        [TestVariable("1e0645ce-d7a6-4691-baa2-cc2a081ee598")]
        public string activityType
        {
            get { return _activityType; }
            set { _activityType = value; }
        }

        string _opsta;

        /// <summary>
        /// Gets or sets the value of variable opsta.
        /// </summary>
        [TestVariable("6e96235b-1967-4663-82e0-848d3073bf29")]
        public string opsta
        {
            get { return _opsta; }
            set { _opsta = value; }
        }

        string _dwell;

        /// <summary>
        /// Gets or sets the value of variable dwell.
        /// </summary>
        [TestVariable("d70fbd33-da84-45d1-b07e-1f3254ea98eb")]
        public string dwell
        {
            get { return _dwell; }
            set { _dwell = value; }
        }

        string _reason;

        /// <summary>
        /// Gets or sets the value of variable reason.
        /// </summary>
        [TestVariable("87b8b3a7-4f99-45c1-bd31-16088458dd6e")]
        public string reason
        {
            get { return _reason; }
            set { _reason = value; }
        }

        string _location;

        /// <summary>
        /// Gets or sets the value of variable location.
        /// </summary>
        [TestVariable("757d895b-d12f-4b7c-83c9-e3a64627bbe3")]
        public string location
        {
            get { return _location; }
            set { _location = value; }
        }

        string _expectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedback.
        /// </summary>
        [TestVariable("8df9cb87-398a-4da8-a260-5c72412a4447")]
        public string expectedFeedback
        {
            get { return _expectedFeedback; }
            set { _expectedFeedback = value; }
        }

        string _validateExist;

        /// <summary>
        /// Gets or sets the value of variable validateExist.
        /// </summary>
        [TestVariable("c9eed880-1b92-4984-b7a0-d4c555c0cd8e")]
        public string validateExist
        {
            get { return _validateExist; }
            set { _validateExist = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Miscellaneous.NS_UpdateTripPlanDetails_PendingActivitySummary(trainSeed, activityType, opsta, dwell, reason, location, expectedFeedback, ValueConverter.ArgumentFromString<bool>("validateExist", validateExist));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
