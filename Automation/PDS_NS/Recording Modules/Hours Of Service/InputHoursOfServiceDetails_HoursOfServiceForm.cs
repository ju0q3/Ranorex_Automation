///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Hours_Of_Service
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The InputHoursOfServiceDetails_HoursOfServiceForm recording.
    /// </summary>
    [TestModule("c80ec34c-2723-4742-9d6c-35ac495daa50", ModuleType.Recording, 1)]
    public partial class InputHoursOfServiceDetails_HoursOfServiceForm : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static InputHoursOfServiceDetails_HoursOfServiceForm instance = new InputHoursOfServiceDetails_HoursOfServiceForm();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InputHoursOfServiceDetails_HoursOfServiceForm()
        {
            expectedFeedback = "";
            apply = "True";
            closeForm = "True";
            logOnTimeDiff = "";
            logOffTimeDiff = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InputHoursOfServiceDetails_HoursOfServiceForm Instance
        {
            get { return instance; }
        }

#region Variables

        string _expectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedback.
        /// </summary>
        [TestVariable("f6199909-905d-4680-8799-ca5197d710a6")]
        public string expectedFeedback
        {
            get { return _expectedFeedback; }
            set { _expectedFeedback = value; }
        }

        string _apply;

        /// <summary>
        /// Gets or sets the value of variable apply.
        /// </summary>
        [TestVariable("25ca376d-69c4-4fa5-a091-687d2e2c56aa")]
        public string apply
        {
            get { return _apply; }
            set { _apply = value; }
        }

        string _closeForm;

        /// <summary>
        /// Gets or sets the value of variable closeForm.
        /// </summary>
        [TestVariable("e9291ac2-ab7f-4668-bd64-8c34a4006609")]
        public string closeForm
        {
            get { return _closeForm; }
            set { _closeForm = value; }
        }

        string _logOnTimeDiff;

        /// <summary>
        /// Gets or sets the value of variable logOnTimeDiff.
        /// </summary>
        [TestVariable("68dd9cf3-0a64-463a-9cf4-9ccbbf5b4276")]
        public string logOnTimeDiff
        {
            get { return _logOnTimeDiff; }
            set { _logOnTimeDiff = value; }
        }

        string _logOffTimeDiff;

        /// <summary>
        /// Gets or sets the value of variable logOffTimeDiff.
        /// </summary>
        [TestVariable("6c5d07bb-aafb-452b-b6a0-e4aaf150444e")]
        public string logOffTimeDiff
        {
            get { return _logOffTimeDiff; }
            set { _logOffTimeDiff = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_UserDetails.NS_InputHoursOfServiceDetails_HoursOfServiceForm(logOnTimeDiff, logOffTimeDiff, expectedFeedback, ValueConverter.ArgumentFromString<bool>("apply", apply), ValueConverter.ArgumentFromString<bool>("closeForm", closeForm));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
