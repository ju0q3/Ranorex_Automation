///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

using PDS_NS.UserCodeCollections;
using PDS_CORE.Code_Utils;

namespace PDS_NS.Recording_Modules.SpecialCaseRecordings.SmokeTest
{
    public partial class OpenAndCloseAllForms_SmokeTest_NS
    {
        public static global::PDS_NS.MainMenu_Repo MainMenurepo = global::PDS_NS.MainMenu_Repo.Instance;
        public static global::PDS_NS.TerritoryTransfer_Repo TerritoryTransferrepo = global::PDS_NS.TerritoryTransfer_Repo.Instance;
        public static global::PDS_NS.TrackAuthorities_Repo Authoritiesrepo = global::PDS_NS.TrackAuthorities_Repo.Instance;
        public static global::PDS_NS.Bulletins_Repo Bulletinsrepo = global::PDS_NS.Bulletins_Repo.Instance;
        public static global::PDS_NS.TrainClearance_Repo TrainClearancerepo = global::PDS_NS.TrainClearance_Repo.Instance;
        public static global::PDS_NS.Trains_Repo Trainsrepo = global::PDS_NS.Trains_Repo.Instance;
        public static global::PDS_NS.Miscellaneous_Repo Miscellaneousrepo = global::PDS_NS.Miscellaneous_Repo.Instance;
        public static global::PDS_NS.Assignments_Repo Assignmentsrepo = global::PDS_NS.Assignments_Repo.Instance;        
        public static global::PDS_NS.SystemConfiguration_Repo SystemConfigurationrepo = global::PDS_NS.SystemConfiguration_Repo.Instance;

		/// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        private void closeForm(RepoItemInfo closeButtonInfo) 
        {
            GeneralUtilities.ClickAndWaitForNotExistWithRetry(closeButtonInfo, closeButtonInfo);

            if (!closeButtonInfo.Exists(0))
            {
                Report.Success("Form closed successfully.");
            } else {
                Report.Failure("Form did not close successfully.");
            }
        }

        public void NS_OpenAndCloseAllForms_SmokeTest()
        {
        	RepoItemInfo fileButton = MainMenurepo.PDS_Main_Menu.MainMenuBar.FileButtonInfo;
            RepoItemInfo fileMenu = MainMenurepo.PDS_Main_Menu.FileMenu.SelfInfo;

            RepoItemInfo editButton = MainMenurepo.PDS_Main_Menu.MainMenuBar.EditButtonInfo;
            RepoItemInfo editMenu = MainMenurepo.PDS_Main_Menu.EditMenu.SelfInfo;

            RepoItemInfo trackAuthorityButton = MainMenurepo.PDS_Main_Menu.MainMenuBar.TrackAuthoritesButtonInfo;
            RepoItemInfo trackAuthorityMenu = MainMenurepo.PDS_Main_Menu.TrackAuthoritiesMenu.SelfInfo;

            RepoItemInfo bulletinButton = MainMenurepo.PDS_Main_Menu.MainMenuBar.BulletinButtonInfo;
            RepoItemInfo buttetinMenu = MainMenurepo.PDS_Main_Menu.BulletinMenu.SelfInfo;

            RepoItemInfo trainClearanceButton = MainMenurepo.PDS_Main_Menu.MainMenuBar.TrainClearanceButtonInfo;
            RepoItemInfo trainClearanceMenu = MainMenurepo.PDS_Main_Menu.TrainClearanceMenu.SelfInfo;

            RepoItemInfo trainsButton = MainMenurepo.PDS_Main_Menu.MainMenuBar.TrainsButtonInfo;
            RepoItemInfo trainsMenu = MainMenurepo.PDS_Main_Menu.TrainsMenu.SelfInfo;

            RepoItemInfo miscButton = MainMenurepo.PDS_Main_Menu.MainMenuBar.MiscellaneousButtonInfo;
            RepoItemInfo miscMenu = MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.SelfInfo;

            RepoItemInfo assignmentsButton = MainMenurepo.PDS_Main_Menu.MainMenuBar.AssignmentsButtonInfo;
            RepoItemInfo assignmentsMenu = MainMenurepo.PDS_Main_Menu.AssignmentsMenu.SelfInfo;

            RepoItemInfo sysConfigButton = MainMenurepo.PDS_Main_Menu.MainMenuBar.SystemConfigurationButtonInfo;
            RepoItemInfo sysConfigMenu = MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.SelfInfo;
            
            // Logon form
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Network Logon"));
            NS_Utility.NS_OpenForm_MainMenu(fileButton, fileMenu, MainMenurepo.PDS_Main_Menu.FileMenu.LogonInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Network Logon");
            closeForm(MainMenurepo.Network_Logon.WindowControls.CloseInfo);

            // Logoff form
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Network Logoff"));
            NS_Utility.NS_OpenForm_MainMenu(fileButton, fileMenu, MainMenurepo.PDS_Main_Menu.FileMenu.LogoffInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Logoff");
            closeForm(MainMenurepo.Network_Logoff.WindowControls.CloseInfo);

            // Open trackline form
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Open Trackline"));
            NS_Utility.NS_OpenForm_MainMenu(fileButton, fileMenu, MainMenurepo.PDS_Main_Menu.FileMenu.OpenTracklineInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Select territories to open trackline");
            closeForm(TerritoryTransferrepo.Open_Trackline.WindowControls.CloseInfo);

            // Skipping playback form
            
            // Hours of service
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Hours of Service"));
            NS_Utility.NS_OpenForm_MainMenu(editButton, editMenu, MainMenurepo.PDS_Main_Menu.EditMenu.HoursOfServiceInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Hours of Service");
            closeForm(MainMenurepo.Hours_Of_Service.WindowControls.CloseInfo);

            // set user profile
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Set User Profile"));
            NS_Utility.NS_OpenForm_MainMenu(editButton, editMenu, MainMenurepo.PDS_Main_Menu.EditMenu.SetUserProfileInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Set User Profile");
            closeForm(MainMenurepo.Set_User_Profile.WindowControls.CloseInfo);

            // save user profile
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Save User Profile"));
            NS_Utility.NS_OpenForm_MainMenu(editButton, editMenu, MainMenurepo.PDS_Main_Menu.EditMenu.SaveProfileAsInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Save Profile As");
            closeForm(MainMenurepo.Save_Profile_As.WindowControls.CloseInfo);

            // rename user profile
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Rename User Profile"));
            NS_Utility.NS_OpenForm_MainMenu(editButton, editMenu, MainMenurepo.PDS_Main_Menu.EditMenu.RenameUserProfileInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Rename User Profile");
            closeForm(MainMenurepo.Rename_User_Profile.WindowControls.CloseInfo);

            // open track authority
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Open Track Authority"));
            NS_Utility.NS_OpenForm_MainMenu(trackAuthorityButton, trackAuthorityMenu, MainMenurepo.PDS_Main_Menu.TrackAuthoritiesMenu.OpenInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Open Track Authority");
            closeForm(Authoritiesrepo.Open_Track_Authority.WindowControls.CloseInfo);

            // authority summary list
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Track Authority Summary List"));
            NS_Utility.NS_OpenForm_MainMenu(trackAuthorityButton, trackAuthorityMenu, MainMenurepo.PDS_Main_Menu.TrackAuthoritiesMenu.SummaryListInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Track Authority Summary List");
            closeForm(Authoritiesrepo.Track_Authority_Summary_List.WindowControls.CloseInfo);

            // authority summary list choice
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Track Authority Summary List Choice"));
            NS_Utility.NS_OpenForm_MainMenu(trackAuthorityButton, trackAuthorityMenu, MainMenurepo.PDS_Main_Menu.TrackAuthoritiesMenu.SummaryListChoiceInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Authority Summary List Choice");
            closeForm(Authoritiesrepo.Track_Authority_Summary_List_Choice.WindowControls.CloseInfo);

            // TODO: "Bulletins" as written in TCL

            // bulletin items
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Bulletin Input"));
            NS_Utility.NS_OpenForm_MainMenu(bulletinButton, buttetinMenu, MainMenurepo.PDS_Main_Menu.BulletinMenu.InputInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Bulletin Items");
            closeForm(Bulletinsrepo.Bulletins_Input_Relay.WindowControls.CloseInfo);

            // bulletin summary report
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Bulletin Summary Report"));
            NS_Utility.NS_OpenForm_MainMenu(bulletinButton, buttetinMenu, MainMenurepo.PDS_Main_Menu.BulletinMenu.SummaryReportInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Bulletin Summary Report");
            closeForm(Bulletinsrepo.Bulletin_Summary_Report.WindowControls.CloseInfo);

            // bulletin summary list
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Bulletin Summary List"));
            NS_Utility.NS_OpenForm_MainMenu(bulletinButton, buttetinMenu, MainMenurepo.PDS_Main_Menu.BulletinMenu.SummaryListInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Bulletin Summary List");
            closeForm(Bulletinsrepo.Bulletin_Summary_List.WindowControls.CloseInfo);

            // bulletin summary list choice
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Bulletin Summary List Choice"));
            NS_Utility.NS_OpenForm_MainMenu(bulletinButton, buttetinMenu, MainMenurepo.PDS_Main_Menu.BulletinMenu.SummaryListChoiceInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Bulletin Summary List Choice");
            closeForm(Bulletinsrepo.Bulletin_Summary_List_Choice.WindowControls.CloseInfo);

            // train clearance
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Train Clearance"));
            NS_Utility.NS_OpenForm_MainMenu(trainClearanceButton, trainClearanceMenu, MainMenurepo.PDS_Main_Menu.TrainClearanceMenu.ToTrainInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Train Clearance");
            closeForm(TrainClearancerepo.Train_Clearance.WindowControls.CloseInfo);

            // train clearance summary list 
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Train Clearance Summary List"));
            NS_Utility.NS_OpenForm_MainMenu(trainClearanceButton, trainClearanceMenu, MainMenurepo.PDS_Main_Menu.TrainClearanceMenu.SummaryListInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Train Clearance Summary List");
            closeForm(TrainClearancerepo.Train_Clearance_Summary_List.WindowControls.CloseInfo);

            // train clearance summary list choice
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Train Clearance Summary List Choice"));
            NS_Utility.NS_OpenForm_MainMenu(trainClearanceButton, trainClearanceMenu, MainMenurepo.PDS_Main_Menu.TrainClearanceMenu.SummaryListChoiceInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Train Clearance Summary List Choice");
            closeForm(TrainClearancerepo.Train_Clearance_Summary_List_Choice.WindowControls.CloseInfo);

            // train status summary
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Train Status Summary"));
            NS_Utility.NS_OpenForm_MainMenu(trainsButton, trainsMenu, MainMenurepo.PDS_Main_Menu.TrainsMenu.TrainStatusSummaryInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Train Status Summary");
            closeForm(Trainsrepo.Train_Status_Summary.WindowControls.CloseInfo);

            // train status summary choice
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Train Status Summary Choice"));
            NS_Utility.NS_OpenForm_MainMenu(trainsButton, trainsMenu, MainMenurepo.PDS_Main_Menu.TrainsMenu.TrainStatusSummaryChoiceInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Train Status Summary List Choice");
            closeForm(Trainsrepo.Train_Status_Summary_List_Choice.WindowControls.CloseInfo);

            // train sheet
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Train Sheet"));
            NS_Utility.NS_OpenForm_MainMenu(trainsButton, trainsMenu, MainMenurepo.PDS_Main_Menu.TrainsMenu.TrainSheetInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Train Sheet");
            closeForm(Trainsrepo.Train_Sheet.WindowControls.CloseInfo);

            // train stop summary
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Train Stop Summary"));
            NS_Utility.NS_OpenForm_MainMenu(trainsButton, trainsMenu, MainMenurepo.PDS_Main_Menu.TrainsMenu.TrainStopSummaryInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Train Stop Information");
            closeForm(Trainsrepo.Train_Stop_Summary.WindowControls.CloseInfo);

            // train stop summary choice
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Train Stop Summary Choice"));
            NS_Utility.NS_OpenForm_MainMenu(trainsButton, trainsMenu, MainMenurepo.PDS_Main_Menu.TrainsMenu.TrainStopSummaryChoiceInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Train Stop Summary Choice");
            closeForm(Trainsrepo.Train_Stop_Summary_Choice.WindowControls.CloseInfo);

            // find train
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Find Train"));
            NS_Utility.NS_OpenForm_MainMenu(trainsButton, trainsMenu, MainMenurepo.PDS_Main_Menu.TrainsMenu.FindTrainInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Find Train");
            closeForm(Trainsrepo.Find_Train.WindowControls.CloseInfo);

            // train schedule
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Train Schedule"));
            NS_Utility.NS_OpenForm_MainMenu(trainsButton, trainsMenu, MainMenurepo.PDS_Main_Menu.TrainsMenu.TrainScheduleInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Train Schedule");
            closeForm(Trainsrepo.Train_Schedule.WindowControls.CloseInfo);

            // NVC
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "NVC"));
            NS_Utility.NS_OpenForm_MainMenu(trainsButton, trainsMenu, MainMenurepo.PDS_Main_Menu.TrainsMenu.NetworkVisibilityConsoleInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Network Visibility Console");
            closeForm(Trainsrepo.Network_Visibility_Console.WindowControls.CloseInfo);

            // business objective function
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Business Objective Function"));
            NS_Utility.NS_OpenForm_MainMenu(trainsButton, trainsMenu, MainMenurepo.PDS_Main_Menu.TrainsMenu.BusinessObjectiveFunctionInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Business Objective Function");
            closeForm(Trainsrepo.Business_Objective_Function_TODO.WindowControls.CloseInfo);

            // trains needing bulletins summary list
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Trains Needing Bulletins Summary List"));
            NS_Utility.NS_OpenForm_MainMenu(trainsButton, trainsMenu, MainMenurepo.PDS_Main_Menu.TrainsMenu.TrainsNeedingBulletinsSummaryInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Trains Needing Bulletins Summary List");
            closeForm(Trainsrepo.Trains_Needing_Bulletins_Summary_List.WindowControls.CloseInfo);

            // trains needing bulletins summary list choice
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Trains Needing Bulletins Summary List Choice"));
            NS_Utility.NS_OpenForm_MainMenu(trainsButton, trainsMenu, MainMenurepo.PDS_Main_Menu.TrainsMenu.TrainsNeedingBulletinsSummaryListChoiceInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Trains Needing Bulletins Summary List Choice");
            closeForm(Trainsrepo.Trains_Needing_Bulletins_Summary_List_Choice.WindowControls.CloseInfo);

            // alert event queue
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Alert Event Queue"));
            GeneralUtilities.ClickAndWaitForWithRetry(MainMenurepo.PDS_Main_Menu.MainMenuBar.MiscellaneousButtonInfo, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.SelfInfo);
            GeneralUtilities.ClickAndWaitForWithRetry(MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.AlertEvents.SelfInfo, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.AlertEvents.AlertEventQueueInfo);
            GeneralUtilities.ClickAndWaitForNotExistWithRetry(MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.AlertEvents.AlertEventQueueInfo, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.SelfInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Alert Event Queue");
            closeForm(Miscellaneousrepo.Alert_Event_Queue.WindowControls.CloseInfo);

            // alert events summary list
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Alert Event Summary List"));
            GeneralUtilities.ClickAndWaitForWithRetry(MainMenurepo.PDS_Main_Menu.MainMenuBar.MiscellaneousButtonInfo, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.SelfInfo);
            GeneralUtilities.ClickAndWaitForWithRetry(MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.AlertEvents.SelfInfo, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.AlertEvents.SummaryListInfo);
            GeneralUtilities.ClickAndWaitForNotExistWithRetry(MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.AlertEvents.SummaryListInfo, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.SelfInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Alert Events Summary List");
            closeForm(Miscellaneousrepo.Alert_Events_Summary_List.WindowControls.CloseInfo);

            // alert events summary list choice
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Alert Event Summary List Choice"));
            GeneralUtilities.ClickAndWaitForWithRetry(MainMenurepo.PDS_Main_Menu.MainMenuBar.MiscellaneousButtonInfo, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.SelfInfo);
            GeneralUtilities.ClickAndWaitForWithRetry(MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.AlertEvents.SelfInfo, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.AlertEvents.SummaryListChoiceInfo);
            GeneralUtilities.ClickAndWaitForNotExistWithRetry(MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.AlertEvents.SummaryListChoiceInfo, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.SelfInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Alert Events Summary List Choice");
            closeForm(Miscellaneousrepo.Alert_Events_Summary_List_Choice.WindowControls.CloseInfo);

            // weather service data
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Weather Service Data"));
            GeneralUtilities.ClickAndWaitForWithRetry(MainMenurepo.PDS_Main_Menu.MainMenuBar.MiscellaneousButtonInfo, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.SelfInfo);
            GeneralUtilities.ClickAndWaitForWithRetry(MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.Weather.SelfInfo, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.Weather.WeatherReportsFromServiceInfo);
            GeneralUtilities.ClickAndWaitForNotExistWithRetry(MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.Weather.WeatherReportsFromServiceInfo, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.SelfInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Weather Reports from Service");
            closeForm(Miscellaneousrepo.Weather_Reports_From_Service.WindowControls.CloseInfo);

            // weather summary list
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Weather Summary List"));
            GeneralUtilities.ClickAndWaitForWithRetry(MainMenurepo.PDS_Main_Menu.MainMenuBar.MiscellaneousButtonInfo, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.SelfInfo);
            GeneralUtilities.ClickAndWaitForWithRetry(MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.Weather.SelfInfo, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.Weather.SummaryListInfo);
            GeneralUtilities.ClickAndWaitForNotExistWithRetry(MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.Weather.SummaryListInfo, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.SelfInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Weather Summary List");
            closeForm(Miscellaneousrepo.Weather_Summary_List.WindowControls.CloseInfo);

            // weather summary list choice
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Weather Summary List Choice"));
            GeneralUtilities.ClickAndWaitForWithRetry(MainMenurepo.PDS_Main_Menu.MainMenuBar.MiscellaneousButtonInfo, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.SelfInfo);
            GeneralUtilities.ClickAndWaitForWithRetry(MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.Weather.SelfInfo, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.Weather.SummaryListChoiceInfo);
            GeneralUtilities.ClickAndWaitForNotExistWithRetry(MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.Weather.SummaryListChoiceInfo, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.SelfInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Weather Summary List Choice");
            closeForm(Miscellaneousrepo.Weather_Summary_List_Choice.WindowControls.CloseInfo);

            // tags summary list
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Tags Summary List"));
            GeneralUtilities.ClickAndWaitForWithRetry(MainMenurepo.PDS_Main_Menu.MainMenuBar.MiscellaneousButtonInfo, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.SelfInfo);
            GeneralUtilities.ClickAndWaitForWithRetry(MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.Tags.SelfInfo, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.Tags.SummaryListInfo);
            GeneralUtilities.ClickAndWaitForNotExistWithRetry(MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.Tags.SummaryListInfo, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.SelfInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Tags Summary List");
            closeForm(Miscellaneousrepo.Tags_Summary_List.WindowControls.CloseInfo);

            // tags summary list choice
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Tags Summary List Choice"));
            NS_Utility.NS_OpenForm_MainMenu(miscButton, miscMenu, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.Tags.SelfInfo, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.Tags.SummaryListChoiceInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Track Tag Summary List Choice");
            closeForm(Miscellaneousrepo.Tags_Summary_List_Choice.WindowControls.CloseInfo);

            // pending activity summary
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Pending Activity Summary"));
            NS_Utility.NS_OpenForm_MainMenu(miscButton, miscMenu, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.PendingActivitySummaryInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Pending Activity Summary");
            closeForm(Miscellaneousrepo.Pending_Activity_Summary.WindowControls.CloseInfo);

            // pending activity summary choice
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Pending Activity Summary Choice"));
            NS_Utility.NS_OpenForm_MainMenu(miscButton, miscMenu, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.PendingActivitySummaryChoiceInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Pending Activity Summary Choice");
            closeForm(Miscellaneousrepo.Pending_Activity_Summary_List_Choice.WindowControls.CloseInfo);

            // check sound
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Test Audible Alert"));
            NS_Utility.NS_OpenForm_MainMenu(miscButton, miscMenu, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.TestAudibleAlertInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Audible Alert Checkout");
            closeForm(Miscellaneousrepo.Audible_Alert_Checkout.WindowControls.CloseInfo);

            // helper operations
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Helper Operations"));
            NS_Utility.NS_OpenForm_MainMenu(miscButton, miscMenu, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.HelperOperationsInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Helper Operations");
            closeForm(Miscellaneousrepo.Helper_Operations.WindowControls.CloseInfo);

            // Dispatcher Messages
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Dispatcher Messages"));
            NS_Utility.NS_OpenForm_MainMenu(miscButton, miscMenu, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.DispatcherMessagesInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Dispatcher Messages");
            closeForm(Miscellaneousrepo.Dispatcher_Messages.WindowControls.CloseInfo);

            // unusual occurrences
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Unusual Occurrences"));
            NS_Utility.NS_OpenForm_MainMenu(miscButton, miscMenu, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.UnusualOccurencesInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Unusual Occurrences");
            closeForm(Miscellaneousrepo.Unusual_Occurences.WindowControls.CloseInfo);

            // dispatcher queries
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Dispatcher Queries"));
            NS_Utility.NS_OpenForm_MainMenu(miscButton, miscMenu, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.DispatcherQueriesInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Dispatcher Queries");
            closeForm(Miscellaneousrepo.Dispatcher_Queries.WindowControls.CloseInfo);

            // generate transfer report
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Generate Transfer Report"));
            NS_Utility.NS_OpenForm_MainMenu(miscButton, miscMenu, MainMenurepo.PDS_Main_Menu.MiscellaneousMenu.GenerateTransferReportRequestInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Generate Transfer Report");
            closeForm(Miscellaneousrepo.Generate_Transfer_Report.WindowControls.CloseInfo);

            // master shift schedule
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Master Shift Schedule"));
            NS_Utility.NS_OpenForm_MainMenu(assignmentsButton, assignmentsMenu, MainMenurepo.PDS_Main_Menu.AssignmentsMenu.MasterShiftScheduleInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Master Shift Schedule");
            closeForm(Assignmentsrepo.Master_Shift_Schedule.WindowControls.CloseInfo);

            // daily shift schedule
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Daily Shift Schedule"));
            NS_Utility.NS_OpenForm_MainMenu(assignmentsButton, assignmentsMenu, MainMenurepo.PDS_Main_Menu.AssignmentsMenu.DailyShiftScheduleInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Daily Shift Schedule");
            closeForm(Assignmentsrepo.Daily_Shift_Schedule.WindowControls.CloseInfo);

            // signal tech territories
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Signal Technician Territory Definition"));
            NS_Utility.NS_OpenForm_MainMenu(assignmentsButton, assignmentsMenu, MainMenurepo.PDS_Main_Menu.AssignmentsMenu.SignalTechTerritoriesInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Signal Technician Territory Definition");
            closeForm(Assignmentsrepo.Signal_Technician_Territory_Definition.WindowControls.CloseInfo);

            // supervisor territories
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Supervisor Dispatch Territory Definition"));
            NS_Utility.NS_OpenForm_MainMenu(assignmentsButton, assignmentsMenu, MainMenurepo.PDS_Main_Menu.AssignmentsMenu.SupervisorTerritoriesInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Supervisor Dispatch Territory Definition");
            closeForm(Assignmentsrepo.Supervisor_Dispatch_Territory_Definition.WindowControls.CloseInfo);

            // system access control
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "System Access Control"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.SystemAccessControlInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("System Access Control");
            closeForm(SystemConfigurationrepo.System_Access_Control.WindowControls.CloseInfo);

            // print fax configuration
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Print Fax Configuration"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.PrintFaxRecipientsInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Print/Fax Recipients");
            closeForm(SystemConfigurationrepo.Print_Fax_Recipients.WindowControls.CloseInfo);

            // manage user accounts
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Manage User Accounts"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.UserAccountsInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Manage User Accounts");
            closeForm(SystemConfigurationrepo.User_Accounts.WindowControls.CloseInfo);

            // alert events configuration
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Alert Events Configuration"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.AlertEventsConfigurationInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("AE Configuration");
            closeForm(SystemConfigurationrepo.Alert_Events_Configuration.WindowControls.CloseInfo);

            // manage workstation status
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Manage Workstation Status"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.ManageWorkstationStatusInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Manage Workstation Status");
            closeForm(SystemConfigurationrepo.Manage_Workstation_Status.WindowControls.CloseInfo);

            // movement planner status
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Movement Planner Status"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.MovementPlanningStatusInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Planning Status");
            closeForm(SystemConfigurationrepo.Movement_Planning_Status.WindowControls.CloseInfo);

            // delay parameters
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Configure Delays"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.DelayParametersInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Configure Delays");
            closeForm(SystemConfigurationrepo.Delay_Parameters.WindowControls.CloseInfo);

            // scac list 
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Configure SCAC List"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.ScacListInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Configure SCAC List");
            closeForm(SystemConfigurationrepo.SCAC_List.WindowControls.CloseInfo);

            // dra configuration
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "De Minimis Configuration Information"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.DeMinimisRoutingAreasInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("De Minimis Configuration Information");
            closeForm(SystemConfigurationrepo.De_Minimis_Routing_Areas.WindowControls.CloseInfo);

            // tracking parameters
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Configure Train Tracking"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.TrackingParametersInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Configure Train Tracking");
            closeForm(SystemConfigurationrepo.Tracking_Parameters.WindowControls.CloseInfo);

            // train sheet parameters
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Train Sheet Configurable Parameters"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.TrainSheetParametersInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Train Sheet Configurable Parameters");
            closeForm(SystemConfigurationrepo.Train_Sheet_Parameters.WindowControls.CloseInfo);

            // train default data
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Train Default Data"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.TrainDefaultDataInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Consist Defaults");
            closeForm(SystemConfigurationrepo.Train_Default_Data.WindowControls.CloseInfo);

            // track authority number range
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Configure Track Authority Number Range"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.TrackAuthorityNumberRangeInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Configure Track Authority Number Range");
            closeForm(SystemConfigurationrepo.Track_Authority_Number_Range.WindowControls.CloseInfo);

            // train clearance
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Configure Train Clearance Params"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.TrainClearanceInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Configure Train Clearance Params");
            closeForm(SystemConfigurationrepo.Train_Clearance.WindowControls.CloseInfo);

            // dispatcher transfer report
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Configure Dispatcher Transfer Report"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.DispatcherTransferReportInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Configure Dispatcher Transfer Report");
            closeForm(SystemConfigurationrepo.Dispatcher_Transfer_Report.WindowControls.CloseInfo);

            // bulletin items
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Bulletin Item Type Configuration"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.BulletinItemsInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Bulletin Item Type Configuration");
            closeForm(SystemConfigurationrepo.Bulletin_Item_Type_Configuration.WindowControls.CloseInfo);

            // assign function keys
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Assign Function Keys"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.AssignFunctionKeysInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Assign Function Keys");
            closeForm(SystemConfigurationrepo.Assign_Function_Keys.WindowControls.CloseInfo);

            // apply topology change
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Apply Topology Change"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.ApplyTopologyChangeInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Apply Topology Change");
            closeForm(SystemConfigurationrepo.Apply_Topology_Change.WindowControls.CloseInfo);

            // weather configuration
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Weather Configuration"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.WeatherConfigurationInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Weather Configuration");
            closeForm(SystemConfigurationrepo.Weather_Configuration.WindowControls.CloseInfo);

            // ptc configuration
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Positive Train Control"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.PositiveTrainControlInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Positive Train Control");
            closeForm(SystemConfigurationrepo.Positive_Train_Control_Configuration.WindowControls.CloseInfo);            

            // pending activity summary
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Pending Activity Summary"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.PendingActivitySummaryInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Pending Activity Summary");
            closeForm(SystemConfigurationrepo.Pending_Activity_Summary.WindowControls.CloseInfo);

            // movement planner configuration
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Movement Planner Configuration"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.MovementPlannerConfigurationInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Movement Planner Configuration");
            closeForm(SystemConfigurationrepo.Movement_Planner_Configuration.WindowControls.CloseInfo);

            // tss configure
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Configure Fixed/Group Fields"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.TSSConfigureInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Configure Fixed/Group Fields");
            closeForm(SystemConfigurationrepo.TSS_Configure.WindowControls.CloseInfo);

            // pas configure
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Configure PAS Fixed/Group Fields"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.PASConfigureInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Configure PAS Fixed/Group Fields");
            closeForm(SystemConfigurationrepo.PAS_Configure.WindowControls.CloseInfo);

            // ctc parameters
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Configure CTC Parameters"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.CTCParametersInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Configure CTC Parameters");
            closeForm(SystemConfigurationrepo.CTC_Parameters.WindowControls.CloseInfo);

            // train clearance route configuration
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Train Clearance Route Configuration"));
            NS_Utility.NS_OpenForm_MainMenu(sysConfigButton, sysConfigMenu, MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.TrainClearanceRouteConfigurationInfo);
            NS_Utility.NS_ValidateFormExists_FormTitle("Train Clearance Route Configuration");
            closeForm(SystemConfigurationrepo.Train_Clearance_Route_Configuration.WindowControls.CloseInfo);

            // control request list
            Report.Info("Form Testing", string.Format("Testing '{0}' Form", "Control Request List"));
            NS_Utility.NS_OpenForm_MainMenu(
                MainMenurepo.PDS_Main_Menu.MainMenuBar.WindowButtonInfo,
                MainMenurepo.PDS_Main_Menu.WindowMenu.SelfInfo,
                MainMenurepo.PDS_Main_Menu.WindowMenu.ControlRequestListInfo
            );
            NS_Utility.NS_ValidateFormExists_FormTitle("Control Request List");
            closeForm(TerritoryTransferrepo.Control_Request_List.WindowControls.CloseInfo);
        }

    }
}
