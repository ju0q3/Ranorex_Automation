///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace PDS_NS.Recording_Modules.SpecialCaseRecordings
{
    public partial class TestPTCConfigurationMenu
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }
        
        public static global::PDS_NS.MainMenu_Repo MainMenurepo = global::PDS_NS.MainMenu_Repo.Instance;
        public static global::PDS_NS.SystemConfiguration_Repo SystemConfigurationrepo = global::PDS_NS.SystemConfiguration_Repo.Instance;

        /// <summary>
    	/// One off recording for opening the PTC Configuration menu and changing a setting to ensure repeated error free action
    	/// </summary>
    	/// <param name="Iterations">Input:Iterations</param>
        public void PTCConfigTest(int Iterations)
        {
        	int retries = 0;
        	for (int i=0; i<Iterations; i++) {
        		Ranorex.Report.Info("Iteration {"+(i+1).ToString()+"}.");
        		//Open PTC Configuration Form
        		MainMenurepo.PDS_Main_Menu.MainMenuBar.SystemConfigurationButton.Click();
        		while(!MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.SelfInfo.Exists(0)) {
        			Ranorex.Delay.Milliseconds(500);
        			MainMenurepo.PDS_Main_Menu.MainMenuBar.SystemConfigurationButton.Click();
        		}
        		MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.PositiveTrainControl.Click();
        		retries = 0;
        		while(MainMenurepo.PDS_Main_Menu.SystemConfigurationMenu.SelfInfo.Exists(0) && retries < 6) {
        			Ranorex.Delay.Milliseconds(500);
        			retries++;
        		}
        		//Need logic here to check for broken prompt
        		if (SystemConfigurationrepo.Error_Creating_Positive_Train_Control_Menu.SelfInfo.Exists(0)) {
        			Ranorex.Report.Failure("Error Creating PTC Configuration form popup appeared. Closing and moving to next iteration");
        			SystemConfigurationrepo.Error_Creating_Positive_Train_Control_Menu.OkButton.Click();
        			continue;
        		}
        		
        		if (!SystemConfigurationrepo.Positive_Train_Control_Configuration.PositiveTrainControlConfigurationTabs.DistrictConfigurationTab.GetAttributeValue<bool>("Selected")) {
        			SystemConfigurationrepo.Positive_Train_Control_Configuration.PositiveTrainControlConfigurationTabs.DistrictConfigurationTab.Click();
        		}
        		SystemConfigurationrepo.DistrictConfigurationIndex = "0";
        		

        		if (SystemConfigurationrepo.Positive_Train_Control_Configuration.DistrictConfiguration.DistrictConfigurationTable.DistrictConfigurationRowByIndex.PTCMode.GetAttributeValue<string>("Text") == "3") {
        			SystemConfigurationrepo.Positive_Train_Control_Configuration.DistrictConfiguration.DistrictConfigurationTable.DistrictConfigurationRowByIndex.PTCMode.Click("10;9");
        			
        		} else {
        			SystemConfigurationrepo.Positive_Train_Control_Configuration.DistrictConfiguration.DistrictConfigurationTable.DistrictConfigurationRowByIndex.PTCMode.Click("194;9");
        			if (SystemConfigurationrepo.Positive_Train_Control_Configuration.DistrictConfiguration.DistrictConfigurationTable.DistrictConfigurationRowByIndex.EnablePTCMessages.GetAttributeValue<string>("Text") == "false") {
        				SystemConfigurationrepo.Positive_Train_Control_Configuration.DistrictConfiguration.DistrictConfigurationTable.DistrictConfigurationRowByIndex.EnablePTCMessages.Click();
        			}
				}
        		SystemConfigurationrepo.Positive_Train_Control_Configuration.ApplyButton.Click();
        		retries = 0;
        		while (SystemConfigurationrepo.Positive_Train_Control_Configuration.ApplyButton.GetAttributeValue<bool>("Enabled") && retries < 4) {
        			Ranorex.Delay.Milliseconds(500);
        			SystemConfigurationrepo.Positive_Train_Control_Configuration.ApplyButton.Click();
        			retries++;
        		}
        		if (SystemConfigurationrepo.Positive_Train_Control_Configuration.ApplyButton.GetAttributeValue<bool>("Enabled")) {
        			Ranorex.Report.Failure("Apply Button remains enabled in PTC Form. Failed to apply changes");
        		} else {
        			Ranorex.Report.Success("PTC Form worked as intended");
        		}
        		
        		SystemConfigurationrepo.Positive_Train_Control_Configuration.CancelButton.Click();
        		retries = 0;
        		while(SystemConfigurationrepo.Positive_Train_Control_Configuration.SelfInfo.Exists(0) && retries < 6) {
        			Ranorex.Delay.Milliseconds(500);
        			SystemConfigurationrepo.Positive_Train_Control_Configuration.CancelButton.Click();
        			retries++;
        		}
        		
        	}
        }

    }
}
