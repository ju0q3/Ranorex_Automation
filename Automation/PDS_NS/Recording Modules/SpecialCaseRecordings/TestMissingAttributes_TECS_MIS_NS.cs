///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.SpecialCaseRecordings
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The TestMissingAttributes_TECS_MIS_NS recording.
    /// </summary>
    [TestModule("6e40e9ed-4aad-45ee-b687-7e7090b70af6", ModuleType.Recording, 1)]
    public partial class TestMissingAttributes_TECS_MIS_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static TestMissingAttributes_TECS_MIS_NS instance = new TestMissingAttributes_TECS_MIS_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public TestMissingAttributes_TECS_MIS_NS()
        {
            trainSeed = "";
            consistReportingLocation = "";
            consistReportingPassCount = "";
            consistReportingSource = "";
            numberOfLoads = "";
            numberOfEmpties = "";
            trailingTonnage = "";
            trainLength = "";
            axles = "";
            operativeBrakes = "";
            totalBrakingForce = "";
            maxCarWeights = "";
            maxCarHeights = "";
            maxCarWidths = "";
            hazmatConstraints = "";
            assignedDivision = "";
            helperCrewPoolID = "";
            engineReportingSource = "";
            engineReportingLocation = "";
            engineReportingPassCount = "";
            defaultDataApplied = "";
            purpose = "";
            engines = "";
            equipmentCode = "";
            origin = "";
            destination = "";
            initial = "";
            number = "";
            workingStatus = "";
            engineScacMissing = "False";
            consistScacMissing = "False";
            eotScacMissing = "False";
            engineSymbolMissing = "False";
            consistSymbolMissing = "False";
            eotSymbolMissing = "False";
            engineDateMissing = "False";
            consistDateMissing = "False";
            eotDateMissing = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static TestMissingAttributes_TECS_MIS_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _trainSeed;

        /// <summary>
        /// Gets or sets the value of variable trainSeed.
        /// </summary>
        [TestVariable("7d43d3c4-bd9d-495b-8d85-a0200902ddec")]
        public string trainSeed
        {
            get { return _trainSeed; }
            set { _trainSeed = value; }
        }

        string _consistReportingLocation;

        /// <summary>
        /// Gets or sets the value of variable consistReportingLocation.
        /// </summary>
        [TestVariable("1ef8c762-65a3-41a8-b8a4-25e61f7026a4")]
        public string consistReportingLocation
        {
            get { return _consistReportingLocation; }
            set { _consistReportingLocation = value; }
        }

        string _consistReportingPassCount;

        /// <summary>
        /// Gets or sets the value of variable consistReportingPassCount.
        /// </summary>
        [TestVariable("a1896671-23b2-41a8-a1c0-b70543446485")]
        public string consistReportingPassCount
        {
            get { return _consistReportingPassCount; }
            set { _consistReportingPassCount = value; }
        }

        string _consistReportingSource;

        /// <summary>
        /// Gets or sets the value of variable consistReportingSource.
        /// </summary>
        [TestVariable("b5609a72-acdf-46db-8fa2-8382126a35bb")]
        public string consistReportingSource
        {
            get { return _consistReportingSource; }
            set { _consistReportingSource = value; }
        }

        string _numberOfLoads;

        /// <summary>
        /// Gets or sets the value of variable numberOfLoads.
        /// </summary>
        [TestVariable("b5dbbb8c-de53-4bb6-ba0f-9fe0c37b0e8f")]
        public string numberOfLoads
        {
            get { return _numberOfLoads; }
            set { _numberOfLoads = value; }
        }

        string _numberOfEmpties;

        /// <summary>
        /// Gets or sets the value of variable numberOfEmpties.
        /// </summary>
        [TestVariable("b5268596-b0a7-4b09-9454-8bb5d91261ab")]
        public string numberOfEmpties
        {
            get { return _numberOfEmpties; }
            set { _numberOfEmpties = value; }
        }

        string _trailingTonnage;

        /// <summary>
        /// Gets or sets the value of variable trailingTonnage.
        /// </summary>
        [TestVariable("0047c9eb-3481-4dcf-ac57-67a03edeb523")]
        public string trailingTonnage
        {
            get { return _trailingTonnage; }
            set { _trailingTonnage = value; }
        }

        string _trainLength;

        /// <summary>
        /// Gets or sets the value of variable trainLength.
        /// </summary>
        [TestVariable("53aa21ba-a103-4721-98f5-b01e9c92ea36")]
        public string trainLength
        {
            get { return _trainLength; }
            set { _trainLength = value; }
        }

        string _axles;

        /// <summary>
        /// Gets or sets the value of variable axles.
        /// </summary>
        [TestVariable("e6786fd5-5b13-48c3-b0d5-89526808f3ea")]
        public string axles
        {
            get { return _axles; }
            set { _axles = value; }
        }

        string _operativeBrakes;

        /// <summary>
        /// Gets or sets the value of variable operativeBrakes.
        /// </summary>
        [TestVariable("5ff330a0-c0c6-491a-a083-98cf03048ace")]
        public string operativeBrakes
        {
            get { return _operativeBrakes; }
            set { _operativeBrakes = value; }
        }

        string _totalBrakingForce;

        /// <summary>
        /// Gets or sets the value of variable totalBrakingForce.
        /// </summary>
        [TestVariable("8b629e6d-22f1-4933-9da6-1041c96cacae")]
        public string totalBrakingForce
        {
            get { return _totalBrakingForce; }
            set { _totalBrakingForce = value; }
        }

        string _maxCarWeights;

        /// <summary>
        /// Gets or sets the value of variable maxCarWeights.
        /// </summary>
        [TestVariable("8b9a1813-32db-4c1c-b2af-15d04e085192")]
        public string maxCarWeights
        {
            get { return _maxCarWeights; }
            set { _maxCarWeights = value; }
        }

        string _maxCarHeights;

        /// <summary>
        /// Gets or sets the value of variable maxCarHeights.
        /// </summary>
        [TestVariable("cb19237b-7f39-4b44-8083-bbf548223bb6")]
        public string maxCarHeights
        {
            get { return _maxCarHeights; }
            set { _maxCarHeights = value; }
        }

        string _maxCarWidths;

        /// <summary>
        /// Gets or sets the value of variable maxCarWidths.
        /// </summary>
        [TestVariable("05b6824d-9bac-4c1c-996b-33f08e646542")]
        public string maxCarWidths
        {
            get { return _maxCarWidths; }
            set { _maxCarWidths = value; }
        }

        string _hazmatConstraints;

        /// <summary>
        /// Gets or sets the value of variable hazmatConstraints.
        /// </summary>
        [TestVariable("3855d6f6-c1db-4255-ad90-ed03b09ffd15")]
        public string hazmatConstraints
        {
            get { return _hazmatConstraints; }
            set { _hazmatConstraints = value; }
        }

        string _assignedDivision;

        /// <summary>
        /// Gets or sets the value of variable assignedDivision.
        /// </summary>
        [TestVariable("d0169bac-aa50-4216-a5e3-3017aea9cd40")]
        public string assignedDivision
        {
            get { return _assignedDivision; }
            set { _assignedDivision = value; }
        }

        string _helperCrewPoolID;

        /// <summary>
        /// Gets or sets the value of variable helperCrewPoolID.
        /// </summary>
        [TestVariable("81c28125-49bf-486f-b17a-af270dd78eb3")]
        public string helperCrewPoolID
        {
            get { return _helperCrewPoolID; }
            set { _helperCrewPoolID = value; }
        }

        string _engineReportingSource;

        /// <summary>
        /// Gets or sets the value of variable engineReportingSource.
        /// </summary>
        [TestVariable("7ac1d111-a5e2-4d3c-88fd-0f9792e7d480")]
        public string engineReportingSource
        {
            get { return _engineReportingSource; }
            set { _engineReportingSource = value; }
        }

        string _engineReportingLocation;

        /// <summary>
        /// Gets or sets the value of variable engineReportingLocation.
        /// </summary>
        [TestVariable("975c22a0-7e8f-47d6-8254-e9997f4a226d")]
        public string engineReportingLocation
        {
            get { return _engineReportingLocation; }
            set { _engineReportingLocation = value; }
        }

        string _engineReportingPassCount;

        /// <summary>
        /// Gets or sets the value of variable engineReportingPassCount.
        /// </summary>
        [TestVariable("d2a81977-00d4-4a2d-b95c-e1dc3ffc86d2")]
        public string engineReportingPassCount
        {
            get { return _engineReportingPassCount; }
            set { _engineReportingPassCount = value; }
        }

        string _defaultDataApplied;

        /// <summary>
        /// Gets or sets the value of variable defaultDataApplied.
        /// </summary>
        [TestVariable("0ac0373b-da80-44c0-be7b-6108bdee5566")]
        public string defaultDataApplied
        {
            get { return _defaultDataApplied; }
            set { _defaultDataApplied = value; }
        }

        string _purpose;

        /// <summary>
        /// Gets or sets the value of variable purpose.
        /// </summary>
        [TestVariable("e0661041-7425-48a6-9f31-7daa5fb5a725")]
        public string purpose
        {
            get { return _purpose; }
            set { _purpose = value; }
        }

        string _engines;

        /// <summary>
        /// Gets or sets the value of variable engines.
        /// </summary>
        [TestVariable("f3b4f806-a1e2-4041-a948-13920fde3d7c")]
        public string engines
        {
            get { return _engines; }
            set { _engines = value; }
        }

        string _equipmentCode;

        /// <summary>
        /// Gets or sets the value of variable equipmentCode.
        /// </summary>
        [TestVariable("9aaf45c4-327c-4bf5-886c-9623d41c8021")]
        public string equipmentCode
        {
            get { return _equipmentCode; }
            set { _equipmentCode = value; }
        }

        string _origin;

        /// <summary>
        /// Gets or sets the value of variable origin.
        /// </summary>
        [TestVariable("04890de0-0405-474b-8adc-63fc4bea97e4")]
        public string origin
        {
            get { return _origin; }
            set { _origin = value; }
        }

        string _destination;

        /// <summary>
        /// Gets or sets the value of variable destination.
        /// </summary>
        [TestVariable("fe96349e-5915-4f93-aa99-0af768f5fe12")]
        public string destination
        {
            get { return _destination; }
            set { _destination = value; }
        }

        string _initial;

        /// <summary>
        /// Gets or sets the value of variable initial.
        /// </summary>
        [TestVariable("4c5a79e8-8505-4a58-859b-e20305710359")]
        public string initial
        {
            get { return _initial; }
            set { _initial = value; }
        }

        string _number;

        /// <summary>
        /// Gets or sets the value of variable number.
        /// </summary>
        [TestVariable("bd86cba1-bbf6-4945-98fd-d80a388a748d")]
        public string number
        {
            get { return _number; }
            set { _number = value; }
        }

        string _workingStatus;

        /// <summary>
        /// Gets or sets the value of variable workingStatus.
        /// </summary>
        [TestVariable("21cb8055-b180-4c12-a155-cf3a37c9db54")]
        public string workingStatus
        {
            get { return _workingStatus; }
            set { _workingStatus = value; }
        }

        string _engineScacMissing;

        /// <summary>
        /// Gets or sets the value of variable engineScacMissing.
        /// </summary>
        [TestVariable("576d9b11-8e7b-418a-8998-a8e59f12f875")]
        public string engineScacMissing
        {
            get { return _engineScacMissing; }
            set { _engineScacMissing = value; }
        }

        string _consistScacMissing;

        /// <summary>
        /// Gets or sets the value of variable consistScacMissing.
        /// </summary>
        [TestVariable("92787cac-74db-44f9-92f8-6da9bb2caf6e")]
        public string consistScacMissing
        {
            get { return _consistScacMissing; }
            set { _consistScacMissing = value; }
        }

        string _eotScacMissing;

        /// <summary>
        /// Gets or sets the value of variable eotScacMissing.
        /// </summary>
        [TestVariable("9764a077-d605-4e7c-b5f4-da6e772ae00d")]
        public string eotScacMissing
        {
            get { return _eotScacMissing; }
            set { _eotScacMissing = value; }
        }

        string _engineSymbolMissing;

        /// <summary>
        /// Gets or sets the value of variable engineSymbolMissing.
        /// </summary>
        [TestVariable("6a8a3664-1d6e-4516-9654-34f614a2fe87")]
        public string engineSymbolMissing
        {
            get { return _engineSymbolMissing; }
            set { _engineSymbolMissing = value; }
        }

        string _consistSymbolMissing;

        /// <summary>
        /// Gets or sets the value of variable consistSymbolMissing.
        /// </summary>
        [TestVariable("ce842fa8-e962-42ad-aaba-ef9c9418e60c")]
        public string consistSymbolMissing
        {
            get { return _consistSymbolMissing; }
            set { _consistSymbolMissing = value; }
        }

        string _eotSymbolMissing;

        /// <summary>
        /// Gets or sets the value of variable eotSymbolMissing.
        /// </summary>
        [TestVariable("0fafa7a5-2033-4ae6-9d57-f9ad2271f00e")]
        public string eotSymbolMissing
        {
            get { return _eotSymbolMissing; }
            set { _eotSymbolMissing = value; }
        }

        string _engineDateMissing;

        /// <summary>
        /// Gets or sets the value of variable engineDateMissing.
        /// </summary>
        [TestVariable("dce036ca-f504-4a1c-b844-50fe2e3e0499")]
        public string engineDateMissing
        {
            get { return _engineDateMissing; }
            set { _engineDateMissing = value; }
        }

        string _consistDateMissing;

        /// <summary>
        /// Gets or sets the value of variable consistDateMissing.
        /// </summary>
        [TestVariable("949cdb46-adb3-4775-8269-60aaa678abc7")]
        public string consistDateMissing
        {
            get { return _consistDateMissing; }
            set { _consistDateMissing = value; }
        }

        string _eotDateMissing;

        /// <summary>
        /// Gets or sets the value of variable eotDateMissing.
        /// </summary>
        [TestVariable("9629c69e-8752-405c-b7fe-2a12f043e192")]
        public string eotDateMissing
        {
            get { return _eotDateMissing; }
            set { _eotDateMissing = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            testTrainEngineConsistSummary(trainSeed, consistReportingLocation, consistReportingPassCount, consistReportingSource, numberOfLoads, numberOfEmpties, trailingTonnage, trainLength, axles, operativeBrakes, totalBrakingForce, maxCarWeights, maxCarHeights, maxCarWidths, hazmatConstraints, assignedDivision, helperCrewPoolID, engineReportingSource, engineReportingLocation, engineReportingPassCount, defaultDataApplied, purpose, engines, equipmentCode, origin, destination, initial, number, workingStatus, ValueConverter.ArgumentFromString<bool>("engineScacMissing", engineScacMissing), ValueConverter.ArgumentFromString<bool>("consistScacMissing", consistScacMissing), ValueConverter.ArgumentFromString<bool>("eotScacMissing", eotScacMissing), ValueConverter.ArgumentFromString<bool>("engineSymbolMissing", engineSymbolMissing), ValueConverter.ArgumentFromString<bool>("consistSymbolMissing", consistSymbolMissing), ValueConverter.ArgumentFromString<bool>("eotSymbolMissing", eotSymbolMissing), ValueConverter.ArgumentFromString<bool>("engineDateMissing", engineDateMissing), ValueConverter.ArgumentFromString<bool>("consistDateMissing", consistDateMissing), ValueConverter.ArgumentFromString<bool>("eotDateMissing", eotDateMissing));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
