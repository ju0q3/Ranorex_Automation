///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Bulletins
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SetUntilDateAndTimezone_BulletinInputRelayForm_NS recording.
    /// </summary>
    [TestModule("50f5c17c-e4f5-4f18-b595-dcffec1e765a", ModuleType.Recording, 1)]
    public partial class SetUntilDateAndTimezone_BulletinInputRelayForm_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static SetUntilDateAndTimezone_BulletinInputRelayForm_NS instance = new SetUntilDateAndTimezone_BulletinInputRelayForm_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SetUntilDateAndTimezone_BulletinInputRelayForm_NS()
        {
            inputTimeZone = "";
            untTimeDifference = "";
            expFeedback = "";
            closeBulletinForm = "False";
            bulletinSeed = "";
            bulletinType = "";
            district = "";
            milepost1 = "";
            milepost2 = "";
            tracks = "";
            maximumSpeed = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SetUntilDateAndTimezone_BulletinInputRelayForm_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _inputTimeZone;

        /// <summary>
        /// Gets or sets the value of variable inputTimeZone.
        /// </summary>
        [TestVariable("13bdff0e-51d6-44fd-9ad7-8280e6631528")]
        public string inputTimeZone
        {
            get { return _inputTimeZone; }
            set { _inputTimeZone = value; }
        }

        string _untTimeDifference;

        /// <summary>
        /// Gets or sets the value of variable untTimeDifference.
        /// </summary>
        [TestVariable("32afc8cc-ee98-4954-b593-734c1e89f9b2")]
        public string untTimeDifference
        {
            get { return _untTimeDifference; }
            set { _untTimeDifference = value; }
        }

        string _expFeedback;

        /// <summary>
        /// Gets or sets the value of variable expFeedback.
        /// </summary>
        [TestVariable("ca059f66-397b-4cd8-84ca-e92d44de5131")]
        public string expFeedback
        {
            get { return _expFeedback; }
            set { _expFeedback = value; }
        }

        string _closeBulletinForm;

        /// <summary>
        /// Gets or sets the value of variable closeBulletinForm.
        /// </summary>
        [TestVariable("992109ce-4d2e-4eab-bdd3-4c9f8e2a8358")]
        public string closeBulletinForm
        {
            get { return _closeBulletinForm; }
            set { _closeBulletinForm = value; }
        }

        string _bulletinSeed;

        /// <summary>
        /// Gets or sets the value of variable bulletinSeed.
        /// </summary>
        [TestVariable("239d67d1-d810-4c83-beab-f501e53b533d")]
        public string bulletinSeed
        {
            get { return _bulletinSeed; }
            set { _bulletinSeed = value; }
        }

        string _bulletinType;

        /// <summary>
        /// Gets or sets the value of variable bulletinType.
        /// </summary>
        [TestVariable("3e30b538-efbc-4191-afde-ae1367bf2da0")]
        public string bulletinType
        {
            get { return _bulletinType; }
            set { _bulletinType = value; }
        }

        string _district;

        /// <summary>
        /// Gets or sets the value of variable district.
        /// </summary>
        [TestVariable("f96ef891-c3ea-4659-b316-fdb9fd6dfd79")]
        public string district
        {
            get { return _district; }
            set { _district = value; }
        }

        string _milepost1;

        /// <summary>
        /// Gets or sets the value of variable milepost1.
        /// </summary>
        [TestVariable("dbb900fa-c372-4c07-a0cb-2d1c8e105eef")]
        public string milepost1
        {
            get { return _milepost1; }
            set { _milepost1 = value; }
        }

        string _milepost2;

        /// <summary>
        /// Gets or sets the value of variable milepost2.
        /// </summary>
        [TestVariable("492f5b49-ed2e-4b38-b131-53df12b695c4")]
        public string milepost2
        {
            get { return _milepost2; }
            set { _milepost2 = value; }
        }

        string _tracks;

        /// <summary>
        /// Gets or sets the value of variable tracks.
        /// </summary>
        [TestVariable("557cfa7c-3059-497a-985e-012b3cadbc3b")]
        public string tracks
        {
            get { return _tracks; }
            set { _tracks = value; }
        }

        string _maximumSpeed;

        /// <summary>
        /// Gets or sets the value of variable maximumSpeed.
        /// </summary>
        [TestVariable("89457677-8d79-486c-8eb8-31b019616394")]
        public string maximumSpeed
        {
            get { return _maximumSpeed; }
            set { _maximumSpeed = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Bulletin.NS_SetUntilDateAndTimezone_BulletinInputForm(inputTimeZone, untTimeDifference, expFeedback, bulletinSeed, bulletinType, district, milepost1, milepost2, tracks, maximumSpeed, ValueConverter.ArgumentFromString<bool>("closeBulletinForm", closeBulletinForm));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
