///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Bulletins
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SetEffectiveDateAndTimezone_BulletinInputForm_NS recording.
    /// </summary>
    [TestModule("3f08b088-d36c-4582-adfa-eba309e669ac", ModuleType.Recording, 1)]
    public partial class SetEffectiveDateAndTimezone_BulletinInputForm_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static SetEffectiveDateAndTimezone_BulletinInputForm_NS instance = new SetEffectiveDateAndTimezone_BulletinInputForm_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SetEffectiveDateAndTimezone_BulletinInputForm_NS()
        {
            inputTimeZone = "";
            expFeedback = "";
            closeBulletinForm = "False";
            effTimeDifference = "";
            bulletinSeed = "";
            bulletinType = "";
            district = "";
            milepost1 = "";
            milepost2 = "";
            tracks = "";
            maximumSpeed = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SetEffectiveDateAndTimezone_BulletinInputForm_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _inputTimeZone;

        /// <summary>
        /// Gets or sets the value of variable inputTimeZone.
        /// </summary>
        [TestVariable("c21cc12d-bb8e-406f-913d-d82222a6707c")]
        public string inputTimeZone
        {
            get { return _inputTimeZone; }
            set { _inputTimeZone = value; }
        }

        string _expFeedback;

        /// <summary>
        /// Gets or sets the value of variable expFeedback.
        /// </summary>
        [TestVariable("b3f7a895-c572-42d2-bb2e-8a46228c24d7")]
        public string expFeedback
        {
            get { return _expFeedback; }
            set { _expFeedback = value; }
        }

        string _closeBulletinForm;

        /// <summary>
        /// Gets or sets the value of variable closeBulletinForm.
        /// </summary>
        [TestVariable("8371b820-d7f8-4747-a5c9-af7e5cd0a200")]
        public string closeBulletinForm
        {
            get { return _closeBulletinForm; }
            set { _closeBulletinForm = value; }
        }

        string _effTimeDifference;

        /// <summary>
        /// Gets or sets the value of variable effTimeDifference.
        /// </summary>
        [TestVariable("af19c517-568c-4aaf-86a6-92f05d4ba8c8")]
        public string effTimeDifference
        {
            get { return _effTimeDifference; }
            set { _effTimeDifference = value; }
        }

        string _bulletinSeed;

        /// <summary>
        /// Gets or sets the value of variable bulletinSeed.
        /// </summary>
        [TestVariable("d3149106-4f8b-4569-8eb7-821ac32fd535")]
        public string bulletinSeed
        {
            get { return _bulletinSeed; }
            set { _bulletinSeed = value; }
        }

        string _bulletinType;

        /// <summary>
        /// Gets or sets the value of variable bulletinType.
        /// </summary>
        [TestVariable("8fece9a3-c0ce-460e-8229-b60e5796f28d")]
        public string bulletinType
        {
            get { return _bulletinType; }
            set { _bulletinType = value; }
        }

        string _district;

        /// <summary>
        /// Gets or sets the value of variable district.
        /// </summary>
        [TestVariable("e07f91f8-649b-487b-87aa-954c2b09cdb8")]
        public string district
        {
            get { return _district; }
            set { _district = value; }
        }

        string _milepost1;

        /// <summary>
        /// Gets or sets the value of variable milepost1.
        /// </summary>
        [TestVariable("f518d0e1-cd22-417e-98ab-383d7056ccd4")]
        public string milepost1
        {
            get { return _milepost1; }
            set { _milepost1 = value; }
        }

        string _milepost2;

        /// <summary>
        /// Gets or sets the value of variable milepost2.
        /// </summary>
        [TestVariable("896c3867-427e-4d1f-b44c-e97131bcb360")]
        public string milepost2
        {
            get { return _milepost2; }
            set { _milepost2 = value; }
        }

        string _tracks;

        /// <summary>
        /// Gets or sets the value of variable tracks.
        /// </summary>
        [TestVariable("431a398e-175c-456e-b977-e00d6a59d7e1")]
        public string tracks
        {
            get { return _tracks; }
            set { _tracks = value; }
        }

        string _maximumSpeed;

        /// <summary>
        /// Gets or sets the value of variable maximumSpeed.
        /// </summary>
        [TestVariable("211f7867-01a2-4830-88f2-71073d0181a0")]
        public string maximumSpeed
        {
            get { return _maximumSpeed; }
            set { _maximumSpeed = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Bulletin.NS_SetEffectiveDateAndTimezone_BulletinInputForm(inputTimeZone, effTimeDifference, expFeedback, bulletinSeed, bulletinType, district, milepost1, milepost2, tracks, maximumSpeed, ValueConverter.ArgumentFromString<bool>("closeBulletinForm", closeBulletinForm));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
