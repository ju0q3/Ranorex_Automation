///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Bulletins.Input
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The InputExcessiveDimensionNoticeBulletin recording.
    /// </summary>
    [TestModule("52b6a16a-f13f-48a0-9c84-2cc9e6888454", ModuleType.Recording, 1)]
    public partial class InputExcessiveDimensionNoticeBulletin : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static InputExcessiveDimensionNoticeBulletin instance = new InputExcessiveDimensionNoticeBulletin();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InputExcessiveDimensionNoticeBulletin()
        {
            district = "";
            trainSeed = "";
            milepost1 = "";
            milepost2 = "";
            heightFeet = "";
            heightInches = "";
            widthFeet = "";
            widthInches = "";
            weight = "";
            tlcFileNumber = "";
            effectiveTimeDifference = "";
            untilTimeDifference = "";
            expectedFeedback = "";
            bulletinSeed = "";
            pressComplete = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InputExcessiveDimensionNoticeBulletin Instance
        {
            get { return instance; }
        }

#region Variables

        string _district;

        /// <summary>
        /// Gets or sets the value of variable district.
        /// </summary>
        [TestVariable("cf1536ca-09f3-4859-bb0f-ba2c6e6f9a7d")]
        public string district
        {
            get { return _district; }
            set { _district = value; }
        }

        string _trainSeed;

        /// <summary>
        /// Gets or sets the value of variable trainSeed.
        /// </summary>
        [TestVariable("1ba7877a-b235-4b56-88a0-b794056ca0b3")]
        public string trainSeed
        {
            get { return _trainSeed; }
            set { _trainSeed = value; }
        }

        string _milepost1;

        /// <summary>
        /// Gets or sets the value of variable milepost1.
        /// </summary>
        [TestVariable("fc81fa78-a09b-4608-8907-5db922cea9c1")]
        public string milepost1
        {
            get { return _milepost1; }
            set { _milepost1 = value; }
        }

        string _milepost2;

        /// <summary>
        /// Gets or sets the value of variable milepost2.
        /// </summary>
        [TestVariable("e047a48c-60bb-4cba-8b2e-c3ea3b266618")]
        public string milepost2
        {
            get { return _milepost2; }
            set { _milepost2 = value; }
        }

        string _heightFeet;

        /// <summary>
        /// Gets or sets the value of variable heightFeet.
        /// </summary>
        [TestVariable("7015c24b-faa7-4544-bdf4-0f322091342f")]
        public string heightFeet
        {
            get { return _heightFeet; }
            set { _heightFeet = value; }
        }

        string _heightInches;

        /// <summary>
        /// Gets or sets the value of variable heightInches.
        /// </summary>
        [TestVariable("257feb92-5eee-43e8-a3a4-452140e94fa6")]
        public string heightInches
        {
            get { return _heightInches; }
            set { _heightInches = value; }
        }

        string _widthFeet;

        /// <summary>
        /// Gets or sets the value of variable widthFeet.
        /// </summary>
        [TestVariable("8eb6706f-0f6d-4a78-8dfd-ea31de6850a7")]
        public string widthFeet
        {
            get { return _widthFeet; }
            set { _widthFeet = value; }
        }

        string _widthInches;

        /// <summary>
        /// Gets or sets the value of variable widthInches.
        /// </summary>
        [TestVariable("cfd98700-9037-4124-8bfa-024d918e04a8")]
        public string widthInches
        {
            get { return _widthInches; }
            set { _widthInches = value; }
        }

        string _weight;

        /// <summary>
        /// Gets or sets the value of variable weight.
        /// </summary>
        [TestVariable("18f3dc14-4dbd-4154-92c8-f2dfe7626b54")]
        public string weight
        {
            get { return _weight; }
            set { _weight = value; }
        }

        string _tlcFileNumber;

        /// <summary>
        /// Gets or sets the value of variable tlcFileNumber.
        /// </summary>
        [TestVariable("57bd700e-8541-4fbc-8987-4ea49dbf0427")]
        public string tlcFileNumber
        {
            get { return _tlcFileNumber; }
            set { _tlcFileNumber = value; }
        }

        string _effectiveTimeDifference;

        /// <summary>
        /// Gets or sets the value of variable effectiveTimeDifference.
        /// </summary>
        [TestVariable("9bdfdf3d-eb2d-4b94-b527-dc02190182ec")]
        public string effectiveTimeDifference
        {
            get { return _effectiveTimeDifference; }
            set { _effectiveTimeDifference = value; }
        }

        string _untilTimeDifference;

        /// <summary>
        /// Gets or sets the value of variable untilTimeDifference.
        /// </summary>
        [TestVariable("1624b396-d36d-4326-ad7c-e7cf666ae132")]
        public string untilTimeDifference
        {
            get { return _untilTimeDifference; }
            set { _untilTimeDifference = value; }
        }

        string _expectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedback.
        /// </summary>
        [TestVariable("bbe6d01d-7556-4687-9b88-ec8143a3b0fe")]
        public string expectedFeedback
        {
            get { return _expectedFeedback; }
            set { _expectedFeedback = value; }
        }

        string _bulletinSeed;

        /// <summary>
        /// Gets or sets the value of variable bulletinSeed.
        /// </summary>
        [TestVariable("3d30c792-5845-415a-91a2-f0e5d9d49942")]
        public string bulletinSeed
        {
            get { return _bulletinSeed; }
            set { _bulletinSeed = value; }
        }

        string _pressComplete;

        /// <summary>
        /// Gets or sets the value of variable pressComplete.
        /// </summary>
        [TestVariable("e1e7277b-e9e0-4b32-804f-e03d87272e9d")]
        public string pressComplete
        {
            get { return _pressComplete; }
            set { _pressComplete = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_InputBulletins.NS_InputExcessiveDimensionNoticeBulletin(bulletinSeed, district, trainSeed, milepost1, milepost2, heightFeet, heightInches, widthFeet, widthInches, weight, tlcFileNumber, effectiveTimeDifference, untilTimeDifference, expectedFeedback, ValueConverter.ArgumentFromString<bool>("pressComplete", pressComplete));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
