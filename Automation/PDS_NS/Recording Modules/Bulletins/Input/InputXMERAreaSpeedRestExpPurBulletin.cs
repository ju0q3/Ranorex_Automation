///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Bulletins.Input
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The InputXMERAreaSpeedRestExpPurBulletin recording.
    /// </summary>
    [TestModule("d3f3379c-52de-46e5-9740-95791991a4fd", ModuleType.Recording, 1)]
    public partial class InputXMERAreaSpeedRestExpPurBulletin : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static InputXMERAreaSpeedRestExpPurBulletin instance = new InputXMERAreaSpeedRestExpPurBulletin();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InputXMERAreaSpeedRestExpPurBulletin()
        {
            bulletinSeed = "";
            district = "";
            between = "";
            and = "";
            track = "";
            maximumSpeed = "";
            account = "";
            issuedBy = "";
            effectiveTimeDifference = "";
            untilTimeDifference = "";
            nearMilepost = "";
            expectedFeedback = "";
            pressComplete = "False";
            closeBulletinRelayForm = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InputXMERAreaSpeedRestExpPurBulletin Instance
        {
            get { return instance; }
        }

#region Variables

        string _bulletinSeed;

        /// <summary>
        /// Gets or sets the value of variable bulletinSeed.
        /// </summary>
        [TestVariable("7ce4872c-b117-4aae-b47b-4004f5da6f90")]
        public string bulletinSeed
        {
            get { return _bulletinSeed; }
            set { _bulletinSeed = value; }
        }

        string _district;

        /// <summary>
        /// Gets or sets the value of variable district.
        /// </summary>
        [TestVariable("03fe3ab1-80ed-4f02-921a-08d71cdc76db")]
        public string district
        {
            get { return _district; }
            set { _district = value; }
        }

        string _between;

        /// <summary>
        /// Gets or sets the value of variable between.
        /// </summary>
        [TestVariable("9123972a-7f64-4ed1-884b-f2142e8fc3e3")]
        public string between
        {
            get { return _between; }
            set { _between = value; }
        }

        string _and;

        /// <summary>
        /// Gets or sets the value of variable and.
        /// </summary>
        [TestVariable("13db1828-e39d-4cd3-8917-d1cabe099693")]
        public string and
        {
            get { return _and; }
            set { _and = value; }
        }

        string _track;

        /// <summary>
        /// Gets or sets the value of variable track.
        /// </summary>
        [TestVariable("2b50d8c9-9bed-4b63-9f80-7fdca668f3df")]
        public string track
        {
            get { return _track; }
            set { _track = value; }
        }

        string _maximumSpeed;

        /// <summary>
        /// Gets or sets the value of variable maximumSpeed.
        /// </summary>
        [TestVariable("9c4fc709-9e6f-4c04-bec9-eda3d37da6de")]
        public string maximumSpeed
        {
            get { return _maximumSpeed; }
            set { _maximumSpeed = value; }
        }

        string _account;

        /// <summary>
        /// Gets or sets the value of variable account.
        /// </summary>
        [TestVariable("5a5abbbd-afc6-48ec-a3f7-360e10cc36c3")]
        public string account
        {
            get { return _account; }
            set { _account = value; }
        }

        string _issuedBy;

        /// <summary>
        /// Gets or sets the value of variable issuedBy.
        /// </summary>
        [TestVariable("2c7048e2-dde6-4dba-8167-29d6059332e7")]
        public string issuedBy
        {
            get { return _issuedBy; }
            set { _issuedBy = value; }
        }

        string _effectiveTimeDifference;

        /// <summary>
        /// Gets or sets the value of variable effectiveTimeDifference.
        /// </summary>
        [TestVariable("d57656aa-0577-4753-b7e4-43b84ac956a4")]
        public string effectiveTimeDifference
        {
            get { return _effectiveTimeDifference; }
            set { _effectiveTimeDifference = value; }
        }

        string _untilTimeDifference;

        /// <summary>
        /// Gets or sets the value of variable untilTimeDifference.
        /// </summary>
        [TestVariable("f3b12351-fc30-42be-9640-3fcc45ac4256")]
        public string untilTimeDifference
        {
            get { return _untilTimeDifference; }
            set { _untilTimeDifference = value; }
        }

        string _nearMilepost;

        /// <summary>
        /// Gets or sets the value of variable nearMilepost.
        /// </summary>
        [TestVariable("92cb642d-b5be-4a8e-a02a-20f41d70b762")]
        public string nearMilepost
        {
            get { return _nearMilepost; }
            set { _nearMilepost = value; }
        }

        string _expectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedback.
        /// </summary>
        [TestVariable("a3f4c7f3-157b-465f-a3bf-e0289980b346")]
        public string expectedFeedback
        {
            get { return _expectedFeedback; }
            set { _expectedFeedback = value; }
        }

        string _pressComplete;

        /// <summary>
        /// Gets or sets the value of variable pressComplete.
        /// </summary>
        [TestVariable("3e459ca9-c4e7-4823-9ee5-66ac1d535bec")]
        public string pressComplete
        {
            get { return _pressComplete; }
            set { _pressComplete = value; }
        }

        string _closeBulletinRelayForm;

        /// <summary>
        /// Gets or sets the value of variable closeBulletinRelayForm.
        /// </summary>
        [TestVariable("a4831a3c-ff87-47f3-90ec-3ac7b24a322e")]
        public string closeBulletinRelayForm
        {
            get { return _closeBulletinRelayForm; }
            set { _closeBulletinRelayForm = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_InputBulletins.NS_InputXMERAreaSpeedRestExpPurBulletin(bulletinSeed, district, between, and, track, maximumSpeed, account, issuedBy, effectiveTimeDifference, untilTimeDifference, nearMilepost, expectedFeedback, ValueConverter.ArgumentFromString<bool>("pressComplete", pressComplete), ValueConverter.ArgumentFromString<bool>("closeBulletinRelayForm", closeBulletinRelayForm));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
