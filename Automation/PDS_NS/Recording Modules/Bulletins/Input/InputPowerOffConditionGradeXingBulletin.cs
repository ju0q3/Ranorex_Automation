///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Bulletins.Input
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The InputPowerOffConditionGradeXingBulletin recording.
    /// </summary>
    [TestModule("97553750-4ca8-401c-b2b5-d02e95894b5e", ModuleType.Recording, 1)]
    public partial class InputPowerOffConditionGradeXingBulletin : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static InputPowerOffConditionGradeXingBulletin instance = new InputPowerOffConditionGradeXingBulletin();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InputPowerOffConditionGradeXingBulletin()
        {
            bulletinSeed = "";
            district = "";
            dotCrossingId = "";
            foulingGradeCrossing = "";
            milepost = "";
            tracks = "";
            reportedBy = "";
            effectiveTimeDifference = "";
            untilTimeDifference = "";
            expectedFeedback = "";
            pressComplete = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InputPowerOffConditionGradeXingBulletin Instance
        {
            get { return instance; }
        }

#region Variables

        string _bulletinSeed;

        /// <summary>
        /// Gets or sets the value of variable bulletinSeed.
        /// </summary>
        [TestVariable("c8fe5740-8099-4da2-b5d6-7caab6fb84a5")]
        public string bulletinSeed
        {
            get { return _bulletinSeed; }
            set { _bulletinSeed = value; }
        }

        string _district;

        /// <summary>
        /// Gets or sets the value of variable district.
        /// </summary>
        [TestVariable("7bbcb90b-9dc5-4f44-a18e-95d69b30c0aa")]
        public string district
        {
            get { return _district; }
            set { _district = value; }
        }

        string _dotCrossingId;

        /// <summary>
        /// Gets or sets the value of variable dotCrossingId.
        /// </summary>
        [TestVariable("d225ea8a-bbf2-494e-aec2-5683c6c280b5")]
        public string dotCrossingId
        {
            get { return _dotCrossingId; }
            set { _dotCrossingId = value; }
        }

        string _foulingGradeCrossing;

        /// <summary>
        /// Gets or sets the value of variable foulingGradeCrossing.
        /// </summary>
        [TestVariable("652a19a1-cb67-464d-a236-dca90de0b3c2")]
        public string foulingGradeCrossing
        {
            get { return _foulingGradeCrossing; }
            set { _foulingGradeCrossing = value; }
        }

        string _milepost;

        /// <summary>
        /// Gets or sets the value of variable milepost.
        /// </summary>
        [TestVariable("4b693b60-1f77-431d-910a-7cddc0e78d59")]
        public string milepost
        {
            get { return _milepost; }
            set { _milepost = value; }
        }

        string _tracks;

        /// <summary>
        /// Gets or sets the value of variable tracks.
        /// </summary>
        [TestVariable("bb26c13c-a88b-497b-bf7a-b6e0c777dabf")]
        public string tracks
        {
            get { return _tracks; }
            set { _tracks = value; }
        }

        string _reportedBy;

        /// <summary>
        /// Gets or sets the value of variable reportedBy.
        /// </summary>
        [TestVariable("d03f50fd-fce1-4b10-b0f3-df7fddce204e")]
        public string reportedBy
        {
            get { return _reportedBy; }
            set { _reportedBy = value; }
        }

        string _effectiveTimeDifference;

        /// <summary>
        /// Gets or sets the value of variable effectiveTimeDifference.
        /// </summary>
        [TestVariable("4dba9e9b-ecfc-447e-bb32-19137962fd14")]
        public string effectiveTimeDifference
        {
            get { return _effectiveTimeDifference; }
            set { _effectiveTimeDifference = value; }
        }

        string _untilTimeDifference;

        /// <summary>
        /// Gets or sets the value of variable untilTimeDifference.
        /// </summary>
        [TestVariable("b4e44944-45ad-4598-a155-3783f2b5177c")]
        public string untilTimeDifference
        {
            get { return _untilTimeDifference; }
            set { _untilTimeDifference = value; }
        }

        string _expectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedback.
        /// </summary>
        [TestVariable("70403145-da02-4a66-8514-b2ebeef9b8f7")]
        public string expectedFeedback
        {
            get { return _expectedFeedback; }
            set { _expectedFeedback = value; }
        }

        string _pressComplete;

        /// <summary>
        /// Gets or sets the value of variable pressComplete.
        /// </summary>
        [TestVariable("13f08e4c-62de-42e1-8300-38b5e14190dc")]
        public string pressComplete
        {
            get { return _pressComplete; }
            set { _pressComplete = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_InputBulletins.NS_InputPowerOffConditionGradeXingBulletin(bulletinSeed, district, dotCrossingId, foulingGradeCrossing, milepost, tracks, reportedBy, effectiveTimeDifference, untilTimeDifference, expectedFeedback, ValueConverter.ArgumentFromString<bool>("pressComplete", pressComplete));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
