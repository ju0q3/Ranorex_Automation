///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Bulletins.Input
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The InputBadFootingPointBulletin recording.
    /// </summary>
    [TestModule("a5571356-2a8c-4212-925d-c212351e2603", ModuleType.Recording, 1)]
    public partial class InputBadFootingPointBulletin : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static InputBadFootingPointBulletin instance = new InputBadFootingPointBulletin();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InputBadFootingPointBulletin()
        {
            district = "";
            milepost = "";
            tracks = "";
            account = "";
            issuedBy = "";
            effectiveTimeDifference = "";
            untilTimeDifference = "";
            expectedFeedback = "";
            bulletinSeed = "";
            pressComplete = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InputBadFootingPointBulletin Instance
        {
            get { return instance; }
        }

#region Variables

        string _district;

        /// <summary>
        /// Gets or sets the value of variable district.
        /// </summary>
        [TestVariable("022f8fd9-6ce9-4348-9fdc-539c0d0d1dc0")]
        public string district
        {
            get { return _district; }
            set { _district = value; }
        }

        string _milepost;

        /// <summary>
        /// Gets or sets the value of variable milepost.
        /// </summary>
        [TestVariable("8a1bf16b-ee6d-4b22-83f5-d9f1b2e045a5")]
        public string milepost
        {
            get { return _milepost; }
            set { _milepost = value; }
        }

        string _tracks;

        /// <summary>
        /// Gets or sets the value of variable tracks.
        /// </summary>
        [TestVariable("a92919f4-e860-416a-8792-2bdb42d7ec7a")]
        public string tracks
        {
            get { return _tracks; }
            set { _tracks = value; }
        }

        string _account;

        /// <summary>
        /// Gets or sets the value of variable account.
        /// </summary>
        [TestVariable("694d944b-408c-49fb-91f4-5ca27f8e8f68")]
        public string account
        {
            get { return _account; }
            set { _account = value; }
        }

        string _issuedBy;

        /// <summary>
        /// Gets or sets the value of variable issuedBy.
        /// </summary>
        [TestVariable("cf08872f-9ab2-464a-a1f0-2a168c615c24")]
        public string issuedBy
        {
            get { return _issuedBy; }
            set { _issuedBy = value; }
        }

        string _effectiveTimeDifference;

        /// <summary>
        /// Gets or sets the value of variable effectiveTimeDifference.
        /// </summary>
        [TestVariable("20725f8a-aab0-4086-8875-8cf10acea31c")]
        public string effectiveTimeDifference
        {
            get { return _effectiveTimeDifference; }
            set { _effectiveTimeDifference = value; }
        }

        string _untilTimeDifference;

        /// <summary>
        /// Gets or sets the value of variable untilTimeDifference.
        /// </summary>
        [TestVariable("46f7485f-dd55-4fbe-9ed3-a1d8e77cb4e1")]
        public string untilTimeDifference
        {
            get { return _untilTimeDifference; }
            set { _untilTimeDifference = value; }
        }

        string _expectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedback.
        /// </summary>
        [TestVariable("bb27c4f4-c6cf-4bbb-bb29-87d8de2b45cb")]
        public string expectedFeedback
        {
            get { return _expectedFeedback; }
            set { _expectedFeedback = value; }
        }

        string _bulletinSeed;

        /// <summary>
        /// Gets or sets the value of variable bulletinSeed.
        /// </summary>
        [TestVariable("f1f17232-25bf-45c3-b9c0-8a3c091615c4")]
        public string bulletinSeed
        {
            get { return _bulletinSeed; }
            set { _bulletinSeed = value; }
        }

        string _pressComplete;

        /// <summary>
        /// Gets or sets the value of variable pressComplete.
        /// </summary>
        [TestVariable("feca70c9-be4d-4fd1-bd78-f7e5a77809f7")]
        public string pressComplete
        {
            get { return _pressComplete; }
            set { _pressComplete = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_InputBulletins.NS_InputBadFootingPointBulletin(bulletinSeed, district, milepost, tracks, account, issuedBy, effectiveTimeDifference, untilTimeDifference, expectedFeedback, ValueConverter.ArgumentFromString<bool>("pressComplete", pressComplete));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
