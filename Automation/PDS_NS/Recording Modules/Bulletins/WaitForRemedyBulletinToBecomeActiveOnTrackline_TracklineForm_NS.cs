///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Bulletins
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The WaitForRemedyBulletinToBecomeActiveOnTrackline_TracklineForm_NS recording.
    /// </summary>
    [TestModule("79e2304d-8c45-48df-8f74-5fd993773298", ModuleType.Recording, 1)]
    public partial class WaitForRemedyBulletinToBecomeActiveOnTrackline_TracklineForm_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static WaitForRemedyBulletinToBecomeActiveOnTrackline_TracklineForm_NS instance = new WaitForRemedyBulletinToBecomeActiveOnTrackline_TracklineForm_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public WaitForRemedyBulletinToBecomeActiveOnTrackline_TracklineForm_NS()
        {
            bulletinSeed = "";
            color = "";
            maxWaitMinutes = "0";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static WaitForRemedyBulletinToBecomeActiveOnTrackline_TracklineForm_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _bulletinSeed;

        /// <summary>
        /// Gets or sets the value of variable bulletinSeed.
        /// </summary>
        [TestVariable("18c603d0-1183-4d2b-945c-8c6bfe735377")]
        public string bulletinSeed
        {
            get { return _bulletinSeed; }
            set { _bulletinSeed = value; }
        }

        string _color;

        /// <summary>
        /// Gets or sets the value of variable color.
        /// </summary>
        [TestVariable("d68d77b5-1a74-4604-9b20-849bd86db25a")]
        public string color
        {
            get { return _color; }
            set { _color = value; }
        }

        string _maxWaitMinutes;

        /// <summary>
        /// Gets or sets the value of variable maxWaitMinutes.
        /// </summary>
        [TestVariable("c4fd8e42-84ee-4518-8cf6-27b7341441d2")]
        public string maxWaitMinutes
        {
            get { return _maxWaitMinutes; }
            set { _maxWaitMinutes = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Bulletin.NS_WaitForRemedyBulletinToBecomeActiveOnTrackline_TracklineForm(bulletinSeed, color, ValueConverter.ArgumentFromString<int>("maxWaitMinutes", maxWaitMinutes));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
