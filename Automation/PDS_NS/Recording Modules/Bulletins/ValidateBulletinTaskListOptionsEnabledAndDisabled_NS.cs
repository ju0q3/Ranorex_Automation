///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Bulletins
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateBulletinTaskListOptionsEnabledAndDisabled_NS recording.
    /// </summary>
    [TestModule("c2c1d40b-0088-44a3-917f-76c5e13bbfb5", ModuleType.Recording, 1)]
    public partial class ValidateBulletinTaskListOptionsEnabledAndDisabled_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static ValidateBulletinTaskListOptionsEnabledAndDisabled_NS instance = new ValidateBulletinTaskListOptionsEnabledAndDisabled_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateBulletinTaskListOptionsEnabledAndDisabled_NS()
        {
            description = "";
            employeeName = "";
            enabledTaskListMenuOption = "";
            disabledTaskListMenuOption = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateBulletinTaskListOptionsEnabledAndDisabled_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _description;

        /// <summary>
        /// Gets or sets the value of variable description.
        /// </summary>
        [TestVariable("4722782a-e087-4d21-8db8-24728f2d0eb8")]
        public string description
        {
            get { return _description; }
            set { _description = value; }
        }

        string _employeeName;

        /// <summary>
        /// Gets or sets the value of variable employeeName.
        /// </summary>
        [TestVariable("a211cb68-768d-49ce-a130-84893075cf97")]
        public string employeeName
        {
            get { return _employeeName; }
            set { _employeeName = value; }
        }

        string _enabledTaskListMenuOption;

        /// <summary>
        /// Gets or sets the value of variable enabledTaskListMenuOption.
        /// </summary>
        [TestVariable("a573b333-5d2c-4d01-a0fd-15e59da387fb")]
        public string enabledTaskListMenuOption
        {
            get { return _enabledTaskListMenuOption; }
            set { _enabledTaskListMenuOption = value; }
        }

        string _disabledTaskListMenuOption;

        /// <summary>
        /// Gets or sets the value of variable disabledTaskListMenuOption.
        /// </summary>
        [TestVariable("0c9433e9-7b2c-4121-be4f-84a085be2f94")]
        public string disabledTaskListMenuOption
        {
            get { return _disabledTaskListMenuOption; }
            set { _disabledTaskListMenuOption = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Miscellaneous.NS_ValidateTaskListOptionsEnabledAndDisabled(description, employeeName, enabledTaskListMenuOption, disabledTaskListMenuOption);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
