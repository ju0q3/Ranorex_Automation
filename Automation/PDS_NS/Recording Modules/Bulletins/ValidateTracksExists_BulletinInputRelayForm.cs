///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Bulletins
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateTracksExists_BulletinInputRelayForm recording.
    /// </summary>
    [TestModule("8fd8b158-26f9-4c3f-b93e-786cb1ac0a89", ModuleType.Recording, 1)]
    public partial class ValidateTracksExists_BulletinInputRelayForm : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static ValidateTracksExists_BulletinInputRelayForm instance = new ValidateTracksExists_BulletinInputRelayForm();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateTracksExists_BulletinInputRelayForm()
        {
            tracks = "";
            validateCount = "False";
            trackCount = "0";
            expectTrack = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateTracksExists_BulletinInputRelayForm Instance
        {
            get { return instance; }
        }

#region Variables

        string _tracks;

        /// <summary>
        /// Gets or sets the value of variable tracks.
        /// </summary>
        [TestVariable("26370b4f-9e18-4713-8fdb-4e04f31decbd")]
        public string tracks
        {
            get { return _tracks; }
            set { _tracks = value; }
        }

        string _validateCount;

        /// <summary>
        /// Gets or sets the value of variable validateCount.
        /// </summary>
        [TestVariable("7eb25b2d-c46a-4257-ae55-a9237e5cae8e")]
        public string validateCount
        {
            get { return _validateCount; }
            set { _validateCount = value; }
        }

        string _trackCount;

        /// <summary>
        /// Gets or sets the value of variable trackCount.
        /// </summary>
        [TestVariable("6e728b38-974c-46e0-bb6e-1998508bf878")]
        public string trackCount
        {
            get { return _trackCount; }
            set { _trackCount = value; }
        }

        string _expectTrack;

        /// <summary>
        /// Gets or sets the value of variable expectTrack.
        /// </summary>
        [TestVariable("25e13240-44cf-4c04-9d54-6768a94ae956")]
        public string expectTrack
        {
            get { return _expectTrack; }
            set { _expectTrack = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Bulletin.NS_ValidateTracksExists_BulletinInputRelayForm(tracks, ValueConverter.ArgumentFromString<bool>("validateCount", validateCount), ValueConverter.ArgumentFromString<int>("tracksCount", trackCount), ValueConverter.ArgumentFromString<bool>("expectTrack", expectTrack));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
