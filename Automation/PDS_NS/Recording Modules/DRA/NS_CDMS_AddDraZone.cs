///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.DRA
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The NS_CDMS_AddDraZone recording.
    /// </summary>
    [TestModule("91d23ddd-c4ee-4639-82cc-cd7e50ec0cc4", ModuleType.Recording, 1)]
    public partial class NS_CDMS_AddDraZone : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static NS_CDMS_AddDraZone instance = new NS_CDMS_AddDraZone();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public NS_CDMS_AddDraZone()
        {
            draName = "";
            fromOpsta = "";
            toOpsta = "";
            fromOpstaDisplay = "";
            toOpstaDisplay = "";
            fromMP = "";
            toMP = "";
            fromTerritoryId = "";
            toTerritoryId = "";
            active = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static NS_CDMS_AddDraZone Instance
        {
            get { return instance; }
        }

#region Variables

        string _draName;

        /// <summary>
        /// Gets or sets the value of variable draName.
        /// </summary>
        [TestVariable("79430aaf-d562-442f-86dc-3b9da793212b")]
        public string draName
        {
            get { return _draName; }
            set { _draName = value; }
        }

        string _fromOpsta;

        /// <summary>
        /// Gets or sets the value of variable fromOpsta.
        /// </summary>
        [TestVariable("afa1bb6b-26b9-46de-aebf-5539590973d3")]
        public string fromOpsta
        {
            get { return _fromOpsta; }
            set { _fromOpsta = value; }
        }

        string _toOpsta;

        /// <summary>
        /// Gets or sets the value of variable toOpsta.
        /// </summary>
        [TestVariable("0c0cb318-c03e-45e6-b8cb-9e5bd7a1d1ba")]
        public string toOpsta
        {
            get { return _toOpsta; }
            set { _toOpsta = value; }
        }

        string _fromOpstaDisplay;

        /// <summary>
        /// Gets or sets the value of variable fromOpstaDisplay.
        /// </summary>
        [TestVariable("035a340c-940b-4a2e-8463-4d7df3031aea")]
        public string fromOpstaDisplay
        {
            get { return _fromOpstaDisplay; }
            set { _fromOpstaDisplay = value; }
        }

        string _toOpstaDisplay;

        /// <summary>
        /// Gets or sets the value of variable toOpstaDisplay.
        /// </summary>
        [TestVariable("c89b3727-4f9f-465c-91bc-4eaa0a6f48af")]
        public string toOpstaDisplay
        {
            get { return _toOpstaDisplay; }
            set { _toOpstaDisplay = value; }
        }

        string _fromMP;

        /// <summary>
        /// Gets or sets the value of variable fromMP.
        /// </summary>
        [TestVariable("77653ebf-ac08-45f2-a7bc-8e873aa39827")]
        public string fromMP
        {
            get { return _fromMP; }
            set { _fromMP = value; }
        }

        string _toMP;

        /// <summary>
        /// Gets or sets the value of variable toMP.
        /// </summary>
        [TestVariable("3e1a6c7f-ea2d-4ff7-80a4-604388e211c0")]
        public string toMP
        {
            get { return _toMP; }
            set { _toMP = value; }
        }

        string _fromTerritoryId;

        /// <summary>
        /// Gets or sets the value of variable fromTerritoryId.
        /// </summary>
        [TestVariable("ab26e261-58fa-4bd0-bc36-fb6b8ac0ad91")]
        public string fromTerritoryId
        {
            get { return _fromTerritoryId; }
            set { _fromTerritoryId = value; }
        }

        string _toTerritoryId;

        /// <summary>
        /// Gets or sets the value of variable toTerritoryId.
        /// </summary>
        [TestVariable("6cd65f2c-5a7a-44b7-974b-361a779b8529")]
        public string toTerritoryId
        {
            get { return _toTerritoryId; }
            set { _toTerritoryId = value; }
        }

        string _active;

        /// <summary>
        /// Gets or sets the value of variable active.
        /// </summary>
        [TestVariable("8e6c1099-7b57-4131-8775-00acf3305836")]
        public string active
        {
            get { return _active; }
            set { _active = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Oracle.Code_Utils.CDMSEnvironment.insertDRAConfig(draName, fromOpsta, toOpsta, fromOpstaDisplay, toOpstaDisplay, fromMP, toMP, fromTerritoryId, toTerritoryId, active);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
