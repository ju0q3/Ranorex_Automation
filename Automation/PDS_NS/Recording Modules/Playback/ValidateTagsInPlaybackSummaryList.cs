///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Playback
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateTagsInPlaybackSummaryList recording.
    /// </summary>
    [TestModule("60ee4a3a-bb98-4337-88c1-d9dd9a0a642c", ModuleType.Recording, 1)]
    public partial class ValidateTagsInPlaybackSummaryList : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static ValidateTagsInPlaybackSummaryList instance = new ValidateTagsInPlaybackSummaryList();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateTagsInPlaybackSummaryList()
        {
            TagName = "";
            TagType = "";
            CloseForms = "True";
            Blocking_Type = "";
            Plan_Through = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateTagsInPlaybackSummaryList Instance
        {
            get { return instance; }
        }

#region Variables

        string _TagName;

        /// <summary>
        /// Gets or sets the value of variable TagName.
        /// </summary>
        [TestVariable("f42d539a-3f1c-4b1f-9dee-f985790c5f25")]
        public string TagName
        {
            get { return _TagName; }
            set { _TagName = value; }
        }

        string _TagType;

        /// <summary>
        /// Gets or sets the value of variable TagType.
        /// </summary>
        [TestVariable("0a85d102-96d1-4fba-bd59-7199bd6bd13e")]
        public string TagType
        {
            get { return _TagType; }
            set { _TagType = value; }
        }

        string _CloseForms;

        /// <summary>
        /// Gets or sets the value of variable CloseForms.
        /// </summary>
        [TestVariable("42ebe6b1-d440-4f20-bc24-00e3857632c2")]
        public string CloseForms
        {
            get { return _CloseForms; }
            set { _CloseForms = value; }
        }

        string _Blocking_Type;

        /// <summary>
        /// Gets or sets the value of variable Blocking_Type.
        /// </summary>
        [TestVariable("7dd1b403-c290-42f2-a61c-e7c97e134f80")]
        public string Blocking_Type
        {
            get { return _Blocking_Type; }
            set { _Blocking_Type = value; }
        }

        string _Plan_Through;

        /// <summary>
        /// Gets or sets the value of variable Plan_Through.
        /// </summary>
        [TestVariable("605bcd44-238f-42b8-b66f-c61e6bd6f021")]
        public string Plan_Through
        {
            get { return _Plan_Through; }
            set { _Plan_Through = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Playback.NS_ValidateTags_PlaybackSummaryList(TagName, TagType, Blocking_Type, ValueConverter.ArgumentFromString<bool>("closeForms", CloseForms), Plan_Through);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
