///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Trainsheet
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddConsistConstraint_NS recording.
    /// </summary>
    [TestModule("2f43a4e2-af9e-49cd-9f3e-537e61fe53ca", ModuleType.Recording, 1)]
    public partial class AddConsistConstraint_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static AddConsistConstraint_NS instance = new AddConsistConstraint_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddConsistConstraint_NS()
        {
            trainSeed = "";
            type = "";
            value = "";
            fromOpsta = "";
            fromPassCount = "";
            toOpsta = "";
            toPassCount = "";
            createQKS = "False";
            expectedFeedback = "";
            closeForms = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddConsistConstraint_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _trainSeed;

        /// <summary>
        /// Gets or sets the value of variable trainSeed.
        /// </summary>
        [TestVariable("d00ae6ec-6944-455c-8f57-ca9a012d3460")]
        public string trainSeed
        {
            get { return _trainSeed; }
            set { _trainSeed = value; }
        }

        string _type;

        /// <summary>
        /// Gets or sets the value of variable type.
        /// </summary>
        [TestVariable("a2597ed5-43fb-4edc-8c1a-04c24eb7e2dc")]
        public string type
        {
            get { return _type; }
            set { _type = value; }
        }

        string _value;

        /// <summary>
        /// Gets or sets the value of variable value.
        /// </summary>
        [TestVariable("e364d064-7e51-4459-8ad7-abb1d431ea38")]
        public string value
        {
            get { return _value; }
            set { _value = value; }
        }

        string _fromOpsta;

        /// <summary>
        /// Gets or sets the value of variable fromOpsta.
        /// </summary>
        [TestVariable("e2637084-1bef-43c1-a12d-005174dddc98")]
        public string fromOpsta
        {
            get { return _fromOpsta; }
            set { _fromOpsta = value; }
        }

        string _fromPassCount;

        /// <summary>
        /// Gets or sets the value of variable fromPassCount.
        /// </summary>
        [TestVariable("5ca4a6d1-1043-40e9-9a2b-76376436915d")]
        public string fromPassCount
        {
            get { return _fromPassCount; }
            set { _fromPassCount = value; }
        }

        string _toOpsta;

        /// <summary>
        /// Gets or sets the value of variable toOpsta.
        /// </summary>
        [TestVariable("e21964f7-bed1-4a6f-b9b8-208495dd4a14")]
        public string toOpsta
        {
            get { return _toOpsta; }
            set { _toOpsta = value; }
        }

        string _toPassCount;

        /// <summary>
        /// Gets or sets the value of variable toPassCount.
        /// </summary>
        [TestVariable("93b2195d-abcf-45e5-a2c3-4ed15e836bdb")]
        public string toPassCount
        {
            get { return _toPassCount; }
            set { _toPassCount = value; }
        }

        string _createQKS;

        /// <summary>
        /// Gets or sets the value of variable createQKS.
        /// </summary>
        [TestVariable("bb6815de-940b-4cba-8cf1-5681d802cb1f")]
        public string createQKS
        {
            get { return _createQKS; }
            set { _createQKS = value; }
        }

        string _expectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedback.
        /// </summary>
        [TestVariable("2b1196ad-e95f-42a2-bc21-1451c2876543")]
        public string expectedFeedback
        {
            get { return _expectedFeedback; }
            set { _expectedFeedback = value; }
        }

        string _closeForms;

        /// <summary>
        /// Gets or sets the value of variable closeForms.
        /// </summary>
        [TestVariable("f0dbcd59-562e-473c-a65f-11bb97023a16")]
        public string closeForms
        {
            get { return _closeForms; }
            set { _closeForms = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Trainsheet.addConsistConstraint(trainSeed, type, value, fromOpsta, fromPassCount, toOpsta, toPassCount, ValueConverter.ArgumentFromString<bool>("createQKS", createQKS), expectedFeedback, ValueConverter.ArgumentFromString<bool>("closeForms", closeForms));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
