///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Trainsheet
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ClickDelayRowMenuOption_Trainsheet recording.
    /// </summary>
    [TestModule("fd4ecbb0-13e5-4a32-bbc6-52f704fd7e9e", ModuleType.Recording, 1)]
    public partial class ClickDelayRowMenuOption_Trainsheet : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static ClickDelayRowMenuOption_Trainsheet instance = new ClickDelayRowMenuOption_Trainsheet();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ClickDelayRowMenuOption_Trainsheet()
        {
            trainSeed = "";
            filterFromLocation = "";
            filterSource = "";
            filterduration = "";
            filterCode = "";
            filterState = "";
            menuOption = "";
            expectedFeedback = "";
            closeForms = "False";
            filterToLocation = "";
            apply = "True";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ClickDelayRowMenuOption_Trainsheet Instance
        {
            get { return instance; }
        }

#region Variables

        string _trainSeed;

        /// <summary>
        /// Gets or sets the value of variable trainSeed.
        /// </summary>
        [TestVariable("784fbd5a-1365-4827-817b-dc56852e6ea8")]
        public string trainSeed
        {
            get { return _trainSeed; }
            set { _trainSeed = value; }
        }

        string _filterFromLocation;

        /// <summary>
        /// Gets or sets the value of variable filterFromLocation.
        /// </summary>
        [TestVariable("29dcafd4-6840-4739-a429-e3866c7fd68a")]
        public string filterFromLocation
        {
            get { return _filterFromLocation; }
            set { _filterFromLocation = value; }
        }

        string _filterSource;

        /// <summary>
        /// Gets or sets the value of variable filterSource.
        /// </summary>
        [TestVariable("fdfe2aef-bb86-4830-b628-ae230f6d5bad")]
        public string filterSource
        {
            get { return _filterSource; }
            set { _filterSource = value; }
        }

        string _filterduration;

        /// <summary>
        /// Gets or sets the value of variable filterduration.
        /// </summary>
        [TestVariable("932772d8-6fa0-406f-95b9-056a217f6c2f")]
        public string filterduration
        {
            get { return _filterduration; }
            set { _filterduration = value; }
        }

        string _filterCode;

        /// <summary>
        /// Gets or sets the value of variable filterCode.
        /// </summary>
        [TestVariable("b0fe15b2-0f15-4686-b913-cb6c7a6f67ba")]
        public string filterCode
        {
            get { return _filterCode; }
            set { _filterCode = value; }
        }

        string _filterState;

        /// <summary>
        /// Gets or sets the value of variable filterState.
        /// </summary>
        [TestVariable("6ff04ee4-2450-4de4-9a57-becea7ad0a15")]
        public string filterState
        {
            get { return _filterState; }
            set { _filterState = value; }
        }

        string _menuOption;

        /// <summary>
        /// Gets or sets the value of variable menuOption.
        /// </summary>
        [TestVariable("6f0143bd-876e-4794-b1e2-5b5a1f6897af")]
        public string menuOption
        {
            get { return _menuOption; }
            set { _menuOption = value; }
        }

        string _expectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedback.
        /// </summary>
        [TestVariable("c3819ad3-25a6-4186-bef9-4690e4caf14b")]
        public string expectedFeedback
        {
            get { return _expectedFeedback; }
            set { _expectedFeedback = value; }
        }

        string _closeForms;

        /// <summary>
        /// Gets or sets the value of variable closeForms.
        /// </summary>
        [TestVariable("31f2fe17-5460-4342-bd5c-4710234d2893")]
        public string closeForms
        {
            get { return _closeForms; }
            set { _closeForms = value; }
        }

        string _filterToLocation;

        /// <summary>
        /// Gets or sets the value of variable filterToLocation.
        /// </summary>
        [TestVariable("0f0d0668-3a20-42b2-87a2-1411efa17e8d")]
        public string filterToLocation
        {
            get { return _filterToLocation; }
            set { _filterToLocation = value; }
        }

        string _apply;

        /// <summary>
        /// Gets or sets the value of variable apply.
        /// </summary>
        [TestVariable("4955833b-8849-4cc5-a350-af0d7628b7a3")]
        public string apply
        {
            get { return _apply; }
            set { _apply = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Trainsheet.NS_ClickDelayRowMenuOption_Trainsheet(trainSeed, filterFromLocation, filterToLocation, filterSource, filterduration, filterCode, filterState, menuOption, ValueConverter.ArgumentFromString<bool>("apply", apply), expectedFeedback, ValueConverter.ArgumentFromString<bool>("closeForms", closeForms));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
