///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Trainsheet.TimeZone_Validations
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The UpdateTripPlanTime_Trainsheet_TimeZoneValidation_NS recording.
    /// </summary>
    [TestModule("a6d27f09-c135-4bcd-8636-d074a53032cc", ModuleType.Recording, 1)]
    public partial class UpdateTripPlanTime_Trainsheet_TimeZoneValidation_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static UpdateTripPlanTime_Trainsheet_TimeZoneValidation_NS instance = new UpdateTripPlanTime_Trainsheet_TimeZoneValidation_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public UpdateTripPlanTime_Trainsheet_TimeZoneValidation_NS()
        {
            trainSeed = "";
            activity = "";
            earliestArrivalTimeZone = "";
            earliestArrivalTimeOffset = "";
            latestArrivalTimeZone = "";
            latestArrivalTimeOffset = "";
            earliestDepartTimeZone = "";
            earliestDepartTimeOffset = "";
            expectedFeedback = "";
            closeForms = "False";
            useInvalidDaylightTime = "False";
            expectedFeedbackLocation = "0";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static UpdateTripPlanTime_Trainsheet_TimeZoneValidation_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _trainSeed;

        /// <summary>
        /// Gets or sets the value of variable trainSeed.
        /// </summary>
        [TestVariable("c7d974d6-d260-4075-ba99-a52dd3d64910")]
        public string trainSeed
        {
            get { return _trainSeed; }
            set { _trainSeed = value; }
        }

        string _activity;

        /// <summary>
        /// Gets or sets the value of variable activity.
        /// </summary>
        [TestVariable("a6da0244-05f6-43de-9fec-ba25d331ceae")]
        public string activity
        {
            get { return _activity; }
            set { _activity = value; }
        }

        string _earliestArrivalTimeZone;

        /// <summary>
        /// Gets or sets the value of variable earliestArrivalTimeZone.
        /// </summary>
        [TestVariable("eaa4b416-18af-4cd6-b76f-bdf7227c2980")]
        public string earliestArrivalTimeZone
        {
            get { return _earliestArrivalTimeZone; }
            set { _earliestArrivalTimeZone = value; }
        }

        string _earliestArrivalTimeOffset;

        /// <summary>
        /// Gets or sets the value of variable earliestArrivalTimeOffset.
        /// </summary>
        [TestVariable("9414cc89-2f17-44bc-ae3d-1de8621ced2c")]
        public string earliestArrivalTimeOffset
        {
            get { return _earliestArrivalTimeOffset; }
            set { _earliestArrivalTimeOffset = value; }
        }

        string _latestArrivalTimeZone;

        /// <summary>
        /// Gets or sets the value of variable latestArrivalTimeZone.
        /// </summary>
        [TestVariable("ce2fb0d0-c392-45d4-a5af-33190042d522")]
        public string latestArrivalTimeZone
        {
            get { return _latestArrivalTimeZone; }
            set { _latestArrivalTimeZone = value; }
        }

        string _latestArrivalTimeOffset;

        /// <summary>
        /// Gets or sets the value of variable latestArrivalTimeOffset.
        /// </summary>
        [TestVariable("5e887c21-c574-4f1e-9cc7-983a72945d4b")]
        public string latestArrivalTimeOffset
        {
            get { return _latestArrivalTimeOffset; }
            set { _latestArrivalTimeOffset = value; }
        }

        string _earliestDepartTimeZone;

        /// <summary>
        /// Gets or sets the value of variable earliestDepartTimeZone.
        /// </summary>
        [TestVariable("48b58ada-3482-45ea-a318-525cfa6cc442")]
        public string earliestDepartTimeZone
        {
            get { return _earliestDepartTimeZone; }
            set { _earliestDepartTimeZone = value; }
        }

        string _earliestDepartTimeOffset;

        /// <summary>
        /// Gets or sets the value of variable earliestDepartTimeOffset.
        /// </summary>
        [TestVariable("b4dcdf6a-009a-4c07-b4a9-c506f69da6ef")]
        public string earliestDepartTimeOffset
        {
            get { return _earliestDepartTimeOffset; }
            set { _earliestDepartTimeOffset = value; }
        }

        string _expectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedback.
        /// </summary>
        [TestVariable("f025d722-c479-4b16-b795-e2a0a9b3aa93")]
        public string expectedFeedback
        {
            get { return _expectedFeedback; }
            set { _expectedFeedback = value; }
        }

        string _closeForms;

        /// <summary>
        /// Gets or sets the value of variable closeForms.
        /// </summary>
        [TestVariable("5113e887-74b8-487e-9b4d-474bef62a608")]
        public string closeForms
        {
            get { return _closeForms; }
            set { _closeForms = value; }
        }

        string _useInvalidDaylightTime;

        /// <summary>
        /// Gets or sets the value of variable useInvalidDaylightTime.
        /// </summary>
        [TestVariable("4c507a21-a041-429a-9c7f-aa455faadfb1")]
        public string useInvalidDaylightTime
        {
            get { return _useInvalidDaylightTime; }
            set { _useInvalidDaylightTime = value; }
        }

        string _expectedFeedbackLocation;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedbackLocation.
        /// </summary>
        [TestVariable("22da9095-f360-44b2-b15a-11d148a9d535")]
        public string expectedFeedbackLocation
        {
            get { return _expectedFeedbackLocation; }
            set { _expectedFeedbackLocation = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Trainsheet.NS_UpdateTripPlanTime_TimeZoneValidation(trainSeed, activity, earliestArrivalTimeZone, earliestArrivalTimeOffset, latestArrivalTimeZone, latestArrivalTimeOffset, earliestDepartTimeZone, earliestDepartTimeOffset, ValueConverter.ArgumentFromString<bool>("useInvalidDaylightTime", useInvalidDaylightTime), expectedFeedback, ValueConverter.ArgumentFromString<bool>("closeForms", closeForms), ValueConverter.ArgumentFromString<int>("expectedFeedbackLocation", expectedFeedbackLocation));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
