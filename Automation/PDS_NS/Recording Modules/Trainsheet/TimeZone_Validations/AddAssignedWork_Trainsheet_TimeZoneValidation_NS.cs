///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PDS_NS.Recording_Modules.Trainsheet.TimeZone_Validations
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddAssignedWork_Trainsheet_TimeZoneValidation_NS recording.
    /// </summary>
    [TestModule("0c4f35cd-b065-42a1-8f68-69a5b48f06f9", ModuleType.Recording, 1)]
    public partial class AddAssignedWork_Trainsheet_TimeZoneValidation_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PDS_NS.PDS_NSRepository repository.
        /// </summary>
        public static global::PDS_NS.PDS_NSRepository repo = global::PDS_NS.PDS_NSRepository.Instance;

        static AddAssignedWork_Trainsheet_TimeZoneValidation_NS instance = new AddAssignedWork_Trainsheet_TimeZoneValidation_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddAssignedWork_Trainsheet_TimeZoneValidation_NS()
        {
            trainSeed = "";
            operation = "";
            Opsta = "";
            PassCount = "";
            loads = "";
            empties = "";
            tons = "";
            length = "";
            note = "";
            coal = "False";
            coalPermit = "";
            expectedFeedback = "";
            closeForms = "False";
            needDateTimeZone = "";
            coalCarsRecords = "";
            needDateTimeOffset = "0";
            completeDateTimeOffset = "0";
            completeDateTimeZone = "";
            useInvalidDaylightTime = "False";
            expectedFeedbackLocation = "0";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddAssignedWork_Trainsheet_TimeZoneValidation_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _trainSeed;

        /// <summary>
        /// Gets or sets the value of variable trainSeed.
        /// </summary>
        [TestVariable("50039a1b-fdc5-44b4-9eaa-26109405be0d")]
        public string trainSeed
        {
            get { return _trainSeed; }
            set { _trainSeed = value; }
        }

        string _operation;

        /// <summary>
        /// Gets or sets the value of variable operation.
        /// </summary>
        [TestVariable("da9f2c8c-4a40-4ed7-b0d3-6528fa4d64bb")]
        public string operation
        {
            get { return _operation; }
            set { _operation = value; }
        }

        string _Opsta;

        /// <summary>
        /// Gets or sets the value of variable Opsta.
        /// </summary>
        [TestVariable("81a2f7a4-0f42-4005-a75b-b4881ef642ed")]
        public string Opsta
        {
            get { return _Opsta; }
            set { _Opsta = value; }
        }

        string _PassCount;

        /// <summary>
        /// Gets or sets the value of variable PassCount.
        /// </summary>
        [TestVariable("82408eed-9015-4398-a354-a838bc3ec0ee")]
        public string PassCount
        {
            get { return _PassCount; }
            set { _PassCount = value; }
        }

        string _loads;

        /// <summary>
        /// Gets or sets the value of variable loads.
        /// </summary>
        [TestVariable("360fa1bd-0c90-4ccd-b131-ffafcb73ef22")]
        public string loads
        {
            get { return _loads; }
            set { _loads = value; }
        }

        string _empties;

        /// <summary>
        /// Gets or sets the value of variable empties.
        /// </summary>
        [TestVariable("7d18ea0e-3433-4d3d-ba4b-66179dc9dde0")]
        public string empties
        {
            get { return _empties; }
            set { _empties = value; }
        }

        string _tons;

        /// <summary>
        /// Gets or sets the value of variable tons.
        /// </summary>
        [TestVariable("9b909951-27af-4ea8-b671-9d1a5f727c82")]
        public string tons
        {
            get { return _tons; }
            set { _tons = value; }
        }

        string _length;

        /// <summary>
        /// Gets or sets the value of variable length.
        /// </summary>
        [TestVariable("a2573616-cbac-4781-b91b-a9a8c0d76507")]
        public string length
        {
            get { return _length; }
            set { _length = value; }
        }

        string _note;

        /// <summary>
        /// Gets or sets the value of variable note.
        /// </summary>
        [TestVariable("2dfc23ee-a324-48c8-853b-b56849fe597d")]
        public string note
        {
            get { return _note; }
            set { _note = value; }
        }

        string _coal;

        /// <summary>
        /// Gets or sets the value of variable coal.
        /// </summary>
        [TestVariable("5db6d892-6e3d-42d1-b5ec-be6a37260277")]
        public string coal
        {
            get { return _coal; }
            set { _coal = value; }
        }

        string _coalPermit;

        /// <summary>
        /// Gets or sets the value of variable coalPermit.
        /// </summary>
        [TestVariable("d8b2be56-314a-493f-b3a7-92f0146d72b8")]
        public string coalPermit
        {
            get { return _coalPermit; }
            set { _coalPermit = value; }
        }

        string _expectedFeedback;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedback.
        /// </summary>
        [TestVariable("2e84fca7-998b-4e5f-8f95-6ff67a0a2fc5")]
        public string expectedFeedback
        {
            get { return _expectedFeedback; }
            set { _expectedFeedback = value; }
        }

        string _closeForms;

        /// <summary>
        /// Gets or sets the value of variable closeForms.
        /// </summary>
        [TestVariable("2195fdf2-9d05-46d2-836c-ae6b520e27ee")]
        public string closeForms
        {
            get { return _closeForms; }
            set { _closeForms = value; }
        }

        string _needDateTimeZone;

        /// <summary>
        /// Gets or sets the value of variable needDateTimeZone.
        /// </summary>
        [TestVariable("41a327fa-e482-49a5-96cc-231c586cfda0")]
        public string needDateTimeZone
        {
            get { return _needDateTimeZone; }
            set { _needDateTimeZone = value; }
        }

        string _coalCarsRecords;

        /// <summary>
        /// Gets or sets the value of variable coalCarsRecords.
        /// </summary>
        [TestVariable("f602914c-fc16-4b6f-b345-6dae5f2e931e")]
        public string coalCarsRecords
        {
            get { return _coalCarsRecords; }
            set { _coalCarsRecords = value; }
        }

        string _needDateTimeOffset;

        /// <summary>
        /// Gets or sets the value of variable needDateTimeOffset.
        /// </summary>
        [TestVariable("056edf57-7ff8-43ed-9882-388afcc406ad")]
        public string needDateTimeOffset
        {
            get { return _needDateTimeOffset; }
            set { _needDateTimeOffset = value; }
        }

        string _completeDateTimeOffset;

        /// <summary>
        /// Gets or sets the value of variable completeDateTimeOffset.
        /// </summary>
        [TestVariable("d2ff2157-9cd1-496e-a635-a154a718ae41")]
        public string completeDateTimeOffset
        {
            get { return _completeDateTimeOffset; }
            set { _completeDateTimeOffset = value; }
        }

        string _completeDateTimeZone;

        /// <summary>
        /// Gets or sets the value of variable completeDateTimeZone.
        /// </summary>
        [TestVariable("69cd3efb-63b0-41d4-b887-3a7b700ba716")]
        public string completeDateTimeZone
        {
            get { return _completeDateTimeZone; }
            set { _completeDateTimeZone = value; }
        }

        string _useInvalidDaylightTime;

        /// <summary>
        /// Gets or sets the value of variable useInvalidDaylightTime.
        /// </summary>
        [TestVariable("701deea3-7c85-417a-808b-e2424ba85ca3")]
        public string useInvalidDaylightTime
        {
            get { return _useInvalidDaylightTime; }
            set { _useInvalidDaylightTime = value; }
        }

        string _expectedFeedbackLocation;

        /// <summary>
        /// Gets or sets the value of variable expectedFeedbackLocation.
        /// </summary>
        [TestVariable("5681c277-1694-4bb3-89bc-a4042ae650e3")]
        public string expectedFeedbackLocation
        {
            get { return _expectedFeedbackLocation; }
            set { _expectedFeedbackLocation = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UserCodeCollections.NS_Trainsheet.AddAssignedWork_Trainsheet_TimeZoneValidation(trainSeed, operation, Opsta, PassCount, loads, empties, tons, length, note, ValueConverter.ArgumentFromString<bool>("coal", coal), ValueConverter.ArgumentFromString<int>("needDateTimeOffset", needDateTimeOffset), needDateTimeZone, ValueConverter.ArgumentFromString<int>("completionDateTimeOffset", completeDateTimeOffset), completeDateTimeZone, coalPermit, coalCarsRecords, ValueConverter.ArgumentFromString<bool>("useInvalidDaylightTime", useInvalidDaylightTime), expectedFeedback, ValueConverter.ArgumentFromString<bool>("closeForms", closeForms), ValueConverter.ArgumentFromString<int>("expectedFeedbackLocation", expectedFeedbackLocation));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
