///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Env.Recording_Modules.Jenkins
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The StartPdsServer recording.
    /// </summary>
    [TestModule("afa9c9ec-a004-44b5-8df0-0ea57b2f045b", ModuleType.Recording, 1)]
    public partial class StartPdsServer : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Env.EnvRepository repository.
        /// </summary>
        public static global::Env.EnvRepository repo = global::Env.EnvRepository.Instance;

        static StartPdsServer instance = new StartPdsServer();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public StartPdsServer()
        {
            gitLabel = "";
            gitBranch = "";
            topology = "";
            division = "";
            enableJBoss = "False";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static StartPdsServer Instance
        {
            get { return instance; }
        }

#region Variables

        string _gitLabel;

        /// <summary>
        /// Gets or sets the value of variable gitLabel.
        /// </summary>
        [TestVariable("c2eea6d9-7cda-4979-bb24-651876b5a69f")]
        public string gitLabel
        {
            get { return _gitLabel; }
            set { _gitLabel = value; }
        }

        string _gitBranch;

        /// <summary>
        /// Gets or sets the value of variable gitBranch.
        /// </summary>
        [TestVariable("7940ab1e-ac90-414c-84eb-b507afc6be8b")]
        public string gitBranch
        {
            get { return _gitBranch; }
            set { _gitBranch = value; }
        }

        string _topology;

        /// <summary>
        /// Gets or sets the value of variable topology.
        /// </summary>
        [TestVariable("994fa2f6-8d4b-4346-b00e-6d92d33c327a")]
        public string topology
        {
            get { return _topology; }
            set { _topology = value; }
        }

        string _division;

        /// <summary>
        /// Gets or sets the value of variable division.
        /// </summary>
        [TestVariable("b4eecc5c-f492-472d-8125-06c37b4f77d4")]
        public string division
        {
            get { return _division; }
            set { _division = value; }
        }

        string _enableJBoss;

        /// <summary>
        /// Gets or sets the value of variable enableJBoss.
        /// </summary>
        [TestVariable("125725fd-0419-4c38-917e-d4edbc362763")]
        public string enableJBoss
        {
            get { return _enableJBoss; }
            set { _enableJBoss = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            stopAndCleanPds(gitBranch, gitLabel, topology, division, ValueConverter.ArgumentFromString<bool>("enableJBoss", enableJBoss));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
