///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace STE.Recording_Modules
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateMessageInCacheRefresh_NS recording.
    /// </summary>
    [TestModule("256a0d67-1993-41b0-844c-100cb805a9ef", ModuleType.Recording, 1)]
    public partial class ValidateMessageInCacheRefresh_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::STE.STERepository repository.
        /// </summary>
        public static global::STE.STERepository repo = global::STE.STERepository.Instance;

        static ValidateMessageInCacheRefresh_NS instance = new ValidateMessageInCacheRefresh_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateMessageInCacheRefresh_NS()
        {
            labelName = "pds2-NS2019scrumQ1S2";
            district = "Atlanta South";
            division = "div1";
            messageType = "GD";
            filters = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateMessageInCacheRefresh_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _labelName;

        /// <summary>
        /// Gets or sets the value of variable labelName.
        /// </summary>
        [TestVariable("81ef1936-fca3-4edb-90b2-8995de75a578")]
        public string labelName
        {
            get { return _labelName; }
            set { _labelName = value; }
        }

        string _district;

        /// <summary>
        /// Gets or sets the value of variable district.
        /// </summary>
        [TestVariable("3a7f99ec-b946-4b4e-97ba-56b9572e14eb")]
        public string district
        {
            get { return _district; }
            set { _district = value; }
        }

        string _division;

        /// <summary>
        /// Gets or sets the value of variable division.
        /// </summary>
        [TestVariable("1e5d69cf-0f71-4958-b76c-778601119b2e")]
        public string division
        {
            get { return _division; }
            set { _division = value; }
        }

        string _messageType;

        /// <summary>
        /// Gets or sets the value of variable messageType.
        /// </summary>
        [TestVariable("9bc833c3-3308-4287-b979-dae9f1f14678")]
        public string messageType
        {
            get { return _messageType; }
            set { _messageType = value; }
        }

        string _filters;

        /// <summary>
        /// Gets or sets the value of variable filters.
        /// </summary>
        [TestVariable("669a2462-fcfc-4440-bb0e-4d5f14524d7a")]
        public string filters
        {
            get { return _filters; }
            set { _filters = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Code_Utils.messages.CacheRefresh.ValidateMessageInCacheRefreshFunction_NS(labelName, district, division, messageType, filters);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
