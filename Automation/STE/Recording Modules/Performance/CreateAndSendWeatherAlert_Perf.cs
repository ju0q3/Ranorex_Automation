///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace STE.Recording_Modules.Performance
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CreateAndSendWeatherAlert_Perf recording.
    /// </summary>
    [TestModule("b3fb29b8-5f66-45ff-be1e-94bb32f5a95b", ModuleType.Recording, 1)]
    public partial class CreateAndSendWeatherAlert_Perf : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::STE.STERepository repository.
        /// </summary>
        public static global::STE.STERepository repo = global::STE.STERepository.Instance;

        static CreateAndSendWeatherAlert_Perf instance = new CreateAndSendWeatherAlert_Perf();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CreateAndSendWeatherAlert_Perf()
        {
            protocolId = "1";
            messageId = "WeatherAlert";
            traceId = "1";
            messageVersion = "0";
            weatherReportId = "1";
            operatorInitials = "DNA";
            state = "GA";
            division = "GULF";
            weatherMessage = "1";
            severeWeatherCode = "29";
            severeWeatherCondition = "Storm";
            severityLevel = "WATCH";
            weatherDescription = "Severe Conditions";
            weatherDetails = "Take Shelter";
            timezone = "EST";
            inEffectTimeOffset = "0";
            untilTimeOffset = "30";
            recipientId = "1";
            warningNumber = "1";
            warningVersion = "1";
            stationRecords = "||BEAUMONT|60|77|MAIN";
            hostname = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CreateAndSendWeatherAlert_Perf Instance
        {
            get { return instance; }
        }

#region Variables

        string _protocolId;

        /// <summary>
        /// Gets or sets the value of variable protocolId.
        /// </summary>
        [TestVariable("5678241f-08f0-4e7f-8f54-428f5532724e")]
        public string protocolId
        {
            get { return _protocolId; }
            set { _protocolId = value; }
        }

        string _messageId;

        /// <summary>
        /// Gets or sets the value of variable messageId.
        /// </summary>
        [TestVariable("f6bdc286-46f4-4bb2-bd1d-18c0cae1479d")]
        public string messageId
        {
            get { return _messageId; }
            set { _messageId = value; }
        }

        string _traceId;

        /// <summary>
        /// Gets or sets the value of variable traceId.
        /// </summary>
        [TestVariable("7cbecae5-102b-4769-929a-5add05559dc8")]
        public string traceId
        {
            get { return _traceId; }
            set { _traceId = value; }
        }

        string _messageVersion;

        /// <summary>
        /// Gets or sets the value of variable messageVersion.
        /// </summary>
        [TestVariable("5ad518a1-7f54-4861-8c1c-32210a7ad0e3")]
        public string messageVersion
        {
            get { return _messageVersion; }
            set { _messageVersion = value; }
        }

        string _weatherReportId;

        /// <summary>
        /// Gets or sets the value of variable weatherReportId.
        /// </summary>
        [TestVariable("6d704f8d-dd27-43d5-8b14-b4dbd9b0a610")]
        public string weatherReportId
        {
            get { return _weatherReportId; }
            set { _weatherReportId = value; }
        }

        string _operatorInitials;

        /// <summary>
        /// Gets or sets the value of variable operatorInitials.
        /// </summary>
        [TestVariable("00618a9a-d6d4-40fb-8910-a7a6ab12f776")]
        public string operatorInitials
        {
            get { return _operatorInitials; }
            set { _operatorInitials = value; }
        }

        string _state;

        /// <summary>
        /// Gets or sets the value of variable state.
        /// </summary>
        [TestVariable("82921bf3-0849-4a03-8ac3-9fa97e16adbc")]
        public string state
        {
            get { return _state; }
            set { _state = value; }
        }

        string _division;

        /// <summary>
        /// Gets or sets the value of variable division.
        /// </summary>
        [TestVariable("f4b72b47-cd05-4900-b27f-06779110bdb6")]
        public string division
        {
            get { return _division; }
            set { _division = value; }
        }

        string _weatherMessage;

        /// <summary>
        /// Gets or sets the value of variable weatherMessage.
        /// </summary>
        [TestVariable("2420e43a-d472-49ce-8acb-5850a3cbed89")]
        public string weatherMessage
        {
            get { return _weatherMessage; }
            set { _weatherMessage = value; }
        }

        string _severeWeatherCode;

        /// <summary>
        /// Gets or sets the value of variable severeWeatherCode.
        /// </summary>
        [TestVariable("8c21015b-e454-41d8-bfc2-002a1f099fc6")]
        public string severeWeatherCode
        {
            get { return _severeWeatherCode; }
            set { _severeWeatherCode = value; }
        }

        string _severeWeatherCondition;

        /// <summary>
        /// Gets or sets the value of variable severeWeatherCondition.
        /// </summary>
        [TestVariable("dbba61c9-38cf-4d01-bba5-281f18b91b9a")]
        public string severeWeatherCondition
        {
            get { return _severeWeatherCondition; }
            set { _severeWeatherCondition = value; }
        }

        string _severityLevel;

        /// <summary>
        /// Gets or sets the value of variable severityLevel.
        /// </summary>
        [TestVariable("db5273ec-2cfb-4df0-986f-52aa8ad1f5e4")]
        public string severityLevel
        {
            get { return _severityLevel; }
            set { _severityLevel = value; }
        }

        string _weatherDescription;

        /// <summary>
        /// Gets or sets the value of variable weatherDescription.
        /// </summary>
        [TestVariable("054ddedd-c51a-4779-b2c8-2642235ade52")]
        public string weatherDescription
        {
            get { return _weatherDescription; }
            set { _weatherDescription = value; }
        }

        string _weatherDetails;

        /// <summary>
        /// Gets or sets the value of variable weatherDetails.
        /// </summary>
        [TestVariable("9a5c62a7-a619-4d87-8be4-6d7553a1e0b4")]
        public string weatherDetails
        {
            get { return _weatherDetails; }
            set { _weatherDetails = value; }
        }

        string _timezone;

        /// <summary>
        /// Gets or sets the value of variable timezone.
        /// </summary>
        [TestVariable("15db4a1c-3200-4089-b2c6-1a906046dfe5")]
        public string timezone
        {
            get { return _timezone; }
            set { _timezone = value; }
        }

        string _inEffectTimeOffset;

        /// <summary>
        /// Gets or sets the value of variable inEffectTimeOffset.
        /// </summary>
        [TestVariable("8a0bc56e-54ed-4472-8016-99295a68b345")]
        public string inEffectTimeOffset
        {
            get { return _inEffectTimeOffset; }
            set { _inEffectTimeOffset = value; }
        }

        string _untilTimeOffset;

        /// <summary>
        /// Gets or sets the value of variable untilTimeOffset.
        /// </summary>
        [TestVariable("b9eed531-9e02-4e0e-acaf-d38c1f56573d")]
        public string untilTimeOffset
        {
            get { return _untilTimeOffset; }
            set { _untilTimeOffset = value; }
        }

        string _recipientId;

        /// <summary>
        /// Gets or sets the value of variable recipientId.
        /// </summary>
        [TestVariable("d8c00562-e8ff-42ab-87ba-9d82b74a1b35")]
        public string recipientId
        {
            get { return _recipientId; }
            set { _recipientId = value; }
        }

        string _warningNumber;

        /// <summary>
        /// Gets or sets the value of variable warningNumber.
        /// </summary>
        [TestVariable("aa15fd96-0c79-4013-b341-797ff8f46856")]
        public string warningNumber
        {
            get { return _warningNumber; }
            set { _warningNumber = value; }
        }

        string _warningVersion;

        /// <summary>
        /// Gets or sets the value of variable warningVersion.
        /// </summary>
        [TestVariable("7ff51eb4-ea9a-44da-b463-28b77d3fe2c1")]
        public string warningVersion
        {
            get { return _warningVersion; }
            set { _warningVersion = value; }
        }

        string _stationRecords;

        /// <summary>
        /// Gets or sets the value of variable stationRecords.
        /// </summary>
        [TestVariable("b1238b1a-3d96-4119-9ee1-2e1e777411cd")]
        public string stationRecords
        {
            get { return _stationRecords; }
            set { _stationRecords = value; }
        }

        string _hostname;

        /// <summary>
        /// Gets or sets the value of variable hostname.
        /// </summary>
        [TestVariable("611ff7c9-21ba-45bd-80ee-4e1805f781fd")]
        public string hostname
        {
            get { return _hostname; }
            set { _hostname = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Code_Utils.SendMISFileCollection_CN.createWeatherAlert(protocolId, messageId, traceId, messageVersion, weatherReportId, operatorInitials, state, division, weatherMessage, severeWeatherCode, severeWeatherCondition, severityLevel, weatherDescription, weatherDetails, timezone, inEffectTimeOffset, untilTimeOffset, recipientId, warningNumber, warningVersion, stationRecords, hostname);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
