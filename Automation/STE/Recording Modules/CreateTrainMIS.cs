///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace STE.Recording_Modules
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CreateTrainMIS recording.
    /// </summary>
    [TestModule("e15135c2-f9ff-454d-be42-91d10cbe3fb1", ModuleType.Recording, 1)]
    public partial class CreateTrainMIS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::STE.STERepository repository.
        /// </summary>
        public static global::STE.STERepository repo = global::STE.STERepository.Instance;

        static CreateTrainMIS instance = new CreateTrainMIS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CreateTrainMIS()
        {
            scac = "";
            trainSymbol = "";
            effectiveLocation = "";
            effectivePassCount = "";
            time = "";
            timeZone = "";
            timeType = "";
            trainOrigin = "";
            trainDestination = "";
            section = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CreateTrainMIS Instance
        {
            get { return instance; }
        }

#region Variables

        string _scac;

        /// <summary>
        /// Gets or sets the value of variable scac.
        /// </summary>
        [TestVariable("7394d5ef-e3e9-45b0-972c-058b64f621fa")]
        public string scac
        {
            get { return _scac; }
            set { _scac = value; }
        }

        string _trainSymbol;

        /// <summary>
        /// Gets or sets the value of variable trainSymbol.
        /// </summary>
        [TestVariable("d756e726-cd76-4f5c-b3cb-3c8a07291900")]
        public string trainSymbol
        {
            get { return _trainSymbol; }
            set { _trainSymbol = value; }
        }

        string _effectiveLocation;

        /// <summary>
        /// Gets or sets the value of variable effectiveLocation.
        /// </summary>
        [TestVariable("6d65d453-3407-4bbc-b05a-0d9ab2c225cb")]
        public string effectiveLocation
        {
            get { return _effectiveLocation; }
            set { _effectiveLocation = value; }
        }

        string _effectivePassCount;

        /// <summary>
        /// Gets or sets the value of variable effectivePassCount.
        /// </summary>
        [TestVariable("b764a1da-bda2-419a-8426-8b35906da530")]
        public string effectivePassCount
        {
            get { return _effectivePassCount; }
            set { _effectivePassCount = value; }
        }

        string _time;

        /// <summary>
        /// Gets or sets the value of variable time.
        /// </summary>
        [TestVariable("a6e384b1-cdb2-4e06-9ab9-9e1a9f318f0b")]
        public string time
        {
            get { return _time; }
            set { _time = value; }
        }

        string _timeZone;

        /// <summary>
        /// Gets or sets the value of variable timeZone.
        /// </summary>
        [TestVariable("faed11df-d826-4bca-a3f0-ddc1025caf36")]
        public string timeZone
        {
            get { return _timeZone; }
            set { _timeZone = value; }
        }

        string _timeType;

        /// <summary>
        /// Gets or sets the value of variable timeType.
        /// </summary>
        [TestVariable("be212775-70fd-4fc6-92ea-c5b7a92a5653")]
        public string timeType
        {
            get { return _timeType; }
            set { _timeType = value; }
        }

        string _trainOrigin;

        /// <summary>
        /// Gets or sets the value of variable trainOrigin.
        /// </summary>
        [TestVariable("26f41990-5006-4afe-ab80-01f1f41fe075")]
        public string trainOrigin
        {
            get { return _trainOrigin; }
            set { _trainOrigin = value; }
        }

        string _trainDestination;

        /// <summary>
        /// Gets or sets the value of variable trainDestination.
        /// </summary>
        [TestVariable("8a0c86e9-3e15-4214-b1a9-79e3ceb3ccaa")]
        public string trainDestination
        {
            get { return _trainDestination; }
            set { _trainDestination = value; }
        }

        string _section;

        /// <summary>
        /// Gets or sets the value of variable section.
        /// </summary>
        [TestVariable("36f6c36a-daff-4417-951a-5612b3eb88bf")]
        public string section
        {
            get { return _section; }
            set { _section = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Code_Utils.SendMISFileCollection_CN.createTrainSegment(scac, section, trainSymbol, effectiveLocation, effectivePassCount, timeZone, timeType, trainOrigin, trainDestination);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
