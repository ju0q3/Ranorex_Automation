///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace STE.Recording_Modules
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AutomaticEquipmentIdentifier_NS recording.
    /// </summary>
    [TestModule("553f7ade-b76a-414d-9794-efb1dceea4cc", ModuleType.Recording, 1)]
    public partial class AutomaticEquipmentIdentifier_NS : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::STE.STERepository repository.
        /// </summary>
        public static global::STE.STERepository repo = global::STE.STERepository.Instance;

        static AutomaticEquipmentIdentifier_NS instance = new AutomaticEquipmentIdentifier_NS();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AutomaticEquipmentIdentifier_NS()
        {
            scanner_reporting_key = "";
            event_start_time = "";
            event_start_time_zone = "";
            trainSeed = "";
            direction = "";
            engineSeedList = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AutomaticEquipmentIdentifier_NS Instance
        {
            get { return instance; }
        }

#region Variables

        string _scanner_reporting_key;

        /// <summary>
        /// Gets or sets the value of variable scanner_reporting_key.
        /// </summary>
        [TestVariable("d3f25da2-6863-451d-9ef0-7530765bfa53")]
        public string scanner_reporting_key
        {
            get { return _scanner_reporting_key; }
            set { _scanner_reporting_key = value; }
        }

        string _event_start_time;

        /// <summary>
        /// Gets or sets the value of variable event_start_time.
        /// </summary>
        [TestVariable("947c8a31-32e2-48c2-9ad4-1530a63c2fff")]
        public string event_start_time
        {
            get { return _event_start_time; }
            set { _event_start_time = value; }
        }

        string _event_start_time_zone;

        /// <summary>
        /// Gets or sets the value of variable event_start_time_zone.
        /// </summary>
        [TestVariable("eb4b5b0d-b96d-4a80-b4bb-630148bc51de")]
        public string event_start_time_zone
        {
            get { return _event_start_time_zone; }
            set { _event_start_time_zone = value; }
        }

        string _trainSeed;

        /// <summary>
        /// Gets or sets the value of variable trainSeed.
        /// </summary>
        [TestVariable("3a312c91-001e-4ee2-926b-fca2103ed6ce")]
        public string trainSeed
        {
            get { return _trainSeed; }
            set { _trainSeed = value; }
        }

        string _direction;

        /// <summary>
        /// Gets or sets the value of variable direction.
        /// </summary>
        [TestVariable("79de3dd6-8146-4f9a-af0f-6cd4d7e3fc71")]
        public string direction
        {
            get { return _direction; }
            set { _direction = value; }
        }

        string _engineSeedList;

        /// <summary>
        /// Gets or sets the value of variable engineSeedList.
        /// </summary>
        [TestVariable("431114f4-c498-4afd-b0f9-ad5b30fd201f")]
        public string engineSeedList
        {
            get { return _engineSeedList; }
            set { _engineSeedList = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Code_Utils.SendMISFileCollection_NS.NS_AutomaticEquipmentIdentifier(scanner_reporting_key, event_start_time, event_start_time_zone, direction, trainSeed, engineSeedList);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
