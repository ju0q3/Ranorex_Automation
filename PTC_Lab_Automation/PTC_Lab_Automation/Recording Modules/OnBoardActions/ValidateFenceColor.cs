///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PTC_Lab_Automation.Recording_Modules.OnBoardActions
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateFenceColor recording.
    /// </summary>
    [TestModule("52471eec-c856-4e76-932e-f4f7d80d8ef0", ModuleType.Recording, 1)]
    public partial class ValidateFenceColor : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PTC_Lab_Automation.Test_ExecutionRepository repository.
        /// </summary>
        public static global::PTC_Lab_Automation.Test_ExecutionRepository repo = global::PTC_Lab_Automation.Test_ExecutionRepository.Instance;

        static ValidateFenceColor instance = new ValidateFenceColor();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateFenceColor()
        {
            milepost = "";
            milepostOffset = "";
            fenceOrTrackPositions = "";
            color = "";
            direction = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateFenceColor Instance
        {
            get { return instance; }
        }

#region Variables

        string _milepost;

        /// <summary>
        /// Gets or sets the value of variable milepost.
        /// </summary>
        [TestVariable("54b5bc3d-7516-465d-bee0-aa6e6114016a")]
        public string milepost
        {
            get { return _milepost; }
            set { _milepost = value; }
        }

        string _milepostOffset;

        /// <summary>
        /// Gets or sets the value of variable milepostOffset.
        /// </summary>
        [TestVariable("4cc51210-549f-4556-b1ce-f5686a747c5c")]
        public string milepostOffset
        {
            get { return _milepostOffset; }
            set { _milepostOffset = value; }
        }

        string _fenceOrTrackPositions;

        /// <summary>
        /// Gets or sets the value of variable fenceOrTrackPositions.
        /// </summary>
        [TestVariable("6eeaf7aa-f75f-45a4-a709-840c0864e1a7")]
        public string fenceOrTrackPositions
        {
            get { return _fenceOrTrackPositions; }
            set { _fenceOrTrackPositions = value; }
        }

        string _color;

        /// <summary>
        /// Gets or sets the value of variable color.
        /// </summary>
        [TestVariable("70e4bdee-a16a-4838-a517-596a9b4ee55c")]
        public string color
        {
            get { return _color; }
            set { _color = value; }
        }

        string _direction;

        /// <summary>
        /// Gets or sets the value of variable direction.
        /// </summary>
        [TestVariable("74f6f32a-1a80-4916-841f-053cb9e55c8a")]
        public string direction
        {
            get { return _direction; }
            set { _direction = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            ValidateFenceColor_OnBoard(milepost, milepostOffset, direction, fenceOrTrackPositions, color);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
