///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PTC_Lab_Automation.Recording_Modules.OnBoardActions
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateBulletinText_WithoutPrompt recording.
    /// </summary>
    [TestModule("84681361-d9c8-4564-b8e3-f277d26d0d3c", ModuleType.Recording, 1)]
    public partial class ValidateBulletinText_WithoutPrompt : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PTC_Lab_Automation.Test_ExecutionRepository repository.
        /// </summary>
        public static global::PTC_Lab_Automation.Test_ExecutionRepository repo = global::PTC_Lab_Automation.Test_ExecutionRepository.Instance;

        static ValidateBulletinText_WithoutPrompt instance = new ValidateBulletinText_WithoutPrompt();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateBulletinText_WithoutPrompt()
        {
            ocrText = "";
            functionalArea = "";
            zoom = "";
            validateExists = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateBulletinText_WithoutPrompt Instance
        {
            get { return instance; }
        }

#region Variables

        string _ocrText;

        /// <summary>
        /// Gets or sets the value of variable ocrText.
        /// </summary>
        [TestVariable("4b806fa0-a442-46e1-a1b2-fa141fbbd25c")]
        public string ocrText
        {
            get { return _ocrText; }
            set { _ocrText = value; }
        }

        string _functionalArea;

        /// <summary>
        /// Gets or sets the value of variable functionalArea.
        /// </summary>
        [TestVariable("595fef86-37e8-4f4a-b77c-7c80539e2bea")]
        public string functionalArea
        {
            get { return _functionalArea; }
            set { _functionalArea = value; }
        }

        string _zoom;

        /// <summary>
        /// Gets or sets the value of variable zoom.
        /// </summary>
        [TestVariable("80f5a6b2-19d1-404a-8e5c-6d893402953b")]
        public string zoom
        {
            get { return _zoom; }
            set { _zoom = value; }
        }

        string _validateExists;

        /// <summary>
        /// Gets or sets the value of variable validateExists.
        /// </summary>
        [TestVariable("be83c763-63e0-4c69-8d2b-9df77ce6fb37")]
        public string validateExists
        {
            get { return _validateExists; }
            set { _validateExists = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            ValidateBulletinTextWithoutPrompt_OnBoard(ocrText, functionalArea, zoom, validateExists);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
