///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PTC_Lab_Automation.Recording_Modules.OnBoardActions
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The BannerVerify recording.
    /// </summary>
    [TestModule("3c1305d1-84b3-4206-99f2-85156a678366", ModuleType.Recording, 1)]
    public partial class BannerVerify : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PTC_Lab_Automation.Test_ExecutionRepository repository.
        /// </summary>
        public static global::PTC_Lab_Automation.Test_ExecutionRepository repo = global::PTC_Lab_Automation.Test_ExecutionRepository.Instance;

        static BannerVerify instance = new BannerVerify();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public BannerVerify()
        {
            banner = "";
            textReplace1 = "";
            textReplace2 = "";
            textReplace3 = "";
            textReplace4 = "";
            textReplacement1Type = "";
            textReplacement2Type = "";
            textReplacement3Type = "";
            textReplacement4Type = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static BannerVerify Instance
        {
            get { return instance; }
        }

#region Variables

        string _banner;

        /// <summary>
        /// Gets or sets the value of variable banner.
        /// </summary>
        [TestVariable("d399efdb-afc2-41c4-a4c1-75715c34cbdd")]
        public string banner
        {
            get { return _banner; }
            set { _banner = value; }
        }

        string _textReplace1;

        /// <summary>
        /// Gets or sets the value of variable textReplace1.
        /// </summary>
        [TestVariable("80abb423-a1e4-44cf-bb82-3a9d98b46467")]
        public string textReplace1
        {
            get { return _textReplace1; }
            set { _textReplace1 = value; }
        }

        string _textReplace2;

        /// <summary>
        /// Gets or sets the value of variable textReplace2.
        /// </summary>
        [TestVariable("08651e31-1706-4ab1-aedc-3c19d1c01c0c")]
        public string textReplace2
        {
            get { return _textReplace2; }
            set { _textReplace2 = value; }
        }

        string _textReplace3;

        /// <summary>
        /// Gets or sets the value of variable textReplace3.
        /// </summary>
        [TestVariable("1d4a9476-1bc7-43ce-8f7b-f6b6f61a5e08")]
        public string textReplace3
        {
            get { return _textReplace3; }
            set { _textReplace3 = value; }
        }

        string _textReplace4;

        /// <summary>
        /// Gets or sets the value of variable textReplace4.
        /// </summary>
        [TestVariable("554030ca-a323-4e9b-8001-78a672642593")]
        public string textReplace4
        {
            get { return _textReplace4; }
            set { _textReplace4 = value; }
        }

        string _textReplacement1Type;

        /// <summary>
        /// Gets or sets the value of variable textReplacement1Type.
        /// </summary>
        [TestVariable("1b2119b4-47ea-4a1f-a062-60402e70f875")]
        public string textReplacement1Type
        {
            get { return _textReplacement1Type; }
            set { _textReplacement1Type = value; }
        }

        string _textReplacement2Type;

        /// <summary>
        /// Gets or sets the value of variable textReplacement2Type.
        /// </summary>
        [TestVariable("a184320b-b277-45eb-868a-a78b0dde5745")]
        public string textReplacement2Type
        {
            get { return _textReplacement2Type; }
            set { _textReplacement2Type = value; }
        }

        string _textReplacement3Type;

        /// <summary>
        /// Gets or sets the value of variable textReplacement3Type.
        /// </summary>
        [TestVariable("a4f36ac3-69a8-4486-ad2f-5dafc95d5e79")]
        public string textReplacement3Type
        {
            get { return _textReplacement3Type; }
            set { _textReplacement3Type = value; }
        }

        string _textReplacement4Type;

        /// <summary>
        /// Gets or sets the value of variable textReplacement4Type.
        /// </summary>
        [TestVariable("96b685fb-b73f-42a0-a8dd-055df4e33947")]
        public string textReplacement4Type
        {
            get { return _textReplacement4Type; }
            set { _textReplacement4Type = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            banner = UserCodeCollections.Utilities.SubstituteStringValues(banner, textReplace1, textReplacement1Type, textReplace2, textReplacement2Type, textReplace3, textReplacement3Type, textReplace4, textReplacement4Type);
            Delay.Milliseconds(0);
            
            BannerVerify_Onboard(banner);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
